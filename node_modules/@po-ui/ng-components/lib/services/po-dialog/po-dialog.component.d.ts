import { ComponentRef, OnDestroy, OnInit } from '@angular/core';
import { PoDialogAlertLiterals } from './interfaces/po-dialog-alert-literals.interface';
import { PoDialogAlertOptions, PoDialogConfirmOptions } from './interfaces/po-dialog.interface';
import { PoDialogConfirmLiterals } from './interfaces/po-dialog-confirm-literals.interface';
import { PoDialogType } from './po-dialog.enum';
import { PoModalAction } from '../../components/po-modal/po-modal-action.interface';
import { PoModalComponent } from '../../components/po-modal/po-modal.component';
import * as ɵngcc0 from '@angular/core';
export declare const poDialogAlertLiteralsDefault: {
    en: PoDialogAlertLiterals;
    es: PoDialogAlertLiterals;
    pt: PoDialogAlertLiterals;
    ru: PoDialogAlertLiterals;
};
export declare const poDialogConfirmLiteralsDefault: {
    en: PoDialogConfirmLiterals;
    es: PoDialogConfirmLiterals;
    pt: PoDialogConfirmLiterals;
    ru: PoDialogConfirmLiterals;
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que serve como container do po-dialog.service
 */
export declare class PoDialogComponent implements OnDestroy, OnInit {
    poModal: PoModalComponent;
    title: string;
    message: string;
    primaryAction: PoModalAction;
    secondaryAction: PoModalAction;
    literalsAlert: PoDialogAlertLiterals;
    literalsConfirm: PoDialogConfirmLiterals;
    private componentRef;
    private closeSubscription;
    ngOnDestroy(): void;
    ngOnInit(): void;
    close(): void;
    destroy(): void;
    configDialog(primaryLabel?: any, primaryAction?: any, secondaryLabel?: any, secondaryAction?: any): void;
    open(dialogOptions: PoDialogConfirmOptions | PoDialogAlertOptions, dialogType: PoDialogType, componentRef?: ComponentRef<PoDialogComponent>): void;
    private setDialogLiterals;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDialogComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDialogComponent, "ng-component", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlhbG9nLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1kaWFsb2cuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudFJlZiwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvRGlhbG9nQWxlcnRMaXRlcmFscyB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1kaWFsb2ctYWxlcnQtbGl0ZXJhbHMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRGlhbG9nQWxlcnRPcHRpb25zLCBQb0RpYWxvZ0NvbmZpcm1PcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzL3BvLWRpYWxvZy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9EaWFsb2dDb25maXJtTGl0ZXJhbHMgfSBmcm9tICcuL2ludGVyZmFjZXMvcG8tZGlhbG9nLWNvbmZpcm0tbGl0ZXJhbHMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRGlhbG9nVHlwZSB9IGZyb20gJy4vcG8tZGlhbG9nLmVudW0nO1xuaW1wb3J0IHsgUG9Nb2RhbEFjdGlvbiB9IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvcG8tbW9kYWwvcG8tbW9kYWwtYWN0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb01vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9wby1tb2RhbC9wby1tb2RhbC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgcG9EaWFsb2dBbGVydExpdGVyYWxzRGVmYXVsdDoge1xuICAgIGVuOiBQb0RpYWxvZ0FsZXJ0TGl0ZXJhbHM7XG4gICAgZXM6IFBvRGlhbG9nQWxlcnRMaXRlcmFscztcbiAgICBwdDogUG9EaWFsb2dBbGVydExpdGVyYWxzO1xuICAgIHJ1OiBQb0RpYWxvZ0FsZXJ0TGl0ZXJhbHM7XG59O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgcG9EaWFsb2dDb25maXJtTGl0ZXJhbHNEZWZhdWx0OiB7XG4gICAgZW46IFBvRGlhbG9nQ29uZmlybUxpdGVyYWxzO1xuICAgIGVzOiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcbiAgICBwdDogUG9EaWFsb2dDb25maXJtTGl0ZXJhbHM7XG4gICAgcnU6IFBvRGlhbG9nQ29uZmlybUxpdGVyYWxzO1xufTtcbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgc2VydmUgY29tbyBjb250YWluZXIgZG8gcG8tZGlhbG9nLnNlcnZpY2VcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9EaWFsb2dDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gICAgcG9Nb2RhbDogUG9Nb2RhbENvbXBvbmVudDtcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IHN0cmluZztcbiAgICBwcmltYXJ5QWN0aW9uOiBQb01vZGFsQWN0aW9uO1xuICAgIHNlY29uZGFyeUFjdGlvbjogUG9Nb2RhbEFjdGlvbjtcbiAgICBsaXRlcmFsc0FsZXJ0OiBQb0RpYWxvZ0FsZXJ0TGl0ZXJhbHM7XG4gICAgbGl0ZXJhbHNDb25maXJtOiBQb0RpYWxvZ0NvbmZpcm1MaXRlcmFscztcbiAgICBwcml2YXRlIGNvbXBvbmVudFJlZjtcbiAgICBwcml2YXRlIGNsb3NlU3Vic2NyaXB0aW9uO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjbG9zZSgpOiB2b2lkO1xuICAgIGRlc3Ryb3koKTogdm9pZDtcbiAgICBjb25maWdEaWFsb2cocHJpbWFyeUxhYmVsPzogYW55LCBwcmltYXJ5QWN0aW9uPzogYW55LCBzZWNvbmRhcnlMYWJlbD86IGFueSwgc2Vjb25kYXJ5QWN0aW9uPzogYW55KTogdm9pZDtcbiAgICBvcGVuKGRpYWxvZ09wdGlvbnM6IFBvRGlhbG9nQ29uZmlybU9wdGlvbnMgfCBQb0RpYWxvZ0FsZXJ0T3B0aW9ucywgZGlhbG9nVHlwZTogUG9EaWFsb2dUeXBlLCBjb21wb25lbnRSZWY/OiBDb21wb25lbnRSZWY8UG9EaWFsb2dDb21wb25lbnQ+KTogdm9pZDtcbiAgICBwcml2YXRlIHNldERpYWxvZ0xpdGVyYWxzO1xufVxuIl19