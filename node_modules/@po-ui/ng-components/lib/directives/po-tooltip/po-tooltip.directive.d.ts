import { ElementRef, OnInit, Renderer2 } from '@angular/core';
import { PoTooltipBaseDirective } from './po-tooltip-base.directive';
import { PoTooltipControlPositionService } from './po-tooltip-control-position.service';
/**
 * @docsExtends PoTooltipBaseDirective
 *
 * @example
 *
 * <example name="po-tooltip-basic" title="PO Tooltip Basic" >
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.html"> </file>
 *  <file name="sample-po-tooltip-basic/sample-po-tooltip-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-labs" title="PO Tooltip Labs" >
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.html"> </file>
 *  <file name="sample-po-tooltip-labs/sample-po-tooltip-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tooltip-new-user" title="PO Tooltip - New User" >
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.html"> </file>
 *  <file name="sample-po-tooltip-new-user/sample-po-tooltip-new-user.component.ts"> </file>
 * </example>
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTooltipDirective extends PoTooltipBaseDirective implements OnInit {
    private elementRef;
    private renderer;
    private poControlPosition;
    private arrowDirection;
    private divArrow;
    private divContent;
    private isHidden;
    private lastTooltipText;
    private textContent;
    private tooltipContent;
    private tooltipOffset;
    private eventListenerFunction;
    constructor(elementRef: ElementRef, renderer: Renderer2, poControlPosition: PoTooltipControlPositionService);
    ngOnInit(): void;
    onMouseEnter(): void;
    onMouseLeave(): void;
    private addArrow;
    private addScrollEventListener;
    private createTooltip;
    private initScrollEventListenerFunction;
    private hideTooltip;
    private removeArrow;
    private removeScrollEventListener;
    private showTooltip;
    private updateTextContent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTooltipDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoTooltipDirective, "[p-tooltip]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbHRpcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicG8tdG9vbHRpcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9Ub29sdGlwQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vcG8tdG9vbHRpcC1iYXNlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQb1Rvb2x0aXBDb250cm9sUG9zaXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9wby10b29sdGlwLWNvbnRyb2wtcG9zaXRpb24uc2VydmljZSc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb1Rvb2x0aXBCYXNlRGlyZWN0aXZlXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdG9vbHRpcC1iYXNpY1wiIHRpdGxlPVwiUE8gVG9vbHRpcCBCYXNpY1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtYmFzaWMvc2FtcGxlLXBvLXRvb2x0aXAtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdG9vbHRpcC1iYXNpYy9zYW1wbGUtcG8tdG9vbHRpcC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby10b29sdGlwLWxhYnNcIiB0aXRsZT1cIlBPIFRvb2x0aXAgTGFic1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtbGFicy9zYW1wbGUtcG8tdG9vbHRpcC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtbGFicy9zYW1wbGUtcG8tdG9vbHRpcC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRvb2x0aXAtbmV3LXVzZXJcIiB0aXRsZT1cIlBPIFRvb2x0aXAgLSBOZXcgVXNlclwiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRvb2x0aXAtbmV3LXVzZXIvc2FtcGxlLXBvLXRvb2x0aXAtbmV3LXVzZXIuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdG9vbHRpcC1uZXctdXNlci9zYW1wbGUtcG8tdG9vbHRpcC1uZXctdXNlci5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9Ub29sdGlwRGlyZWN0aXZlIGV4dGVuZHMgUG9Ub29sdGlwQmFzZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBwb0NvbnRyb2xQb3NpdGlvbjtcbiAgICBwcml2YXRlIGFycm93RGlyZWN0aW9uO1xuICAgIHByaXZhdGUgZGl2QXJyb3c7XG4gICAgcHJpdmF0ZSBkaXZDb250ZW50O1xuICAgIHByaXZhdGUgaXNIaWRkZW47XG4gICAgcHJpdmF0ZSBsYXN0VG9vbHRpcFRleHQ7XG4gICAgcHJpdmF0ZSB0ZXh0Q29udGVudDtcbiAgICBwcml2YXRlIHRvb2x0aXBDb250ZW50O1xuICAgIHByaXZhdGUgdG9vbHRpcE9mZnNldDtcbiAgICBwcml2YXRlIGV2ZW50TGlzdGVuZXJGdW5jdGlvbjtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCBwb0NvbnRyb2xQb3NpdGlvbjogUG9Ub29sdGlwQ29udHJvbFBvc2l0aW9uU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBvbk1vdXNlRW50ZXIoKTogdm9pZDtcbiAgICBvbk1vdXNlTGVhdmUoKTogdm9pZDtcbiAgICBwcml2YXRlIGFkZEFycm93O1xuICAgIHByaXZhdGUgYWRkU2Nyb2xsRXZlbnRMaXN0ZW5lcjtcbiAgICBwcml2YXRlIGNyZWF0ZVRvb2x0aXA7XG4gICAgcHJpdmF0ZSBpbml0U2Nyb2xsRXZlbnRMaXN0ZW5lckZ1bmN0aW9uO1xuICAgIHByaXZhdGUgaGlkZVRvb2x0aXA7XG4gICAgcHJpdmF0ZSByZW1vdmVBcnJvdztcbiAgICBwcml2YXRlIHJlbW92ZVNjcm9sbEV2ZW50TGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBzaG93VG9vbHRpcDtcbiAgICBwcml2YXRlIHVwZGF0ZVRleHRDb250ZW50O1xufVxuIl19