import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { PoNavbarBaseComponent } from './po-navbar-base.component';
import { PoNavbarItemsComponent } from './po-navbar-items/po-navbar-items.component';
/**
 * @docsExtends PoNavbarBaseComponent
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoNavbarComponent extends PoNavbarBaseComponent implements AfterViewInit, OnDestroy {
    private renderer;
    private builder;
    private changeDetector;
    disableRight: boolean;
    showItemsNavigation: boolean;
    private mediaQuery;
    private offset;
    private player;
    private menuItems;
    protected windowResizeListener: () => void;
    get navbarItemNavigationDisableLeft(): boolean;
    get navbarItemNavigationDisableRight(): boolean;
    navbarItemsElement: ElementRef;
    navbarItems: PoNavbarItemsComponent;
    constructor(renderer: Renderer2, builder: AnimationBuilder, changeDetector: ChangeDetectorRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    navigateItems(orientation: string): void;
    private allNavbarItemsWidth;
    private animate;
    private buildTransitionAnimation;
    private changeNavbarMenuItems;
    private calculateLeftNavigation;
    private calculateRightNavigation;
    private displayItemsNavigation;
    private initNavbarMenu;
    private navbarItemsWidth;
    private navigateLeft;
    private navigateRight;
    private onMediaQueryChange;
    private setOffsetToZero;
    private validateMaxOffset;
    protected validateMenuLogo(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoNavbarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoNavbarComponent, "po-navbar", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbmF2YmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1uYXZiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBQb05hdmJhckJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLW5hdmJhci1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb05hdmJhckl0ZW1zQ29tcG9uZW50IH0gZnJvbSAnLi9wby1uYXZiYXItaXRlbXMvcG8tbmF2YmFyLWl0ZW1zLmNvbXBvbmVudCc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb05hdmJhckJhc2VDb21wb25lbnRcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9OYXZiYXJDb21wb25lbnQgZXh0ZW5kcyBQb05hdmJhckJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgcHJpdmF0ZSBidWlsZGVyO1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I7XG4gICAgZGlzYWJsZVJpZ2h0OiBib29sZWFuO1xuICAgIHNob3dJdGVtc05hdmlnYXRpb246IGJvb2xlYW47XG4gICAgcHJpdmF0ZSBtZWRpYVF1ZXJ5O1xuICAgIHByaXZhdGUgb2Zmc2V0O1xuICAgIHByaXZhdGUgcGxheWVyO1xuICAgIHByaXZhdGUgbWVudUl0ZW1zO1xuICAgIHByb3RlY3RlZCB3aW5kb3dSZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcbiAgICBnZXQgbmF2YmFySXRlbU5hdmlnYXRpb25EaXNhYmxlTGVmdCgpOiBib29sZWFuO1xuICAgIGdldCBuYXZiYXJJdGVtTmF2aWdhdGlvbkRpc2FibGVSaWdodCgpOiBib29sZWFuO1xuICAgIG5hdmJhckl0ZW1zRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBuYXZiYXJJdGVtczogUG9OYXZiYXJJdGVtc0NvbXBvbmVudDtcbiAgICBjb25zdHJ1Y3RvcihyZW5kZXJlcjogUmVuZGVyZXIyLCBidWlsZGVyOiBBbmltYXRpb25CdWlsZGVyLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmF2aWdhdGVJdGVtcyhvcmllbnRhdGlvbjogc3RyaW5nKTogdm9pZDtcbiAgICBwcml2YXRlIGFsbE5hdmJhckl0ZW1zV2lkdGg7XG4gICAgcHJpdmF0ZSBhbmltYXRlO1xuICAgIHByaXZhdGUgYnVpbGRUcmFuc2l0aW9uQW5pbWF0aW9uO1xuICAgIHByaXZhdGUgY2hhbmdlTmF2YmFyTWVudUl0ZW1zO1xuICAgIHByaXZhdGUgY2FsY3VsYXRlTGVmdE5hdmlnYXRpb247XG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVSaWdodE5hdmlnYXRpb247XG4gICAgcHJpdmF0ZSBkaXNwbGF5SXRlbXNOYXZpZ2F0aW9uO1xuICAgIHByaXZhdGUgaW5pdE5hdmJhck1lbnU7XG4gICAgcHJpdmF0ZSBuYXZiYXJJdGVtc1dpZHRoO1xuICAgIHByaXZhdGUgbmF2aWdhdGVMZWZ0O1xuICAgIHByaXZhdGUgbmF2aWdhdGVSaWdodDtcbiAgICBwcml2YXRlIG9uTWVkaWFRdWVyeUNoYW5nZTtcbiAgICBwcml2YXRlIHNldE9mZnNldFRvWmVybztcbiAgICBwcml2YXRlIHZhbGlkYXRlTWF4T2Zmc2V0O1xuICAgIHByb3RlY3RlZCB2YWxpZGF0ZU1lbnVMb2dvKCk6IHZvaWQ7XG59XG4iXX0=