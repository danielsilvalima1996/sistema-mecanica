import { PoToolbarAction } from './po-toolbar-action.interface';
import { PoToolbarProfile } from './po-toolbar-profile/po-toolbar-profile.interface';
/**
 * @description
 *
 * O componente `po-toolbar` é um cabeçalho para o título da aplicação e informações de usuário e notificações quando houver necessidade.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoToolbarBaseComponent {
    private _notificationNumber?;
    /**
     * @optional
     *
     * @description
     *
     * Define uma lista de ações que serão exibidas ao clicar no ícone declarado em `p-actions-icon`.
     */
    actions?: Array<PoToolbarAction>;
    /**
     * @optional
     *
     * @description
     *
     * Define um [ícone](/guides/icons) para a propriedade `p-actions`.
     *
     * > Caso não haja ações definidas em `p-actions`, o ícone não será exibido.
     *
     * @default `po-icon-more`
     */
    actionsIcon?: string;
    /** Define o objeto que será o cabeçalho da lista de ações com as informações do perfil. */
    profile?: PoToolbarProfile;
    /** Define uma lista de ações que serão exibidas ao clicar no ícone do perfil. */
    profileActions?: Array<PoToolbarAction>;
    /** Se falso, oculta o ícone de notificações. */
    showNotification?: boolean;
    /** Título do *toolbar* e aplicação. */
    title: string;
    /**
     * @optional
     *
     * @description
     *
     * Lista de ações da notificação.
     */
    notificationActions?: Array<PoToolbarAction>;
    /**
     * @optional
     *
     * @description
     *
     * Número de notificações.
     */
    set notificationNumber(value: number);
    get notificationNumber(): number;
    get isShowProfile(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoToolbarBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoToolbarBaseComponent, never, never, { "showNotification": "p-show-notification"; "notificationNumber": "p-notification-number"; "actions": "p-actions"; "actionsIcon": "p-actions-icon"; "profile": "p-profile"; "profileActions": "p-profile-actions"; "title": "p-title"; "notificationActions": "p-notification-actions"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdG9vbGJhci1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby10b29sYmFyLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBvVG9vbGJhckFjdGlvbiB9IGZyb20gJy4vcG8tdG9vbGJhci1hY3Rpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvVG9vbGJhclByb2ZpbGUgfSBmcm9tICcuL3BvLXRvb2xiYXItcHJvZmlsZS9wby10b29sYmFyLXByb2ZpbGUuaW50ZXJmYWNlJztcbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby10b29sYmFyYCDDqSB1bSBjYWJlw6dhbGhvIHBhcmEgbyB0w610dWxvIGRhIGFwbGljYcOnw6NvIGUgaW5mb3JtYcOnw7VlcyBkZSB1c3XDoXJpbyBlIG5vdGlmaWNhw6fDtWVzIHF1YW5kbyBob3V2ZXIgbmVjZXNzaWRhZGUuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvVG9vbGJhckJhc2VDb21wb25lbnQge1xuICAgIHByaXZhdGUgX25vdGlmaWNhdGlvbk51bWJlcj87XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlZmluZSB1bWEgbGlzdGEgZGUgYcOnw7VlcyBxdWUgc2Vyw6NvIGV4aWJpZGFzIGFvIGNsaWNhciBubyDDrWNvbmUgZGVjbGFyYWRvIGVtIGBwLWFjdGlvbnMtaWNvbmAuXG4gICAgICovXG4gICAgYWN0aW9ucz86IEFycmF5PFBvVG9vbGJhckFjdGlvbj47XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlZmluZSB1bSBbw61jb25lXSgvZ3VpZGVzL2ljb25zKSBwYXJhIGEgcHJvcHJpZWRhZGUgYHAtYWN0aW9uc2AuXG4gICAgICpcbiAgICAgKiA+IENhc28gbsOjbyBoYWphIGHDp8O1ZXMgZGVmaW5pZGFzIGVtIGBwLWFjdGlvbnNgLCBvIMOtY29uZSBuw6NvIHNlcsOhIGV4aWJpZG8uXG4gICAgICpcbiAgICAgKiBAZGVmYXVsdCBgcG8taWNvbi1tb3JlYFxuICAgICAqL1xuICAgIGFjdGlvbnNJY29uPzogc3RyaW5nO1xuICAgIC8qKiBEZWZpbmUgbyBvYmpldG8gcXVlIHNlcsOhIG8gY2FiZcOnYWxobyBkYSBsaXN0YSBkZSBhw6fDtWVzIGNvbSBhcyBpbmZvcm1hw6fDtWVzIGRvIHBlcmZpbC4gKi9cbiAgICBwcm9maWxlPzogUG9Ub29sYmFyUHJvZmlsZTtcbiAgICAvKiogRGVmaW5lIHVtYSBsaXN0YSBkZSBhw6fDtWVzIHF1ZSBzZXLDo28gZXhpYmlkYXMgYW8gY2xpY2FyIG5vIMOtY29uZSBkbyBwZXJmaWwuICovXG4gICAgcHJvZmlsZUFjdGlvbnM/OiBBcnJheTxQb1Rvb2xiYXJBY3Rpb24+O1xuICAgIC8qKiBTZSBmYWxzbywgb2N1bHRhIG8gw61jb25lIGRlIG5vdGlmaWNhw6fDtWVzLiAqL1xuICAgIHNob3dOb3RpZmljYXRpb24/OiBib29sZWFuO1xuICAgIC8qKiBUw610dWxvIGRvICp0b29sYmFyKiBlIGFwbGljYcOnw6NvLiAqL1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIExpc3RhIGRlIGHDp8O1ZXMgZGEgbm90aWZpY2HDp8Ojby5cbiAgICAgKi9cbiAgICBub3RpZmljYXRpb25BY3Rpb25zPzogQXJyYXk8UG9Ub29sYmFyQWN0aW9uPjtcbiAgICAvKipcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqXG4gICAgICogTsO6bWVybyBkZSBub3RpZmljYcOnw7Vlcy5cbiAgICAgKi9cbiAgICBzZXQgbm90aWZpY2F0aW9uTnVtYmVyKHZhbHVlOiBudW1iZXIpO1xuICAgIGdldCBub3RpZmljYXRpb25OdW1iZXIoKTogbnVtYmVyO1xuICAgIGdldCBpc1Nob3dQcm9maWxlKCk6IGJvb2xlYW47XG59XG4iXX0=