import { Renderer2, AfterViewInit } from '@angular/core';
import { PoI18nPipe } from '../../../services/po-i18n/po-i18n.pipe';
import { PoNotificationService } from '../../../services/po-notification/po-notification.service';
import { PoProgressStatus } from '../../po-progress/enums/po-progress-status.enum';
import { PoUploadBaseComponent } from './po-upload-base.component';
import { PoUploadFile } from './po-upload-file';
import { PoUploadService } from './po-upload.service';
import { PoUploadStatus } from './po-upload-status.enum';
/**
 * @docsExtends PoUploadBaseComponent
 *
 * @example
 *
 * <example name="po-upload-basic" title="PO Upload Basic">
 *   <file name="sample-po-upload-basic/sample-po-upload-basic.component.html"> </file>
 *   <file name="sample-po-upload-basic/sample-po-upload-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-upload-labs" title="PO Upload Labs">
 *   <file name="sample-po-upload-labs/sample-po-upload-labs.component.html"> </file>
 *   <file name="sample-po-upload-labs/sample-po-upload-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-upload-resume" title="PO Upload - Resume">
 *   <file name="sample-po-upload-resume/sample-po-upload-resume.component.html"> </file>
 *   <file name="sample-po-upload-resume/sample-po-upload-resume.component.ts"> </file>
 * </example>
 *
 * <example name="po-upload-rs" title="PO Upload - Realize & Show">
 *   <file name="sample-po-upload-rs/sample-po-upload-rs.component.html"> </file>
 *   <file name="sample-po-upload-rs/sample-po-upload-rs.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoUploadComponent extends PoUploadBaseComponent implements AfterViewInit {
    renderer: Renderer2;
    private i18nPipe;
    private notification;
    infoByUploadStatus: {
        [key: string]: {
            text: (percent?: number) => string;
            icon?: string;
        };
    };
    progressStatusByFileStatus: {
        0: PoProgressStatus;
        2: PoProgressStatus;
    };
    private calledByCleanInputValue;
    private inputFile;
    private poUploadDragDropComponent;
    private uploadButton;
    constructor(uploadService: PoUploadService, renderer: Renderer2, i18nPipe: PoI18nPipe, notification: PoNotificationService);
    get displayDragDrop(): boolean;
    get displaySendButton(): boolean;
    get selectFileButtonLabel(): string;
    get hasMoreThanFourItems(): boolean;
    get hasMultipleFiles(): boolean;
    get hasFileNotUploaded(): boolean;
    get isDisabled(): boolean;
    get maxFiles(): number;
    cancel(file: PoUploadFile): void;
    ngAfterViewInit(): void;
    /** Método responsável por **limpar** o(s) arquivo(s) selecionado(s). */
    clear(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoUploadComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoUploadComponent, { static: true }) upload: PoUploadComponent;
     *
     * focusUpload() {
     *   this.upload.focus();
     * }
     * ```
     */
    focus(): void;
    hasAnyFileUploading(files: Array<PoUploadFile>): boolean;
    isAllowCancelEvent(status: PoUploadStatus): boolean;
    onFileChange(event: any): void;
    onFileChangeDragDrop(files: any): void;
    removeFile(file: any): void;
    /** Método responsável por **abrir** a janela para seleção de arquivo(s). */
    selectFiles(): void;
    sendFeedback(): void;
    /** Método responsável por **enviar** o(s) arquivo(s) selecionado(s). */
    sendFiles(): void;
    setDirectoryAttribute(canHandleDirectory: boolean): void;
    stopUpload(file: PoUploadFile): void;
    trackByFn(index: any, file: PoUploadFile): string;
    uploadFiles(files: Array<PoUploadFile>): void;
    private cleanInputValue;
    private responseHandler;
    private setPipeArguments;
    private stopUploadHandler;
    private updateFiles;
    private updateModel;
    private uploadingHandler;
    private mapCleanUploadFiles;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoUploadComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoUploadComponent, "po-upload", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby11cGxvYWQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVuZGVyZXIyLCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0kxOG5QaXBlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcG8taTE4bi9wby1pMThuLnBpcGUnO1xuaW1wb3J0IHsgUG9Ob3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvUHJvZ3Jlc3NTdGF0dXMgfSBmcm9tICcuLi8uLi9wby1wcm9ncmVzcy9lbnVtcy9wby1wcm9ncmVzcy1zdGF0dXMuZW51bSc7XG5pbXBvcnQgeyBQb1VwbG9hZEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXVwbG9hZC1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1VwbG9hZEZpbGUgfSBmcm9tICcuL3BvLXVwbG9hZC1maWxlJztcbmltcG9ydCB7IFBvVXBsb2FkU2VydmljZSB9IGZyb20gJy4vcG8tdXBsb2FkLnNlcnZpY2UnO1xuaW1wb3J0IHsgUG9VcGxvYWRTdGF0dXMgfSBmcm9tICcuL3BvLXVwbG9hZC1zdGF0dXMuZW51bSc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb1VwbG9hZEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby11cGxvYWQtYmFzaWNcIiB0aXRsZT1cIlBPIFVwbG9hZCBCYXNpY1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXVwbG9hZC1iYXNpYy9zYW1wbGUtcG8tdXBsb2FkLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cGxvYWQtYmFzaWMvc2FtcGxlLXBvLXVwbG9hZC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby11cGxvYWQtbGFic1wiIHRpdGxlPVwiUE8gVXBsb2FkIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cGxvYWQtbGFicy9zYW1wbGUtcG8tdXBsb2FkLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXVwbG9hZC1sYWJzL3NhbXBsZS1wby11cGxvYWQtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby11cGxvYWQtcmVzdW1lXCIgdGl0bGU9XCJQTyBVcGxvYWQgLSBSZXN1bWVcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cGxvYWQtcmVzdW1lL3NhbXBsZS1wby11cGxvYWQtcmVzdW1lLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cGxvYWQtcmVzdW1lL3NhbXBsZS1wby11cGxvYWQtcmVzdW1lLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXVwbG9hZC1yc1wiIHRpdGxlPVwiUE8gVXBsb2FkIC0gUmVhbGl6ZSAmIFNob3dcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby11cGxvYWQtcnMvc2FtcGxlLXBvLXVwbG9hZC1ycy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdXBsb2FkLXJzL3NhbXBsZS1wby11cGxvYWQtcnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9VcGxvYWRDb21wb25lbnQgZXh0ZW5kcyBQb1VwbG9hZEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgaTE4blBpcGU7XG4gICAgcHJpdmF0ZSBub3RpZmljYXRpb247XG4gICAgaW5mb0J5VXBsb2FkU3RhdHVzOiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgICAgIHRleHQ6IChwZXJjZW50PzogbnVtYmVyKSA9PiBzdHJpbmc7XG4gICAgICAgICAgICBpY29uPzogc3RyaW5nO1xuICAgICAgICB9O1xuICAgIH07XG4gICAgcHJvZ3Jlc3NTdGF0dXNCeUZpbGVTdGF0dXM6IHtcbiAgICAgICAgMDogUG9Qcm9ncmVzc1N0YXR1cztcbiAgICAgICAgMjogUG9Qcm9ncmVzc1N0YXR1cztcbiAgICB9O1xuICAgIHByaXZhdGUgY2FsbGVkQnlDbGVhbklucHV0VmFsdWU7XG4gICAgcHJpdmF0ZSBpbnB1dEZpbGU7XG4gICAgcHJpdmF0ZSBwb1VwbG9hZERyYWdEcm9wQ29tcG9uZW50O1xuICAgIHByaXZhdGUgdXBsb2FkQnV0dG9uO1xuICAgIGNvbnN0cnVjdG9yKHVwbG9hZFNlcnZpY2U6IFBvVXBsb2FkU2VydmljZSwgcmVuZGVyZXI6IFJlbmRlcmVyMiwgaTE4blBpcGU6IFBvSTE4blBpcGUsIG5vdGlmaWNhdGlvbjogUG9Ob3RpZmljYXRpb25TZXJ2aWNlKTtcbiAgICBnZXQgZGlzcGxheURyYWdEcm9wKCk6IGJvb2xlYW47XG4gICAgZ2V0IGRpc3BsYXlTZW5kQnV0dG9uKCk6IGJvb2xlYW47XG4gICAgZ2V0IHNlbGVjdEZpbGVCdXR0b25MYWJlbCgpOiBzdHJpbmc7XG4gICAgZ2V0IGhhc01vcmVUaGFuRm91ckl0ZW1zKCk6IGJvb2xlYW47XG4gICAgZ2V0IGhhc011bHRpcGxlRmlsZXMoKTogYm9vbGVhbjtcbiAgICBnZXQgaGFzRmlsZU5vdFVwbG9hZGVkKCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzRGlzYWJsZWQoKTogYm9vbGVhbjtcbiAgICBnZXQgbWF4RmlsZXMoKTogbnVtYmVyO1xuICAgIGNhbmNlbChmaWxlOiBQb1VwbG9hZEZpbGUpOiB2b2lkO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIC8qKiBNw6l0b2RvIHJlc3BvbnPDoXZlbCBwb3IgKipsaW1wYXIqKiBvKHMpIGFycXVpdm8ocykgc2VsZWNpb25hZG8ocykuICovXG4gICAgY2xlYXIoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBGdW7Dp8OjbyBxdWUgYXRyaWJ1aSBmb2NvIGFvIGNvbXBvbmVudGUuXG4gICAgICpcbiAgICAgKiBQYXJhIHV0aWxpesOhLWxhIMOpIG5lY2Vzc8OhcmlvIHRlciBhIGluc3TDom5jaWEgZG8gY29tcG9uZW50ZSBubyBET00sIHBvZGVuZG8gc2VyIHV0aWxpemFkbyBvIFZpZXdDaGlsZCBkYSBzZWd1aW50ZSBmb3JtYTpcbiAgICAgKlxuICAgICAqIGBgYFxuICAgICAqIGltcG9ydCB7IFBvVXBsb2FkQ29tcG9uZW50IH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuICAgICAqXG4gICAgICogLi4uXG4gICAgICpcbiAgICAgKiBAVmlld0NoaWxkKFBvVXBsb2FkQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9KSB1cGxvYWQ6IFBvVXBsb2FkQ29tcG9uZW50O1xuICAgICAqXG4gICAgICogZm9jdXNVcGxvYWQoKSB7XG4gICAgICogICB0aGlzLnVwbG9hZC5mb2N1cygpO1xuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBmb2N1cygpOiB2b2lkO1xuICAgIGhhc0FueUZpbGVVcGxvYWRpbmcoZmlsZXM6IEFycmF5PFBvVXBsb2FkRmlsZT4pOiBib29sZWFuO1xuICAgIGlzQWxsb3dDYW5jZWxFdmVudChzdGF0dXM6IFBvVXBsb2FkU3RhdHVzKTogYm9vbGVhbjtcbiAgICBvbkZpbGVDaGFuZ2UoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25GaWxlQ2hhbmdlRHJhZ0Ryb3AoZmlsZXM6IGFueSk6IHZvaWQ7XG4gICAgcmVtb3ZlRmlsZShmaWxlOiBhbnkpOiB2b2lkO1xuICAgIC8qKiBNw6l0b2RvIHJlc3BvbnPDoXZlbCBwb3IgKiphYnJpcioqIGEgamFuZWxhIHBhcmEgc2VsZcOnw6NvIGRlIGFycXVpdm8ocykuICovXG4gICAgc2VsZWN0RmlsZXMoKTogdm9pZDtcbiAgICBzZW5kRmVlZGJhY2soKTogdm9pZDtcbiAgICAvKiogTcOpdG9kbyByZXNwb25zw6F2ZWwgcG9yICoqZW52aWFyKiogbyhzKSBhcnF1aXZvKHMpIHNlbGVjaW9uYWRvKHMpLiAqL1xuICAgIHNlbmRGaWxlcygpOiB2b2lkO1xuICAgIHNldERpcmVjdG9yeUF0dHJpYnV0ZShjYW5IYW5kbGVEaXJlY3Rvcnk6IGJvb2xlYW4pOiB2b2lkO1xuICAgIHN0b3BVcGxvYWQoZmlsZTogUG9VcGxvYWRGaWxlKTogdm9pZDtcbiAgICB0cmFja0J5Rm4oaW5kZXg6IGFueSwgZmlsZTogUG9VcGxvYWRGaWxlKTogc3RyaW5nO1xuICAgIHVwbG9hZEZpbGVzKGZpbGVzOiBBcnJheTxQb1VwbG9hZEZpbGU+KTogdm9pZDtcbiAgICBwcml2YXRlIGNsZWFuSW5wdXRWYWx1ZTtcbiAgICBwcml2YXRlIHJlc3BvbnNlSGFuZGxlcjtcbiAgICBwcml2YXRlIHNldFBpcGVBcmd1bWVudHM7XG4gICAgcHJpdmF0ZSBzdG9wVXBsb2FkSGFuZGxlcjtcbiAgICBwcml2YXRlIHVwZGF0ZUZpbGVzO1xuICAgIHByaXZhdGUgdXBkYXRlTW9kZWw7XG4gICAgcHJpdmF0ZSB1cGxvYWRpbmdIYW5kbGVyO1xuICAgIHByaXZhdGUgbWFwQ2xlYW5VcGxvYWRGaWxlcztcbn1cbiJdfQ==