import { EventEmitter } from '@angular/core';
import { PoI18nPipe } from '../../../../services/po-i18n/po-i18n.pipe';
import { PoNotificationService } from '../../../../services/po-notification/po-notification.service';
import { PoUploadLiterals } from '../interfaces/po-upload-literals.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoUploadDragDropDirective {
    private i18nPipe;
    private notification;
    timeout: any;
    private files;
    private invalidFileType;
    areaElement: HTMLElement;
    directoryCompatible: boolean;
    disabled: boolean;
    literals: PoUploadLiterals;
    dragLeave: EventEmitter<any>;
    dragOver: EventEmitter<any>;
    fileChange: EventEmitter<any>;
    constructor(i18nPipe: PoI18nPipe, notification: PoNotificationService);
    onDragLeave(event: any): void;
    onDragOver(event: any): void;
    onDrop(event: any): void;
    private getFilesFromDataTransferItems;
    private getFilesFromEntry;
    private getOnlyDirectories;
    private getOnlyFiles;
    private readFile;
    private readDirectory;
    private readDirectoryEntries;
    private sendFeedback;
    private sendFiles;
    private setPipeArguments;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoUploadDragDropDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoUploadDragDropDirective, "[p-upload-drag-drop]", never, { "areaElement": "p-area-element"; "directoryCompatible": "p-directory-compatible"; "disabled": "p-disabled"; "literals": "p-literals"; }, { "dragLeave": "p-drag-leave"; "dragOver": "p-drag-over"; "fileChange": "p-file-change"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsicG8tdXBsb2FkLWRyYWctZHJvcC5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0kxOG5QaXBlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvcG8taTE4bi9wby1pMThuLnBpcGUnO1xuaW1wb3J0IHsgUG9Ob3RpZmljYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvcG8tbm90aWZpY2F0aW9uL3BvLW5vdGlmaWNhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvVXBsb2FkTGl0ZXJhbHMgfSBmcm9tICcuLi9pbnRlcmZhY2VzL3BvLXVwbG9hZC1saXRlcmFscy5pbnRlcmZhY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9VcGxvYWREcmFnRHJvcERpcmVjdGl2ZSB7XG4gICAgcHJpdmF0ZSBpMThuUGlwZTtcbiAgICBwcml2YXRlIG5vdGlmaWNhdGlvbjtcbiAgICB0aW1lb3V0OiBhbnk7XG4gICAgcHJpdmF0ZSBmaWxlcztcbiAgICBwcml2YXRlIGludmFsaWRGaWxlVHlwZTtcbiAgICBhcmVhRWxlbWVudDogSFRNTEVsZW1lbnQ7XG4gICAgZGlyZWN0b3J5Q29tcGF0aWJsZTogYm9vbGVhbjtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBsaXRlcmFsczogUG9VcGxvYWRMaXRlcmFscztcbiAgICBkcmFnTGVhdmU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGRyYWdPdmVyOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBmaWxlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihpMThuUGlwZTogUG9JMThuUGlwZSwgbm90aWZpY2F0aW9uOiBQb05vdGlmaWNhdGlvblNlcnZpY2UpO1xuICAgIG9uRHJhZ0xlYXZlKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uRHJhZ092ZXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25Ecm9wKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHByaXZhdGUgZ2V0RmlsZXNGcm9tRGF0YVRyYW5zZmVySXRlbXM7XG4gICAgcHJpdmF0ZSBnZXRGaWxlc0Zyb21FbnRyeTtcbiAgICBwcml2YXRlIGdldE9ubHlEaXJlY3RvcmllcztcbiAgICBwcml2YXRlIGdldE9ubHlGaWxlcztcbiAgICBwcml2YXRlIHJlYWRGaWxlO1xuICAgIHByaXZhdGUgcmVhZERpcmVjdG9yeTtcbiAgICBwcml2YXRlIHJlYWREaXJlY3RvcnlFbnRyaWVzO1xuICAgIHByaXZhdGUgc2VuZEZlZWRiYWNrO1xuICAgIHByaXZhdGUgc2VuZEZpbGVzO1xuICAgIHByaXZhdGUgc2V0UGlwZUFyZ3VtZW50cztcbn1cbiJdfQ==