import { AfterViewInit, ChangeDetectorRef, DoCheck, ElementRef, IterableDiffers, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoSelectBaseComponent } from './po-select-base.component';
import { PoSelectOption } from './po-select-option.interface';
import { PoSelectOptionTemplateDirective } from './po-select-option-template/po-select-option-template.directive';
/**
 * @docsExtends PoSelectBaseComponent
 *
 * @example
 *
 * <example name="po-select-basic" title="PO Select Basic">
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.html"> </file>
 *   <file name="sample-po-select-basic/sample-po-select-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-labs" title="PO Select Labs">
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.html"> </file>
 *   <file name="sample-po-select-labs/sample-po-select-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-select-customer-registration" title="PO Select - Customer registration">
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.html"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.component.ts"> </file>
 *   <file name="sample-po-select-customer-registration/sample-po-select-customer-registration.service.ts"> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.e2e-spec.ts'> </file>
 *   <file name='sample-po-select-customer-registration/sample-po-select-customer-registration.component.po.ts'> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoSelectComponent extends PoSelectBaseComponent implements AfterViewInit, DoCheck {
    renderer: Renderer2;
    private controlPosition;
    displayValue: any;
    isMobile: any;
    modelValue: any;
    open: boolean;
    selectedValue: any;
    selectIcon: string;
    scrollPosition: number;
    private differ;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    selectOptionTemplate: PoSelectOptionTemplateDirective;
    contentList: ElementRef;
    iconElement: ElementRef;
    selectElement: ElementRef;
    selectButtonElement: ElementRef;
    constructor(element: ElementRef, changeDetector: ChangeDetectorRef, differs: IterableDiffers, renderer: Renderer2, controlPosition: PoControlPositionService);
    get isInvisibleSelectNative(): any;
    onKeydown($event?: any): void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoSelectComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoSelectComponent, { static: true }) select: PoSelectComponent;
     *
     * focusSelect() {
     *   this.select.focus();
     * }
     * ```
     */
    focus(): void;
    hideDropDown(): void;
    isEqual(value: any, inputValue: any): boolean;
    onOptionClick(option: PoSelectOption): void;
    onSelectChange(value: any): void;
    onUpdateOptions(): void;
    scrollValue(index: any, clientHeight: any): number;
    selector(query: string): Element;
    toggleButton(): void;
    updateModel(option: PoSelectOption): void;
    wasClickedOnToggle(event: MouseEvent): void;
    writeValue(value: any): void;
    private disableDefaultEventAndToggleButton;
    private findOptionValue;
    private getSelectItemHeight;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setPositionDropdown;
    private setScrollPosition;
    private showDropdown;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoSelectComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoSelectComponent, "po-select", never, {}, {}, ["selectOptionTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2VsZWN0LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1zZWxlY3QuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWNvbnRyb2wtcG9zaXRpb24vcG8tY29udHJvbC1wb3NpdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvU2VsZWN0QmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tc2VsZWN0LWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvU2VsZWN0T3B0aW9uIH0gZnJvbSAnLi9wby1zZWxlY3Qtb3B0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb1NlbGVjdE9wdGlvblRlbXBsYXRlRGlyZWN0aXZlIH0gZnJvbSAnLi9wby1zZWxlY3Qtb3B0aW9uLXRlbXBsYXRlL3BvLXNlbGVjdC1vcHRpb24tdGVtcGxhdGUuZGlyZWN0aXZlJztcbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvU2VsZWN0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXNlbGVjdC1iYXNpY1wiIHRpdGxlPVwiUE8gU2VsZWN0IEJhc2ljXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2VsZWN0LWJhc2ljL3NhbXBsZS1wby1zZWxlY3QtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1iYXNpYy9zYW1wbGUtcG8tc2VsZWN0LWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXNlbGVjdC1sYWJzXCIgdGl0bGU9XCJQTyBTZWxlY3QgTGFic1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1sYWJzL3NhbXBsZS1wby1zZWxlY3QtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2VsZWN0LWxhYnMvc2FtcGxlLXBvLXNlbGVjdC1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb25cIiB0aXRsZT1cIlBPIFNlbGVjdCAtIEN1c3RvbWVyIHJlZ2lzdHJhdGlvblwiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24vc2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24vc2FtcGxlLXBvLXNlbGVjdC1jdXN0b21lci1yZWdpc3RyYXRpb24uY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zZWxlY3QtY3VzdG9tZXItcmVnaXN0cmF0aW9uL3NhbXBsZS1wby1zZWxlY3QtY3VzdG9tZXItcmVnaXN0cmF0aW9uLnNlcnZpY2UudHNcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPSdzYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi9zYW1wbGUtcG8tc2VsZWN0LWN1c3RvbWVyLXJlZ2lzdHJhdGlvbi5jb21wb25lbnQuZTJlLXNwZWMudHMnPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9J3NhbXBsZS1wby1zZWxlY3QtY3VzdG9tZXItcmVnaXN0cmF0aW9uL3NhbXBsZS1wby1zZWxlY3QtY3VzdG9tZXItcmVnaXN0cmF0aW9uLmNvbXBvbmVudC5wby50cyc+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9TZWxlY3RDb21wb25lbnQgZXh0ZW5kcyBQb1NlbGVjdEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBEb0NoZWNrIHtcbiAgICByZW5kZXJlcjogUmVuZGVyZXIyO1xuICAgIHByaXZhdGUgY29udHJvbFBvc2l0aW9uO1xuICAgIGRpc3BsYXlWYWx1ZTogYW55O1xuICAgIGlzTW9iaWxlOiBhbnk7XG4gICAgbW9kZWxWYWx1ZTogYW55O1xuICAgIG9wZW46IGJvb2xlYW47XG4gICAgc2VsZWN0ZWRWYWx1ZTogYW55O1xuICAgIHNlbGVjdEljb246IHN0cmluZztcbiAgICBzY3JvbGxQb3NpdGlvbjogbnVtYmVyO1xuICAgIHByaXZhdGUgZGlmZmVyO1xuICAgIGV2ZW50TGlzdGVuZXJGdW5jdGlvbjogKCkgPT4gdm9pZDtcbiAgICBldmVudFJlc2l6ZUxpc3RlbmVyOiAoKSA9PiB2b2lkO1xuICAgIHNlbGVjdE9wdGlvblRlbXBsYXRlOiBQb1NlbGVjdE9wdGlvblRlbXBsYXRlRGlyZWN0aXZlO1xuICAgIGNvbnRlbnRMaXN0OiBFbGVtZW50UmVmO1xuICAgIGljb25FbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIHNlbGVjdEVsZW1lbnQ6IEVsZW1lbnRSZWY7XG4gICAgc2VsZWN0QnV0dG9uRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50OiBFbGVtZW50UmVmLCBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGRpZmZlcnM6IEl0ZXJhYmxlRGlmZmVycywgcmVuZGVyZXI6IFJlbmRlcmVyMiwgY29udHJvbFBvc2l0aW9uOiBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UpO1xuICAgIGdldCBpc0ludmlzaWJsZVNlbGVjdE5hdGl2ZSgpOiBhbnk7XG4gICAgb25LZXlkb3duKCRldmVudD86IGFueSk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdEb0NoZWNrKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogRnVuw6fDo28gcXVlIGF0cmlidWkgZm9jbyBhbyBjb21wb25lbnRlLlxuICAgICAqXG4gICAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyB0ZXIgYSBpbnN0w6JuY2lhIGRvIGNvbXBvbmVudGUgbm8gRE9NLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gbyBWaWV3Q2hpbGQgZGEgc2VndWludGUgZm9ybWE6XG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBpbXBvcnQgeyBQb1NlbGVjdENvbXBvbmVudCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcbiAgICAgKlxuICAgICAqIC4uLlxuICAgICAqXG4gICAgICogQFZpZXdDaGlsZChQb1NlbGVjdENvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgc2VsZWN0OiBQb1NlbGVjdENvbXBvbmVudDtcbiAgICAgKlxuICAgICAqIGZvY3VzU2VsZWN0KCkge1xuICAgICAqICAgdGhpcy5zZWxlY3QuZm9jdXMoKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZm9jdXMoKTogdm9pZDtcbiAgICBoaWRlRHJvcERvd24oKTogdm9pZDtcbiAgICBpc0VxdWFsKHZhbHVlOiBhbnksIGlucHV0VmFsdWU6IGFueSk6IGJvb2xlYW47XG4gICAgb25PcHRpb25DbGljayhvcHRpb246IFBvU2VsZWN0T3B0aW9uKTogdm9pZDtcbiAgICBvblNlbGVjdENoYW5nZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICBvblVwZGF0ZU9wdGlvbnMoKTogdm9pZDtcbiAgICBzY3JvbGxWYWx1ZShpbmRleDogYW55LCBjbGllbnRIZWlnaHQ6IGFueSk6IG51bWJlcjtcbiAgICBzZWxlY3RvcihxdWVyeTogc3RyaW5nKTogRWxlbWVudDtcbiAgICB0b2dnbGVCdXR0b24oKTogdm9pZDtcbiAgICB1cGRhdGVNb2RlbChvcHRpb246IFBvU2VsZWN0T3B0aW9uKTogdm9pZDtcbiAgICB3YXNDbGlja2VkT25Ub2dnbGUoZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkO1xuICAgIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBkaXNhYmxlRGVmYXVsdEV2ZW50QW5kVG9nZ2xlQnV0dG9uO1xuICAgIHByaXZhdGUgZmluZE9wdGlvblZhbHVlO1xuICAgIHByaXZhdGUgZ2V0U2VsZWN0SXRlbUhlaWdodDtcbiAgICBwcml2YXRlIGluaXRpYWxpemVMaXN0ZW5lcnM7XG4gICAgcHJpdmF0ZSBvblNjcm9sbDtcbiAgICBwcml2YXRlIHJlbW92ZUxpc3RlbmVycztcbiAgICBwcml2YXRlIHNldFBvc2l0aW9uRHJvcGRvd247XG4gICAgcHJpdmF0ZSBzZXRTY3JvbGxQb3NpdGlvbjtcbiAgICBwcml2YXRlIHNob3dEcm9wZG93bjtcbn1cbiJdfQ==