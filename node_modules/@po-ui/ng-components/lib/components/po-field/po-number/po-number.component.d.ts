import { AbstractControl } from '@angular/forms';
import { ElementRef } from '@angular/core';
import { PoNumberBaseComponent } from './po-number-base.component';
/**
 * @docsExtends PoInputBaseComponent
 *
 * @description
 *
 * po-number é um input específico para receber apenas números.
 * É possível configurar um valor mínimo, máximo e um step com p-min, p-max e p-step,
 * respectivamente.
 *
 * @example
 *
 * <example name="po-number-basic" title="PO Number Basic">
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.html"> </file>
 *  <file name="sample-po-number-basic/sample-po-number-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-labs" title="PO Number Labs">
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.html"> </file>
 *  <file name="sample-po-number-labs/sample-po-number-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-number-calculate" title="PO Number - Calculate">
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.html"> </file>
 *  <file name="sample-po-number-calculate/sample-po-number-calculate.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoNumberComponent extends PoNumberBaseComponent {
    /** Valor mínimo. */
    min?: number;
    set setMin(min: string);
    /** Valor máximo. */
    max?: number;
    set setMax(max: string);
    /**
     * @optional
     *
     * @description
     *
     * Intervalo.
     *
     * @default 1
     */
    step?: string;
    constructor(el: ElementRef);
    extraValidation(abstractControl: AbstractControl): {
        [key: string]: any;
    };
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoNumberComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoNumberComponent, "po-number", never, { "step": "p-step"; "setMin": "p-min"; "setMax": "p-max"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbnVtYmVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1udW1iZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9OdW1iZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1udW1iZXItYmFzZS5jb21wb25lbnQnO1xuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9JbnB1dEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBwby1udW1iZXIgw6kgdW0gaW5wdXQgZXNwZWPDrWZpY28gcGFyYSByZWNlYmVyIGFwZW5hcyBuw7ptZXJvcy5cbiAqIMOJIHBvc3PDrXZlbCBjb25maWd1cmFyIHVtIHZhbG9yIG3DrW5pbW8sIG3DoXhpbW8gZSB1bSBzdGVwIGNvbSBwLW1pbiwgcC1tYXggZSBwLXN0ZXAsXG4gKiByZXNwZWN0aXZhbWVudGUuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbnVtYmVyLWJhc2ljXCIgdGl0bGU9XCJQTyBOdW1iZXIgQmFzaWNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1iYXNpYy9zYW1wbGUtcG8tbnVtYmVyLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1iYXNpYy9zYW1wbGUtcG8tbnVtYmVyLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW51bWJlci1sYWJzXCIgdGl0bGU9XCJQTyBOdW1iZXIgTGFic1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbnVtYmVyLWxhYnMvc2FtcGxlLXBvLW51bWJlci1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1sYWJzL3NhbXBsZS1wby1udW1iZXItbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1udW1iZXItY2FsY3VsYXRlXCIgdGl0bGU9XCJQTyBOdW1iZXIgLSBDYWxjdWxhdGVcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUvc2FtcGxlLXBvLW51bWJlci1jYWxjdWxhdGUuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbnVtYmVyLWNhbGN1bGF0ZS9zYW1wbGUtcG8tbnVtYmVyLWNhbGN1bGF0ZS5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb051bWJlckNvbXBvbmVudCBleHRlbmRzIFBvTnVtYmVyQmFzZUNvbXBvbmVudCB7XG4gICAgLyoqIFZhbG9yIG3DrW5pbW8uICovXG4gICAgbWluPzogbnVtYmVyO1xuICAgIHNldCBzZXRNaW4obWluOiBzdHJpbmcpO1xuICAgIC8qKiBWYWxvciBtw6F4aW1vLiAqL1xuICAgIG1heD86IG51bWJlcjtcbiAgICBzZXQgc2V0TWF4KG1heDogc3RyaW5nKTtcbiAgICAvKipcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqXG4gICAgICogSW50ZXJ2YWxvLlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgMVxuICAgICAqL1xuICAgIHN0ZXA/OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIGV4dHJhVmFsaWRhdGlvbihhYnN0cmFjdENvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuICAgIH07XG59XG4iXX0=