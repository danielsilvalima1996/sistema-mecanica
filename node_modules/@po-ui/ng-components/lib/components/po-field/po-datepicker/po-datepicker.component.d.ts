import { AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { PoControlPositionService } from './../../../services/po-control-position/po-control-position.service';
import { PoCalendarComponent } from './po-calendar/po-calendar.component';
import { PoDatepickerBaseComponent } from './po-datepicker-base.component';
/**
 * @docsExtends PoDatepickerBaseComponent
 *
 * @example
 *
 * <example name="po-datepicker-basic" title="PO Datepicker Basic">
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.html"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.ts"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.po.ts"> </file>
 *  <file name="sample-po-datepicker-basic/sample-po-datepicker-basic.component.e2e-spec.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-labs" title="PO Datepicker Labs">
 *  <file name="sample-po-datepicker-labs/sample-po-datepicker-labs.component.html"> </file>
 *  <file name="sample-po-datepicker-labs/sample-po-datepicker-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-airfare" title="PO Datepicker - Airfare">
 *  <file name="sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.html"> </file>
 *  <file name="sample-po-datepicker-airfare/sample-po-datepicker-airfare.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-airfare-reactive-form" title="PO Datepicker - Airfare Reactive Form">
 *  <file name="sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.html"> </file>
 *  <file name="sample-po-datepicker-airfare-reactive-form/sample-po-datepicker-airfare-reactive-form.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDatepickerComponent extends PoDatepickerBaseComponent implements AfterViewInit, OnDestroy {
    private controlPosition;
    private renderer;
    date: any;
    el: ElementRef;
    hour: string;
    private clickListener;
    private readonly dateRegex;
    private readonly isoRegex;
    private timeoutChange;
    private valueBeforeChange;
    eventListenerFunction: () => void;
    eventResizeListener: () => void;
    calendar: PoCalendarComponent;
    dialogPicker: ElementRef;
    iconDatepicker: ElementRef;
    inputEl: ElementRef;
    get autocomplete(): "on" | "off";
    /** Rótulo do campo. */
    label?: string;
    /** Texto de apoio do campo. */
    help?: string;
    constructor(controlPosition: PoControlPositionService, renderer: Renderer2, el: ElementRef);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoDatepickerComponent, { static: true }) datepicker: PoDatepickerComponent;
     *
     * focusDatepicker() {
     *   this.datepicker.focus();
     * }
     * ```
     */
    focus(): void;
    togglePicker(): void;
    dateSelected(): void;
    wasClickedOnPicker(event: any): void;
    onKeyup($event: any): void;
    onKeydown($event?: any): void;
    hasInvalidClass(): boolean;
    getErrorPattern(): string;
    clear(): void;
    eventOnBlur($event: any): void;
    eventOnClick($event: any): void;
    formatToDate(value: Date): string;
    refreshValue(value: Date): void;
    writeValue(value: any): void;
    isValidDateIso(value: string): boolean;
    isValidExtendedIso(value: any): boolean;
    hasOverlayClass(element: any): any;
    verifyMobile(): RegExpMatchArray;
    private closeCalendar;
    private controlChangeEmitter;
    private hasAttrCalendar;
    private initializeListeners;
    private onScroll;
    private removeListeners;
    private setDialogPickerStyleDisplay;
    private setCalendarPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDatepickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDatepickerComponent, "po-datepicker", never, { "label": "p-label"; "help": "p-help"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZGF0ZXBpY2tlci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UgfSBmcm9tICcuLy4uLy4uLy4uL3NlcnZpY2VzL3BvLWNvbnRyb2wtcG9zaXRpb24vcG8tY29udHJvbC1wb3NpdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IFBvQ2FsZW5kYXJDb21wb25lbnQgfSBmcm9tICcuL3BvLWNhbGVuZGFyL3BvLWNhbGVuZGFyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0RhdGVwaWNrZXJCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1kYXRlcGlja2VyLWJhc2UuY29tcG9uZW50Jztcbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvRGF0ZXBpY2tlckJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLWJhc2ljXCIgdGl0bGU9XCJQTyBEYXRlcGlja2VyIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWJhc2ljL3NhbXBsZS1wby1kYXRlcGlja2VyLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMvc2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMvc2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMuY29tcG9uZW50LnBvLnRzXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMvc2FtcGxlLXBvLWRhdGVwaWNrZXItYmFzaWMuY29tcG9uZW50LmUyZS1zcGVjLnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZGF0ZXBpY2tlci1sYWJzXCIgdGl0bGU9XCJQTyBEYXRlcGlja2VyIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItbGFicy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItbGFicy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItYWlyZmFyZVwiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciAtIEFpcmZhcmVcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYWlyZmFyZS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItYWlyZmFyZS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItYWlyZmFyZS1yZWFjdGl2ZS1mb3JtXCIgdGl0bGU9XCJQTyBEYXRlcGlja2VyIC0gQWlyZmFyZSBSZWFjdGl2ZSBGb3JtXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLWFpcmZhcmUtcmVhY3RpdmUtZm9ybS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1haXJmYXJlLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXBvLWRhdGVwaWNrZXItYWlyZmFyZS1yZWFjdGl2ZS1mb3JtLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRGF0ZXBpY2tlckNvbXBvbmVudCBleHRlbmRzIFBvRGF0ZXBpY2tlckJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgY29udHJvbFBvc2l0aW9uO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgZGF0ZTogYW55O1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIGhvdXI6IHN0cmluZztcbiAgICBwcml2YXRlIGNsaWNrTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBkYXRlUmVnZXg7XG4gICAgcHJpdmF0ZSByZWFkb25seSBpc29SZWdleDtcbiAgICBwcml2YXRlIHRpbWVvdXRDaGFuZ2U7XG4gICAgcHJpdmF0ZSB2YWx1ZUJlZm9yZUNoYW5nZTtcbiAgICBldmVudExpc3RlbmVyRnVuY3Rpb246ICgpID0+IHZvaWQ7XG4gICAgZXZlbnRSZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcbiAgICBjYWxlbmRhcjogUG9DYWxlbmRhckNvbXBvbmVudDtcbiAgICBkaWFsb2dQaWNrZXI6IEVsZW1lbnRSZWY7XG4gICAgaWNvbkRhdGVwaWNrZXI6IEVsZW1lbnRSZWY7XG4gICAgaW5wdXRFbDogRWxlbWVudFJlZjtcbiAgICBnZXQgYXV0b2NvbXBsZXRlKCk6IFwib25cIiB8IFwib2ZmXCI7XG4gICAgLyoqIFLDs3R1bG8gZG8gY2FtcG8uICovXG4gICAgbGFiZWw/OiBzdHJpbmc7XG4gICAgLyoqIFRleHRvIGRlIGFwb2lvIGRvIGNhbXBvLiAqL1xuICAgIGhlbHA/OiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IoY29udHJvbFBvc2l0aW9uOiBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UsIHJlbmRlcmVyOiBSZW5kZXJlcjIsIGVsOiBFbGVtZW50UmVmKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIEZ1bsOnw6NvIHF1ZSBhdHJpYnVpIGZvY28gYW8gY29tcG9uZW50ZS5cbiAgICAgKlxuICAgICAqIFBhcmEgdXRpbGl6w6EtbGEgw6kgbmVjZXNzw6FyaW8gdGVyIGEgaW5zdMOibmNpYSBkbyBjb21wb25lbnRlIG5vIERPTSwgcG9kZW5kbyBzZXIgdXRpbGl6YWRvIG8gVmlld0NoaWxkIGRhIHNlZ3VpbnRlIGZvcm1hOlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogaW1wb3J0IHsgUG9EYXRlcGlja2VyQ29tcG9uZW50IH0gZnJvbSAnQHBvLXVpL25nLWNvbXBvbmVudHMnO1xuICAgICAqXG4gICAgICogLi4uXG4gICAgICpcbiAgICAgKiBAVmlld0NoaWxkKFBvRGF0ZXBpY2tlckNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgZGF0ZXBpY2tlcjogUG9EYXRlcGlja2VyQ29tcG9uZW50O1xuICAgICAqXG4gICAgICogZm9jdXNEYXRlcGlja2VyKCkge1xuICAgICAqICAgdGhpcy5kYXRlcGlja2VyLmZvY3VzKCk7XG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGZvY3VzKCk6IHZvaWQ7XG4gICAgdG9nZ2xlUGlja2VyKCk6IHZvaWQ7XG4gICAgZGF0ZVNlbGVjdGVkKCk6IHZvaWQ7XG4gICAgd2FzQ2xpY2tlZE9uUGlja2VyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uS2V5dXAoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIG9uS2V5ZG93bigkZXZlbnQ/OiBhbnkpOiB2b2lkO1xuICAgIGhhc0ludmFsaWRDbGFzcygpOiBib29sZWFuO1xuICAgIGdldEVycm9yUGF0dGVybigpOiBzdHJpbmc7XG4gICAgY2xlYXIoKTogdm9pZDtcbiAgICBldmVudE9uQmx1cigkZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZXZlbnRPbkNsaWNrKCRldmVudDogYW55KTogdm9pZDtcbiAgICBmb3JtYXRUb0RhdGUodmFsdWU6IERhdGUpOiBzdHJpbmc7XG4gICAgcmVmcmVzaFZhbHVlKHZhbHVlOiBEYXRlKTogdm9pZDtcbiAgICB3cml0ZVZhbHVlKHZhbHVlOiBhbnkpOiB2b2lkO1xuICAgIGlzVmFsaWREYXRlSXNvKHZhbHVlOiBzdHJpbmcpOiBib29sZWFuO1xuICAgIGlzVmFsaWRFeHRlbmRlZElzbyh2YWx1ZTogYW55KTogYm9vbGVhbjtcbiAgICBoYXNPdmVybGF5Q2xhc3MoZWxlbWVudDogYW55KTogYW55O1xuICAgIHZlcmlmeU1vYmlsZSgpOiBSZWdFeHBNYXRjaEFycmF5O1xuICAgIHByaXZhdGUgY2xvc2VDYWxlbmRhcjtcbiAgICBwcml2YXRlIGNvbnRyb2xDaGFuZ2VFbWl0dGVyO1xuICAgIHByaXZhdGUgaGFzQXR0ckNhbGVuZGFyO1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZUxpc3RlbmVycztcbiAgICBwcml2YXRlIG9uU2Nyb2xsO1xuICAgIHByaXZhdGUgcmVtb3ZlTGlzdGVuZXJzO1xuICAgIHByaXZhdGUgc2V0RGlhbG9nUGlja2VyU3R5bGVEaXNwbGF5O1xuICAgIHByaXZhdGUgc2V0Q2FsZW5kYXJQb3NpdGlvbjtcbn1cbiJdfQ==