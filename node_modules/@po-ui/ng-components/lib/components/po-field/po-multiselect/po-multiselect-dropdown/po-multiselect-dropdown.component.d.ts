import { ElementRef, EventEmitter } from '@angular/core';
import { PoMultiselectLiterals } from '../../index';
import { PoMultiselectOption } from '../po-multiselect-option.interface';
import { PoMultiselectSearchComponent } from './../po-multiselect-search/po-multiselect-search.component';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que construíra o dropdown, contendo o campo de pesquisa e os itens para seleção.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoMultiselectDropdownComponent {
    scrollTop: number;
    show: boolean;
    /** Propriedade que indica se o campo de pesquisa deverá ser escondido. */
    hideSearch?: boolean;
    /** Propriedade que que recebe as literais definidas no componente `po-multiselect`. */
    literals?: PoMultiselectLiterals;
    /** Placeholder do campo de pesquisa. */
    placeholderSearch: string;
    /** Propriedade que recebe a lista de opções selecionadas. */
    selectedValues: Array<any>;
    /** Propriedade que recebe a lista de opções que deverão ser criadas no dropdown. */
    options: Array<PoMultiselectOption>;
    /** Evento disparado a cada tecla digitada na pesquisa. */
    changeSearch: EventEmitter<any>;
    /** Evento disparado a cada alteração na lista das opções selecionadas. */
    change: EventEmitter<any>;
    /**
     * Evento disparado quando for detectada uma ação que necessite fechar o dropdown.
     * Por exemplo, no caso de ser teclado TAB dentro do dropdown, então é disparado este evento
     * para notificar o componente principal que deve fechar o dropdown.
     */
    closeDropdown: EventEmitter<any>;
    container: ElementRef;
    ulElement: ElementRef;
    searchElement: PoMultiselectSearchComponent;
    get hasOptions(): boolean;
    scrollTo(index: any): void;
    isSelectedItem(option: PoMultiselectOption): boolean;
    clickItem(check: any, option: any): void;
    updateSelectedValues(checked: any, option: any): void;
    callChangeSearch(event: any): void;
    onKeydown(event: any): void;
    controlVisibility(toOpen: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoMultiselectDropdownComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoMultiselectDropdownComponent, "po-multiselect-dropdown", never, { "hideSearch": "p-hide-search"; "selectedValues": "p-selected-values"; "options": "p-options"; "literals": "p-literals"; "placeholderSearch": "p-placeholder-search"; }, { "changeSearch": "p-change-search"; "change": "p-change"; "closeDropdown": "p-close-dropdown"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtZHJvcGRvd24uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLW11bHRpc2VsZWN0LWRyb3Bkb3duLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb011bHRpc2VsZWN0TGl0ZXJhbHMgfSBmcm9tICcuLi8uLi9pbmRleCc7XG5pbXBvcnQgeyBQb011bHRpc2VsZWN0T3B0aW9uIH0gZnJvbSAnLi4vcG8tbXVsdGlzZWxlY3Qtb3B0aW9uLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb011bHRpc2VsZWN0U2VhcmNoQ29tcG9uZW50IH0gZnJvbSAnLi8uLi9wby1tdWx0aXNlbGVjdC1zZWFyY2gvcG8tbXVsdGlzZWxlY3Qtc2VhcmNoLmNvbXBvbmVudCc7XG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcXVlIGNvbnN0cnXDrXJhIG8gZHJvcGRvd24sIGNvbnRlbmRvIG8gY2FtcG8gZGUgcGVzcXVpc2EgZSBvcyBpdGVucyBwYXJhIHNlbGXDp8Ojby5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9NdWx0aXNlbGVjdERyb3Bkb3duQ29tcG9uZW50IHtcbiAgICBzY3JvbGxUb3A6IG51bWJlcjtcbiAgICBzaG93OiBib29sZWFuO1xuICAgIC8qKiBQcm9wcmllZGFkZSBxdWUgaW5kaWNhIHNlIG8gY2FtcG8gZGUgcGVzcXVpc2EgZGV2ZXLDoSBzZXIgZXNjb25kaWRvLiAqL1xuICAgIGhpZGVTZWFyY2g/OiBib29sZWFuO1xuICAgIC8qKiBQcm9wcmllZGFkZSBxdWUgcXVlIHJlY2ViZSBhcyBsaXRlcmFpcyBkZWZpbmlkYXMgbm8gY29tcG9uZW50ZSBgcG8tbXVsdGlzZWxlY3RgLiAqL1xuICAgIGxpdGVyYWxzPzogUG9NdWx0aXNlbGVjdExpdGVyYWxzO1xuICAgIC8qKiBQbGFjZWhvbGRlciBkbyBjYW1wbyBkZSBwZXNxdWlzYS4gKi9cbiAgICBwbGFjZWhvbGRlclNlYXJjaDogc3RyaW5nO1xuICAgIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGEgbGlzdGEgZGUgb3DDp8O1ZXMgc2VsZWNpb25hZGFzLiAqL1xuICAgIHNlbGVjdGVkVmFsdWVzOiBBcnJheTxhbnk+O1xuICAgIC8qKiBQcm9wcmllZGFkZSBxdWUgcmVjZWJlIGEgbGlzdGEgZGUgb3DDp8O1ZXMgcXVlIGRldmVyw6NvIHNlciBjcmlhZGFzIG5vIGRyb3Bkb3duLiAqL1xuICAgIG9wdGlvbnM6IEFycmF5PFBvTXVsdGlzZWxlY3RPcHRpb24+O1xuICAgIC8qKiBFdmVudG8gZGlzcGFyYWRvIGEgY2FkYSB0ZWNsYSBkaWdpdGFkYSBuYSBwZXNxdWlzYS4gKi9cbiAgICBjaGFuZ2VTZWFyY2g6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKiBFdmVudG8gZGlzcGFyYWRvIGEgY2FkYSBhbHRlcmHDp8OjbyBuYSBsaXN0YSBkYXMgb3DDp8O1ZXMgc2VsZWNpb25hZGFzLiAqL1xuICAgIGNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgLyoqXG4gICAgICogRXZlbnRvIGRpc3BhcmFkbyBxdWFuZG8gZm9yIGRldGVjdGFkYSB1bWEgYcOnw6NvIHF1ZSBuZWNlc3NpdGUgZmVjaGFyIG8gZHJvcGRvd24uXG4gICAgICogUG9yIGV4ZW1wbG8sIG5vIGNhc28gZGUgc2VyIHRlY2xhZG8gVEFCIGRlbnRybyBkbyBkcm9wZG93biwgZW50w6NvIMOpIGRpc3BhcmFkbyBlc3RlIGV2ZW50b1xuICAgICAqIHBhcmEgbm90aWZpY2FyIG8gY29tcG9uZW50ZSBwcmluY2lwYWwgcXVlIGRldmUgZmVjaGFyIG8gZHJvcGRvd24uXG4gICAgICovXG4gICAgY2xvc2VEcm9wZG93bjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29udGFpbmVyOiBFbGVtZW50UmVmO1xuICAgIHVsRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBzZWFyY2hFbGVtZW50OiBQb011bHRpc2VsZWN0U2VhcmNoQ29tcG9uZW50O1xuICAgIGdldCBoYXNPcHRpb25zKCk6IGJvb2xlYW47XG4gICAgc2Nyb2xsVG8oaW5kZXg6IGFueSk6IHZvaWQ7XG4gICAgaXNTZWxlY3RlZEl0ZW0ob3B0aW9uOiBQb011bHRpc2VsZWN0T3B0aW9uKTogYm9vbGVhbjtcbiAgICBjbGlja0l0ZW0oY2hlY2s6IGFueSwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIHVwZGF0ZVNlbGVjdGVkVmFsdWVzKGNoZWNrZWQ6IGFueSwgb3B0aW9uOiBhbnkpOiB2b2lkO1xuICAgIGNhbGxDaGFuZ2VTZWFyY2goZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25LZXlkb3duKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIGNvbnRyb2xWaXNpYmlsaXR5KHRvT3BlbjogYW55KTogdm9pZDtcbn1cbiJdfQ==