import { ChangeDetectorRef, ElementRef, OnInit, AfterViewInit } from '@angular/core';
import { PoDatepickerRange } from './interfaces/po-datepicker-range.interface';
import { PoDatepickerRangeBaseComponent } from './po-datepicker-range-base.component';
import { PoDateService } from './../../../services/po-date/po-date.service';
/**
 * @docsExtends PoDatepickerRangeBaseComponent
 *
 * @example
 *
 * <example name="po-datepicker-range-basic" title="PO Datepicker Range Basic">
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.html"> </file>
 *  <file name="sample-po-datepicker-range-basic/sample-po-datepicker-range-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-labs" title="PO Datepicker Range Labs">
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.html"> </file>
 *  <file name="sample-po-datepicker-range-labs/sample-po-datepicker-range-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations" title="PO Datepicker Range - Vacations Suggestion">
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.html"> </file>
 *  <file name="sample-po-datepicker-range-vacations/sample-po-datepicker-range-vacations.component.ts"> </file>
 * </example>
 *
 * <example name="po-datepicker-range-vacations-reactive-form" title="PO Datepicker Range - Vacations Reactive Form">
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.html">
 *  </file>
 *  <file name="sample-po-datepicker-range-vacations-reactive-form/sample-po-datepicker-range-vacations-reactive-form.component.ts">
 *  </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDatepickerRangeComponent extends PoDatepickerRangeBaseComponent implements AfterViewInit, OnInit {
    private changeDetector;
    private poDatepickerRangeElement;
    private poMaskObject;
    dateRangeField: ElementRef;
    endDateInput: ElementRef;
    startDateInput: ElementRef;
    get autocomplete(): "on" | "off";
    get enableCleaner(): boolean;
    get endDateInputName(): string;
    get endDateInputValue(): string;
    get getErrorMessage(): string;
    get isDateRangeInputUncompleted(): boolean;
    get isDirtyDateRangeInput(): boolean;
    get startDateInputName(): string;
    get startDateInputValue(): string;
    static getKeyCode(event: KeyboardEvent): number;
    static getTargetElement(event: any): any;
    static isValidKey(keyCode: number): boolean;
    constructor(changeDetector: ChangeDetectorRef, poDateService: PoDateService, poDatepickerRangeElement: ElementRef);
    ngAfterViewInit(): void;
    ngOnInit(): void;
    clear(): void;
    /**
     * Função que atribui foco ao componente.
     *
     * Para utilizá-la é necessário ter a instância do componente no DOM, podendo ser utilizado o ViewChild da seguinte forma:
     *
     * ```
     * import { PoDatepickerRangeComponent } from '@po-ui/ng-components';
     *
     * ...
     *
     * @ViewChild(PoDatepickerRangeComponent, { static: true }) datepickerRange: PoDatepickerRangeComponent;
     *
     * focusDatepickerRange() {
     *   this.datepickerRange.focus();
     * }
     * ```
     */
    focus(): void;
    onBlur(): void;
    onFocus(): void;
    onKeydown(event?: any): void;
    onKeyup(event: any): void;
    resetDateRangeInputValidation(): void;
    updateScreenByModel(model: PoDatepickerRange): void;
    private applyFocusOnDatePickerRangeField;
    private buildMask;
    private formatDate;
    private formatScreenToModel;
    private formatModelToScreen;
    private getDateRangeFormatValidation;
    private getValidatedModel;
    private hasInvalidClass;
    private isEqualBeforeValue;
    private isSetFocusOnBackspace;
    private removeFocusFromDatePickerRangeField;
    private setDateRangeInputValidation;
    private setFocus;
    private setFocusAndPosition;
    private focusOnElement;
    private setFocusOnArrowLeft;
    private setFocusOnArrowRight;
    private setFocusOnBackspace;
    private setFocusOnStartDateCompleted;
    private updateModelByScreen;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDatepickerRangeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDatepickerRangeComponent, "po-datepicker-range", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGF0ZXBpY2tlci1yYW5nZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZGF0ZXBpY2tlci1yYW5nZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgT25Jbml0LCBBZnRlclZpZXdJbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb0RhdGVwaWNrZXJSYW5nZSB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1kYXRlcGlja2VyLXJhbmdlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb0RhdGVwaWNrZXJSYW5nZUJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWRhdGVwaWNrZXItcmFuZ2UtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9EYXRlU2VydmljZSB9IGZyb20gJy4vLi4vLi4vLi4vc2VydmljZXMvcG8tZGF0ZS9wby1kYXRlLnNlcnZpY2UnO1xuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9EYXRlcGlja2VyUmFuZ2VCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpY1wiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciBSYW5nZSBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpYy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWJhc2ljL3NhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItcmFuZ2UtbGFic1wiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciBSYW5nZSBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWxhYnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtbGFicy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLWxhYnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1kYXRlcGlja2VyLXJhbmdlLXZhY2F0aW9uc1wiIHRpdGxlPVwiUE8gRGF0ZXBpY2tlciBSYW5nZSAtIFZhY2F0aW9ucyBTdWdnZXN0aW9uXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1kYXRlcGlja2VyLXJhbmdlLXZhY2F0aW9ucy9zYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMvc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm1cIiB0aXRsZT1cIlBPIERhdGVwaWNrZXIgUmFuZ2UgLSBWYWNhdGlvbnMgUmVhY3RpdmUgRm9ybVwiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMtcmVhY3RpdmUtZm9ybS9zYW1wbGUtcG8tZGF0ZXBpY2tlci1yYW5nZS12YWNhdGlvbnMtcmVhY3RpdmUtZm9ybS5jb21wb25lbnQuaHRtbFwiPlxuICogIDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm0vc2FtcGxlLXBvLWRhdGVwaWNrZXItcmFuZ2UtdmFjYXRpb25zLXJlYWN0aXZlLWZvcm0uY29tcG9uZW50LnRzXCI+XG4gKiAgPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0RhdGVwaWNrZXJSYW5nZUNvbXBvbmVudCBleHRlbmRzIFBvRGF0ZXBpY2tlclJhbmdlQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjtcbiAgICBwcml2YXRlIHBvRGF0ZXBpY2tlclJhbmdlRWxlbWVudDtcbiAgICBwcml2YXRlIHBvTWFza09iamVjdDtcbiAgICBkYXRlUmFuZ2VGaWVsZDogRWxlbWVudFJlZjtcbiAgICBlbmREYXRlSW5wdXQ6IEVsZW1lbnRSZWY7XG4gICAgc3RhcnREYXRlSW5wdXQ6IEVsZW1lbnRSZWY7XG4gICAgZ2V0IGF1dG9jb21wbGV0ZSgpOiBcIm9uXCIgfCBcIm9mZlwiO1xuICAgIGdldCBlbmFibGVDbGVhbmVyKCk6IGJvb2xlYW47XG4gICAgZ2V0IGVuZERhdGVJbnB1dE5hbWUoKTogc3RyaW5nO1xuICAgIGdldCBlbmREYXRlSW5wdXRWYWx1ZSgpOiBzdHJpbmc7XG4gICAgZ2V0IGdldEVycm9yTWVzc2FnZSgpOiBzdHJpbmc7XG4gICAgZ2V0IGlzRGF0ZVJhbmdlSW5wdXRVbmNvbXBsZXRlZCgpOiBib29sZWFuO1xuICAgIGdldCBpc0RpcnR5RGF0ZVJhbmdlSW5wdXQoKTogYm9vbGVhbjtcbiAgICBnZXQgc3RhcnREYXRlSW5wdXROYW1lKCk6IHN0cmluZztcbiAgICBnZXQgc3RhcnREYXRlSW5wdXRWYWx1ZSgpOiBzdHJpbmc7XG4gICAgc3RhdGljIGdldEtleUNvZGUoZXZlbnQ6IEtleWJvYXJkRXZlbnQpOiBudW1iZXI7XG4gICAgc3RhdGljIGdldFRhcmdldEVsZW1lbnQoZXZlbnQ6IGFueSk6IGFueTtcbiAgICBzdGF0aWMgaXNWYWxpZEtleShrZXlDb2RlOiBudW1iZXIpOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgcG9EYXRlU2VydmljZTogUG9EYXRlU2VydmljZSwgcG9EYXRlcGlja2VyUmFuZ2VFbGVtZW50OiBFbGVtZW50UmVmKTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIGNsZWFyKCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogRnVuw6fDo28gcXVlIGF0cmlidWkgZm9jbyBhbyBjb21wb25lbnRlLlxuICAgICAqXG4gICAgICogUGFyYSB1dGlsaXrDoS1sYSDDqSBuZWNlc3PDoXJpbyB0ZXIgYSBpbnN0w6JuY2lhIGRvIGNvbXBvbmVudGUgbm8gRE9NLCBwb2RlbmRvIHNlciB1dGlsaXphZG8gbyBWaWV3Q2hpbGQgZGEgc2VndWludGUgZm9ybWE6XG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiBpbXBvcnQgeyBQb0RhdGVwaWNrZXJSYW5nZUNvbXBvbmVudCB9IGZyb20gJ0Bwby11aS9uZy1jb21wb25lbnRzJztcbiAgICAgKlxuICAgICAqIC4uLlxuICAgICAqXG4gICAgICogQFZpZXdDaGlsZChQb0RhdGVwaWNrZXJSYW5nZUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgZGF0ZXBpY2tlclJhbmdlOiBQb0RhdGVwaWNrZXJSYW5nZUNvbXBvbmVudDtcbiAgICAgKlxuICAgICAqIGZvY3VzRGF0ZXBpY2tlclJhbmdlKCkge1xuICAgICAqICAgdGhpcy5kYXRlcGlja2VyUmFuZ2UuZm9jdXMoKTtcbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZm9jdXMoKTogdm9pZDtcbiAgICBvbkJsdXIoKTogdm9pZDtcbiAgICBvbkZvY3VzKCk6IHZvaWQ7XG4gICAgb25LZXlkb3duKGV2ZW50PzogYW55KTogdm9pZDtcbiAgICBvbktleXVwKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHJlc2V0RGF0ZVJhbmdlSW5wdXRWYWxpZGF0aW9uKCk6IHZvaWQ7XG4gICAgdXBkYXRlU2NyZWVuQnlNb2RlbChtb2RlbDogUG9EYXRlcGlja2VyUmFuZ2UpOiB2b2lkO1xuICAgIHByaXZhdGUgYXBwbHlGb2N1c09uRGF0ZVBpY2tlclJhbmdlRmllbGQ7XG4gICAgcHJpdmF0ZSBidWlsZE1hc2s7XG4gICAgcHJpdmF0ZSBmb3JtYXREYXRlO1xuICAgIHByaXZhdGUgZm9ybWF0U2NyZWVuVG9Nb2RlbDtcbiAgICBwcml2YXRlIGZvcm1hdE1vZGVsVG9TY3JlZW47XG4gICAgcHJpdmF0ZSBnZXREYXRlUmFuZ2VGb3JtYXRWYWxpZGF0aW9uO1xuICAgIHByaXZhdGUgZ2V0VmFsaWRhdGVkTW9kZWw7XG4gICAgcHJpdmF0ZSBoYXNJbnZhbGlkQ2xhc3M7XG4gICAgcHJpdmF0ZSBpc0VxdWFsQmVmb3JlVmFsdWU7XG4gICAgcHJpdmF0ZSBpc1NldEZvY3VzT25CYWNrc3BhY2U7XG4gICAgcHJpdmF0ZSByZW1vdmVGb2N1c0Zyb21EYXRlUGlja2VyUmFuZ2VGaWVsZDtcbiAgICBwcml2YXRlIHNldERhdGVSYW5nZUlucHV0VmFsaWRhdGlvbjtcbiAgICBwcml2YXRlIHNldEZvY3VzO1xuICAgIHByaXZhdGUgc2V0Rm9jdXNBbmRQb3NpdGlvbjtcbiAgICBwcml2YXRlIGZvY3VzT25FbGVtZW50O1xuICAgIHByaXZhdGUgc2V0Rm9jdXNPbkFycm93TGVmdDtcbiAgICBwcml2YXRlIHNldEZvY3VzT25BcnJvd1JpZ2h0O1xuICAgIHByaXZhdGUgc2V0Rm9jdXNPbkJhY2tzcGFjZTtcbiAgICBwcml2YXRlIHNldEZvY3VzT25TdGFydERhdGVDb21wbGV0ZWQ7XG4gICAgcHJpdmF0ZSB1cGRhdGVNb2RlbEJ5U2NyZWVuO1xufVxuIl19