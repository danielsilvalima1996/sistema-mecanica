import { EventEmitter } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { PoTableDetail } from './po-table-detail.interface';
import { PoTableDetailColumn } from './po-table-detail-column.interface';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente responsável por apresentar o detalhe de cada linha da tabela.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTableDetailComponent {
    private decimalPipe;
    private _detail;
    /**
     * Configuração da linha de detalhes.
     */
    set detail(value: PoTableDetail);
    get detail(): PoTableDetail;
    /**
     * Lista de itens do _detail_ da tabela.
     */
    items: Array<any>;
    /**
     * Define se a tabela possui a opção de `selectable` habilitada.
     */
    isSelectable?: boolean;
    /**
     * Ação executada ao selecionar ou desmarcar a seleção de uma linha de detalhe do `po-table`.
     */
    selectRow?: EventEmitter<any>;
    constructor(decimalPipe: DecimalPipe);
    get detailColumns(): Array<PoTableDetailColumn>;
    get typeHeaderInline(): boolean;
    get typeHeaderTop(): boolean;
    formatNumberDetail(value: any, format: string): any;
    getColumnTitleLabel(detail: PoTableDetailColumn): string;
    onSelectRow(item: any): void;
    private returnPoTableDetailObject;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTableDetailComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoTableDetailComponent, "po-table-detail", never, { "isSelectable": "p-selectable"; "detail": "p-detail"; "items": "p-items"; }, { "selectRow": "p-select-row"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtZGV0YWlsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby10YWJsZS1kZXRhaWwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERlY2ltYWxQaXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFBvVGFibGVEZXRhaWwgfSBmcm9tICcuL3BvLXRhYmxlLWRldGFpbC5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9UYWJsZURldGFpbENvbHVtbiB9IGZyb20gJy4vcG8tdGFibGUtZGV0YWlsLWNvbHVtbi5pbnRlcmZhY2UnO1xuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHJlc3BvbnPDoXZlbCBwb3IgYXByZXNlbnRhciBvIGRldGFsaGUgZGUgY2FkYSBsaW5oYSBkYSB0YWJlbGEuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvVGFibGVEZXRhaWxDb21wb25lbnQge1xuICAgIHByaXZhdGUgZGVjaW1hbFBpcGU7XG4gICAgcHJpdmF0ZSBfZGV0YWlsO1xuICAgIC8qKlxuICAgICAqIENvbmZpZ3VyYcOnw6NvIGRhIGxpbmhhIGRlIGRldGFsaGVzLlxuICAgICAqL1xuICAgIHNldCBkZXRhaWwodmFsdWU6IFBvVGFibGVEZXRhaWwpO1xuICAgIGdldCBkZXRhaWwoKTogUG9UYWJsZURldGFpbDtcbiAgICAvKipcbiAgICAgKiBMaXN0YSBkZSBpdGVucyBkbyBfZGV0YWlsXyBkYSB0YWJlbGEuXG4gICAgICovXG4gICAgaXRlbXM6IEFycmF5PGFueT47XG4gICAgLyoqXG4gICAgICogRGVmaW5lIHNlIGEgdGFiZWxhIHBvc3N1aSBhIG9ww6fDo28gZGUgYHNlbGVjdGFibGVgIGhhYmlsaXRhZGEuXG4gICAgICovXG4gICAgaXNTZWxlY3RhYmxlPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBw6fDo28gZXhlY3V0YWRhIGFvIHNlbGVjaW9uYXIgb3UgZGVzbWFyY2FyIGEgc2VsZcOnw6NvIGRlIHVtYSBsaW5oYSBkZSBkZXRhbGhlIGRvIGBwby10YWJsZWAuXG4gICAgICovXG4gICAgc2VsZWN0Um93PzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3IoZGVjaW1hbFBpcGU6IERlY2ltYWxQaXBlKTtcbiAgICBnZXQgZGV0YWlsQ29sdW1ucygpOiBBcnJheTxQb1RhYmxlRGV0YWlsQ29sdW1uPjtcbiAgICBnZXQgdHlwZUhlYWRlcklubGluZSgpOiBib29sZWFuO1xuICAgIGdldCB0eXBlSGVhZGVyVG9wKCk6IGJvb2xlYW47XG4gICAgZm9ybWF0TnVtYmVyRGV0YWlsKHZhbHVlOiBhbnksIGZvcm1hdDogc3RyaW5nKTogYW55O1xuICAgIGdldENvbHVtblRpdGxlTGFiZWwoZGV0YWlsOiBQb1RhYmxlRGV0YWlsQ29sdW1uKTogc3RyaW5nO1xuICAgIG9uU2VsZWN0Um93KGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZXR1cm5Qb1RhYmxlRGV0YWlsT2JqZWN0O1xufVxuIl19