import { PoInfoOrientation } from './po-info-orietation.enum';
import * as ɵngcc0 from '@angular/core';
export declare class PoInfoBaseComponent {
    private _labelSize;
    private _orientation;
    readonly poInfoOrientation: typeof PoInfoOrientation;
    /** Valor do rótulo a ser exibido. */
    label: string;
    /**
     * @optional
     *
     * @description
     *
     * Quantidade de [colunas](/guides/grid-system) usadas para a exibição da `p-label` quando o componente for
     * utilizado na orientação horizontal.
     *
     * Valores válidos:
     *  - `[1 .. 11]`
     *
     * > A propriedade `p-value` recebe o número de colunas restantes, por exemplo, se definido 3 colunas a mesma assume 9 colunas.
     */
    set labelSize(value: number);
    get labelSize(): number;
    /**
     * @optional
     *
     * @description
     *
     * Define o layout de exibição.
     *
     * > Quando definido na horizontal, pode-se utilizar a propriedade `p-label-size` para um maior controle das informações exibidas.
     *
     * @default `vertical`
     */
    set orientation(value: PoInfoOrientation);
    get orientation(): PoInfoOrientation;
    /**
     * Ao informar uma URL, o conteúdo será exibido na forma de um *link* e ao ser clicado será redirecionado para a URL informada.
     *
     * > Caso informar `http://` será aberto uma nova aba.
     * Caso informar um caminho relativo, exemplo: `/customers`, será aberto na aba atual.
     *
     */
    url?: string;
    /** Valor do conteúdo a ser exibido. */
    value?: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoInfoBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoInfoBaseComponent, never, never, { "labelSize": "p-label-size"; "orientation": "p-orientation"; "label": "p-label"; "url": "p-url"; "value": "p-value"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8taW5mby1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1pbmZvLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb0luZm9PcmllbnRhdGlvbiB9IGZyb20gJy4vcG8taW5mby1vcmlldGF0aW9uLmVudW0nO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9JbmZvQmFzZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfbGFiZWxTaXplO1xuICAgIHByaXZhdGUgX29yaWVudGF0aW9uO1xuICAgIHJlYWRvbmx5IHBvSW5mb09yaWVudGF0aW9uOiB0eXBlb2YgUG9JbmZvT3JpZW50YXRpb247XG4gICAgLyoqIFZhbG9yIGRvIHLDs3R1bG8gYSBzZXIgZXhpYmlkby4gKi9cbiAgICBsYWJlbDogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBRdWFudGlkYWRlIGRlIFtjb2x1bmFzXSgvZ3VpZGVzL2dyaWQtc3lzdGVtKSB1c2FkYXMgcGFyYSBhIGV4aWJpw6fDo28gZGEgYHAtbGFiZWxgIHF1YW5kbyBvIGNvbXBvbmVudGUgZm9yXG4gICAgICogdXRpbGl6YWRvIG5hIG9yaWVudGHDp8OjbyBob3Jpem9udGFsLlxuICAgICAqXG4gICAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICAgKiAgLSBgWzEgLi4gMTFdYFxuICAgICAqXG4gICAgICogPiBBIHByb3ByaWVkYWRlIGBwLXZhbHVlYCByZWNlYmUgbyBuw7ptZXJvIGRlIGNvbHVuYXMgcmVzdGFudGVzLCBwb3IgZXhlbXBsbywgc2UgZGVmaW5pZG8gMyBjb2x1bmFzIGEgbWVzbWEgYXNzdW1lIDkgY29sdW5hcy5cbiAgICAgKi9cbiAgICBzZXQgbGFiZWxTaXplKHZhbHVlOiBudW1iZXIpO1xuICAgIGdldCBsYWJlbFNpemUoKTogbnVtYmVyO1xuICAgIC8qKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBEZWZpbmUgbyBsYXlvdXQgZGUgZXhpYmnDp8Ojby5cbiAgICAgKlxuICAgICAqID4gUXVhbmRvIGRlZmluaWRvIG5hIGhvcml6b250YWwsIHBvZGUtc2UgdXRpbGl6YXIgYSBwcm9wcmllZGFkZSBgcC1sYWJlbC1zaXplYCBwYXJhIHVtIG1haW9yIGNvbnRyb2xlIGRhcyBpbmZvcm1hw6fDtWVzIGV4aWJpZGFzLlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgYHZlcnRpY2FsYFxuICAgICAqL1xuICAgIHNldCBvcmllbnRhdGlvbih2YWx1ZTogUG9JbmZvT3JpZW50YXRpb24pO1xuICAgIGdldCBvcmllbnRhdGlvbigpOiBQb0luZm9PcmllbnRhdGlvbjtcbiAgICAvKipcbiAgICAgKiBBbyBpbmZvcm1hciB1bWEgVVJMLCBvIGNvbnRlw7pkbyBzZXLDoSBleGliaWRvIG5hIGZvcm1hIGRlIHVtICpsaW5rKiBlIGFvIHNlciBjbGljYWRvIHNlcsOhIHJlZGlyZWNpb25hZG8gcGFyYSBhIFVSTCBpbmZvcm1hZGEuXG4gICAgICpcbiAgICAgKiA+IENhc28gaW5mb3JtYXIgYGh0dHA6Ly9gIHNlcsOhIGFiZXJ0byB1bWEgbm92YSBhYmEuXG4gICAgICogQ2FzbyBpbmZvcm1hciB1bSBjYW1pbmhvIHJlbGF0aXZvLCBleGVtcGxvOiBgL2N1c3RvbWVyc2AsIHNlcsOhIGFiZXJ0byBuYSBhYmEgYXR1YWwuXG4gICAgICpcbiAgICAgKi9cbiAgICB1cmw/OiBzdHJpbmc7XG4gICAgLyoqIFZhbG9yIGRvIGNvbnRlw7pkbyBhIHNlciBleGliaWRvLiAqL1xuICAgIHZhbHVlPzogc3RyaW5nO1xufVxuIl19