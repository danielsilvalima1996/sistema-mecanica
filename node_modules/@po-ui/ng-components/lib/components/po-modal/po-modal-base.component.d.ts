import { EventEmitter } from '@angular/core';
import { PoModalAction } from './po-modal-action.interface';
/**
 * @description
 *
 * O componente `po-modal` é utilizado para incluir conteúdos rápidos e informativos.
 *
 * No cabeçalho do componente é possível definir um título e como também permite ocultar o ícone de fechamento da modal.
 *
 * Em seu corpo é possível definir um conteúdo informativo, podendo utilizar componentes como por exemplo `po-chart`,
 * `po-table` e os demais componentes do PO.
 *
 * No rodapé encontram-se os botões de ação primária e secundária, no qual permitem definir uma ação e um rótulo, bem como
 * definir um estado de carregando e / ou desabilitado. Também é possível definir o botão com o tipo *danger*.
 *
 * > É possível fechar a modal através da tecla *ESC*, quando a propriedade `p-hide-close` não estiver habilitada.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoModalBaseComponent {
    private _hideClose?;
    private _size?;
    /** Título da modal. */
    title: string;
    /**
     * Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da primeira ação.
     * Caso esta propriedade não seja definida ou esteja incompleta, automaticamente será adicionado um botão de ação com
     * a função de fechar a modal.
     */
    primaryAction?: PoModalAction;
    /** Deve ser definido um objeto que implementa a interface `PoModalAction` contendo a label e a função da segunda ação. */
    secondaryAction?: PoModalAction;
    /**
     * Define o tamanho da modal.
     *
     * Valores válidos:
     *  - `sm` (pequeno)
     *  - `md` (médio)
     *  - `lg` (grande)
     *  - `xl` (extra grande)
     *  - `auto` (automático)
     *
     * > Quando informado `auto` a modal calculará automaticamente seu tamanho baseado em seu conteúdo.
     * Caso não seja informado um valor, a modal terá o tamanho definido como `md`.
     *
     * > Todas as opções de tamanho possuem uma largura máxima de **768px**.
     */
    set size(value: string);
    get size(): string;
    /**
     * Define o fechamento da modal ao clicar fora da mesma.
     * Informe o valor `true` para ativar o fechamento ao clicar fora da modal.
     */
    clickOut?: boolean;
    set setClickOut(value: boolean | string);
    /**
     * @optional
     *
     * @description
     *
     * Oculta o ícone de fechar do cabeçalho da modal.
     *
     * > Caso a propriedade estiver habilitada, não será possível fechar a modal através da tecla *ESC*.
     *
     * @default `false`
     */
    set hideClose(value: boolean);
    get hideClose(): boolean;
    isHidden: boolean;
    onXClosed: EventEmitter<boolean>;
    /** Função para fechar a modal. */
    close(xClosed?: boolean): void;
    /** Função para abrir a modal. */
    open(): void;
    validPrimaryAction(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoModalBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoModalBaseComponent, never, never, { "size": "p-size"; "setClickOut": "p-click-out"; "hideClose": "p-hide-close"; "primaryAction": "p-primary-action"; "title": "p-title"; "secondaryAction": "p-secondary-action"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbW9kYWwtYmFzZS5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tbW9kYWwtYmFzZS5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQb01vZGFsQWN0aW9uIH0gZnJvbSAnLi9wby1tb2RhbC1hY3Rpb24uaW50ZXJmYWNlJztcbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIGBwby1tb2RhbGAgw6kgdXRpbGl6YWRvIHBhcmEgaW5jbHVpciBjb250ZcO6ZG9zIHLDoXBpZG9zIGUgaW5mb3JtYXRpdm9zLlxuICpcbiAqIE5vIGNhYmXDp2FsaG8gZG8gY29tcG9uZW50ZSDDqSBwb3Nzw612ZWwgZGVmaW5pciB1bSB0w610dWxvIGUgY29tbyB0YW1iw6ltIHBlcm1pdGUgb2N1bHRhciBvIMOtY29uZSBkZSBmZWNoYW1lbnRvIGRhIG1vZGFsLlxuICpcbiAqIEVtIHNldSBjb3JwbyDDqSBwb3Nzw612ZWwgZGVmaW5pciB1bSBjb250ZcO6ZG8gaW5mb3JtYXRpdm8sIHBvZGVuZG8gdXRpbGl6YXIgY29tcG9uZW50ZXMgY29tbyBwb3IgZXhlbXBsbyBgcG8tY2hhcnRgLFxuICogYHBvLXRhYmxlYCBlIG9zIGRlbWFpcyBjb21wb25lbnRlcyBkbyBQTy5cbiAqXG4gKiBObyByb2RhcMOpIGVuY29udHJhbS1zZSBvcyBib3TDtWVzIGRlIGHDp8OjbyBwcmltw6FyaWEgZSBzZWN1bmTDoXJpYSwgbm8gcXVhbCBwZXJtaXRlbSBkZWZpbmlyIHVtYSBhw6fDo28gZSB1bSByw7N0dWxvLCBiZW0gY29tb1xuICogZGVmaW5pciB1bSBlc3RhZG8gZGUgY2FycmVnYW5kbyBlIC8gb3UgZGVzYWJpbGl0YWRvLiBUYW1iw6ltIMOpIHBvc3PDrXZlbCBkZWZpbmlyIG8gYm90w6NvIGNvbSBvIHRpcG8gKmRhbmdlciouXG4gKlxuICogPiDDiSBwb3Nzw612ZWwgZmVjaGFyIGEgbW9kYWwgYXRyYXbDqXMgZGEgdGVjbGEgKkVTQyosIHF1YW5kbyBhIHByb3ByaWVkYWRlIGBwLWhpZGUtY2xvc2VgIG7Do28gZXN0aXZlciBoYWJpbGl0YWRhLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb01vZGFsQmFzZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfaGlkZUNsb3NlPztcbiAgICBwcml2YXRlIF9zaXplPztcbiAgICAvKiogVMOtdHVsbyBkYSBtb2RhbC4gKi9cbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIERldmUgc2VyIGRlZmluaWRvIHVtIG9iamV0byBxdWUgaW1wbGVtZW50YSBhIGludGVyZmFjZSBgUG9Nb2RhbEFjdGlvbmAgY29udGVuZG8gYSBsYWJlbCBlIGEgZnVuw6fDo28gZGEgcHJpbWVpcmEgYcOnw6NvLlxuICAgICAqIENhc28gZXN0YSBwcm9wcmllZGFkZSBuw6NvIHNlamEgZGVmaW5pZGEgb3UgZXN0ZWphIGluY29tcGxldGEsIGF1dG9tYXRpY2FtZW50ZSBzZXLDoSBhZGljaW9uYWRvIHVtIGJvdMOjbyBkZSBhw6fDo28gY29tXG4gICAgICogYSBmdW7Dp8OjbyBkZSBmZWNoYXIgYSBtb2RhbC5cbiAgICAgKi9cbiAgICBwcmltYXJ5QWN0aW9uPzogUG9Nb2RhbEFjdGlvbjtcbiAgICAvKiogRGV2ZSBzZXIgZGVmaW5pZG8gdW0gb2JqZXRvIHF1ZSBpbXBsZW1lbnRhIGEgaW50ZXJmYWNlIGBQb01vZGFsQWN0aW9uYCBjb250ZW5kbyBhIGxhYmVsIGUgYSBmdW7Dp8OjbyBkYSBzZWd1bmRhIGHDp8Ojby4gKi9cbiAgICBzZWNvbmRhcnlBY3Rpb24/OiBQb01vZGFsQWN0aW9uO1xuICAgIC8qKlxuICAgICAqIERlZmluZSBvIHRhbWFuaG8gZGEgbW9kYWwuXG4gICAgICpcbiAgICAgKiBWYWxvcmVzIHbDoWxpZG9zOlxuICAgICAqICAtIGBzbWAgKHBlcXVlbm8pXG4gICAgICogIC0gYG1kYCAobcOpZGlvKVxuICAgICAqICAtIGBsZ2AgKGdyYW5kZSlcbiAgICAgKiAgLSBgeGxgIChleHRyYSBncmFuZGUpXG4gICAgICogIC0gYGF1dG9gIChhdXRvbcOhdGljbylcbiAgICAgKlxuICAgICAqID4gUXVhbmRvIGluZm9ybWFkbyBgYXV0b2AgYSBtb2RhbCBjYWxjdWxhcsOhIGF1dG9tYXRpY2FtZW50ZSBzZXUgdGFtYW5obyBiYXNlYWRvIGVtIHNldSBjb250ZcO6ZG8uXG4gICAgICogQ2FzbyBuw6NvIHNlamEgaW5mb3JtYWRvIHVtIHZhbG9yLCBhIG1vZGFsIHRlcsOhIG8gdGFtYW5obyBkZWZpbmlkbyBjb21vIGBtZGAuXG4gICAgICpcbiAgICAgKiA+IFRvZGFzIGFzIG9ww6fDtWVzIGRlIHRhbWFuaG8gcG9zc3VlbSB1bWEgbGFyZ3VyYSBtw6F4aW1hIGRlICoqNzY4cHgqKi5cbiAgICAgKi9cbiAgICBzZXQgc2l6ZSh2YWx1ZTogc3RyaW5nKTtcbiAgICBnZXQgc2l6ZSgpOiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogRGVmaW5lIG8gZmVjaGFtZW50byBkYSBtb2RhbCBhbyBjbGljYXIgZm9yYSBkYSBtZXNtYS5cbiAgICAgKiBJbmZvcm1lIG8gdmFsb3IgYHRydWVgIHBhcmEgYXRpdmFyIG8gZmVjaGFtZW50byBhbyBjbGljYXIgZm9yYSBkYSBtb2RhbC5cbiAgICAgKi9cbiAgICBjbGlja091dD86IGJvb2xlYW47XG4gICAgc2V0IHNldENsaWNrT3V0KHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKTtcbiAgICAvKipcbiAgICAgKiBAb3B0aW9uYWxcbiAgICAgKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqXG4gICAgICogT2N1bHRhIG8gw61jb25lIGRlIGZlY2hhciBkbyBjYWJlw6dhbGhvIGRhIG1vZGFsLlxuICAgICAqXG4gICAgICogPiBDYXNvIGEgcHJvcHJpZWRhZGUgZXN0aXZlciBoYWJpbGl0YWRhLCBuw6NvIHNlcsOhIHBvc3PDrXZlbCBmZWNoYXIgYSBtb2RhbCBhdHJhdsOpcyBkYSB0ZWNsYSAqRVNDKi5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICAgKi9cbiAgICBzZXQgaGlkZUNsb3NlKHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgaGlkZUNsb3NlKCk6IGJvb2xlYW47XG4gICAgaXNIaWRkZW46IGJvb2xlYW47XG4gICAgb25YQ2xvc2VkOiBFdmVudEVtaXR0ZXI8Ym9vbGVhbj47XG4gICAgLyoqIEZ1bsOnw6NvIHBhcmEgZmVjaGFyIGEgbW9kYWwuICovXG4gICAgY2xvc2UoeENsb3NlZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIC8qKiBGdW7Dp8OjbyBwYXJhIGFicmlyIGEgbW9kYWwuICovXG4gICAgb3BlbigpOiB2b2lkO1xuICAgIHZhbGlkUHJpbWFyeUFjdGlvbigpOiB2b2lkO1xufVxuIl19