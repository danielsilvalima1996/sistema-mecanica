import { ElementRef } from '@angular/core';
import { PoModalBaseComponent } from './po-modal-base.component';
import { PoModalService } from './po-modal-service';
/**
 * @docsExtends PoModalBaseComponent
 *
 * @example
 *
 * <example name="po-modal-basic" title="PO Modal Basic">
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.html"> </file>
 *  <file name="sample-po-modal-basic/sample-po-modal-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-labs" title="PO Modal Labs">
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.html"> </file>
 *  <file name="sample-po-modal-labs/sample-po-modal-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-modal-fruits-salad" title="PO Modal - Fruits Salad">
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.html"> </file>
 *  <file name="sample-po-modal-fruits-salad/sample-po-modal-fruits-salad.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoModalComponent extends PoModalBaseComponent {
    private poModalService;
    modalContent: ElementRef;
    private firstElement;
    private focusFunction;
    private focusableElements;
    private id;
    private sourceElement;
    constructor(poModalService: PoModalService);
    close(xClosed?: boolean): void;
    closeModalOnEscapeKey(event: any): void;
    getPrimaryActionButtonType(): "primary" | "danger";
    getSecondaryActionButtonType(): "default" | "danger";
    onClickOut(event: any): void;
    open(): void;
    private handleFocus;
    private initFocus;
    private removeEventListeners;
    private setFirstElement;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoModalComponent, "po-modal", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbW9kYWwuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLW1vZGFsLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9Nb2RhbEJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLW1vZGFsLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvTW9kYWxTZXJ2aWNlIH0gZnJvbSAnLi9wby1tb2RhbC1zZXJ2aWNlJztcbi8qKlxuICogQGRvY3NFeHRlbmRzIFBvTW9kYWxCYXNlQ29tcG9uZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tbW9kYWwtYmFzaWNcIiB0aXRsZT1cIlBPIE1vZGFsIEJhc2ljXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1iYXNpYy9zYW1wbGUtcG8tbW9kYWwtYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbW9kYWwtYmFzaWMvc2FtcGxlLXBvLW1vZGFsLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLW1vZGFsLWxhYnNcIiB0aXRsZT1cIlBPIE1vZGFsIExhYnNcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLW1vZGFsLWxhYnMvc2FtcGxlLXBvLW1vZGFsLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tbW9kYWwtbGFicy9zYW1wbGUtcG8tbW9kYWwtbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1tb2RhbC1mcnVpdHMtc2FsYWRcIiB0aXRsZT1cIlBPIE1vZGFsIC0gRnJ1aXRzIFNhbGFkXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1mcnVpdHMtc2FsYWQvc2FtcGxlLXBvLW1vZGFsLWZydWl0cy1zYWxhZC5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1tb2RhbC1mcnVpdHMtc2FsYWQvc2FtcGxlLXBvLW1vZGFsLWZydWl0cy1zYWxhZC5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb01vZGFsQ29tcG9uZW50IGV4dGVuZHMgUG9Nb2RhbEJhc2VDb21wb25lbnQge1xuICAgIHByaXZhdGUgcG9Nb2RhbFNlcnZpY2U7XG4gICAgbW9kYWxDb250ZW50OiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgZmlyc3RFbGVtZW50O1xuICAgIHByaXZhdGUgZm9jdXNGdW5jdGlvbjtcbiAgICBwcml2YXRlIGZvY3VzYWJsZUVsZW1lbnRzO1xuICAgIHByaXZhdGUgaWQ7XG4gICAgcHJpdmF0ZSBzb3VyY2VFbGVtZW50O1xuICAgIGNvbnN0cnVjdG9yKHBvTW9kYWxTZXJ2aWNlOiBQb01vZGFsU2VydmljZSk7XG4gICAgY2xvc2UoeENsb3NlZD86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNsb3NlTW9kYWxPbkVzY2FwZUtleShldmVudDogYW55KTogdm9pZDtcbiAgICBnZXRQcmltYXJ5QWN0aW9uQnV0dG9uVHlwZSgpOiBcInByaW1hcnlcIiB8IFwiZGFuZ2VyXCI7XG4gICAgZ2V0U2Vjb25kYXJ5QWN0aW9uQnV0dG9uVHlwZSgpOiBcImRlZmF1bHRcIiB8IFwiZGFuZ2VyXCI7XG4gICAgb25DbGlja091dChldmVudDogYW55KTogdm9pZDtcbiAgICBvcGVuKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBoYW5kbGVGb2N1cztcbiAgICBwcml2YXRlIGluaXRGb2N1cztcbiAgICBwcml2YXRlIHJlbW92ZUV2ZW50TGlzdGVuZXJzO1xuICAgIHByaXZhdGUgc2V0Rmlyc3RFbGVtZW50O1xufVxuIl19