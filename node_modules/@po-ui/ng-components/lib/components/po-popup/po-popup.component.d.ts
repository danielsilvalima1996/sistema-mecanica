import { ChangeDetectorRef, ElementRef, Renderer2, ViewContainerRef } from '@angular/core';
import { Router } from '@angular/router';
import { PoControlPositionService } from '../../services/po-control-position/po-control-position.service';
import { PoPopupAction } from './po-popup-action.interface';
import { PoPopupBaseComponent } from './po-popup-base.component';
/**
 *
 * @docsExtends PoPopupBaseComponent
 *
 * @example
 *
 * <example name="po-popup-basic" title="PO Popup - Basic">
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.html"> </file>
 *   <file name="sample-po-popup-basic/sample-po-popup-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-labs" title="PO Popup - Labs">
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.html"> </file>
 *   <file name="sample-po-popup-labs/sample-po-popup-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-popup-email" title="PO Popup Email">
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.html"> </file>
 *   <file name="sample-po-popup-email/sample-po-popup-email.component.ts"> </file>
 * </example>
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPopupComponent extends PoPopupBaseComponent {
    private renderer;
    private router;
    private poControlPosition;
    changeDetector: ChangeDetectorRef;
    popupRef: ElementRef;
    constructor(viewContainerRef: ViewContainerRef, renderer: Renderer2, router: Router, poControlPosition: PoControlPositionService, changeDetector: ChangeDetectorRef);
    /**
     * Fecha o componente *popup*.
     *
     * > Por padrão, este comportamento é acionado somente ao clicar fora do componente ou em determinada ação / url.
     */
    close(): void;
    onActionClick(popupAction: PoPopupAction): void | Promise<boolean>;
    /**
     * Abre o componente *popup*.
     *
     * > É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    open(param?: any): void;
    returnBooleanValue(popupAction: any, property: string): any;
    /**
     * Responsável por abrir e fechar o *popup*.
     *
     * Quando disparado abrirá o *popup* e caso o mesmo já estiver aberto e possuir o mesmo `target` irá fecha-lo.
     *
     * É possível informar um parâmetro que será utilizado na execução da ação do item e na função de desabilitar.
     */
    toggle(param?: any): void;
    private clickedOutDisabledItem;
    private clickedOutHeaderTemplate;
    private clickedOutTarget;
    private closePopupOnClickout;
    private elementContains;
    private hasContentToShow;
    private initializeListeners;
    private onScroll;
    private openUrl;
    private removeListeners;
    private setPosition;
    private validateInitialContent;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPopupComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoPopupComponent, "po-popup", never, {}, {}, never, ["[p-popup-header-template]"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcG9wdXAuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXBvcHVwLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRlciB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBQb0NvbnRyb2xQb3NpdGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9wby1jb250cm9sLXBvc2l0aW9uL3BvLWNvbnRyb2wtcG9zaXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBQb1BvcHVwQWN0aW9uIH0gZnJvbSAnLi9wby1wb3B1cC1hY3Rpb24uaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvUG9wdXBCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1wb3B1cC1iYXNlLmNvbXBvbmVudCc7XG4vKipcbiAqXG4gKiBAZG9jc0V4dGVuZHMgUG9Qb3B1cEJhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1wb3B1cC1iYXNpY1wiIHRpdGxlPVwiUE8gUG9wdXAgLSBCYXNpY1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcHVwLWJhc2ljL3NhbXBsZS1wby1wb3B1cC1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcG9wdXAtYmFzaWMvc2FtcGxlLXBvLXBvcHVwLWJhc2ljLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXBvcHVwLWxhYnNcIiB0aXRsZT1cIlBPIFBvcHVwIC0gTGFic1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcHVwLWxhYnMvc2FtcGxlLXBvLXBvcHVwLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXBvcHVwLWxhYnMvc2FtcGxlLXBvLXBvcHVwLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tcG9wdXAtZW1haWxcIiB0aXRsZT1cIlBPIFBvcHVwIEVtYWlsXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tcG9wdXAtZW1haWwvc2FtcGxlLXBvLXBvcHVwLWVtYWlsLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1wb3B1cC1lbWFpbC9zYW1wbGUtcG8tcG9wdXAtZW1haWwuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvUG9wdXBDb21wb25lbnQgZXh0ZW5kcyBQb1BvcHVwQmFzZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSByZW5kZXJlcjtcbiAgICBwcml2YXRlIHJvdXRlcjtcbiAgICBwcml2YXRlIHBvQ29udHJvbFBvc2l0aW9uO1xuICAgIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwb3B1cFJlZjogRWxlbWVudFJlZjtcbiAgICBjb25zdHJ1Y3Rvcih2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCByZW5kZXJlcjogUmVuZGVyZXIyLCByb3V0ZXI6IFJvdXRlciwgcG9Db250cm9sUG9zaXRpb246IFBvQ29udHJvbFBvc2l0aW9uU2VydmljZSwgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICAvKipcbiAgICAgKiBGZWNoYSBvIGNvbXBvbmVudGUgKnBvcHVwKi5cbiAgICAgKlxuICAgICAqID4gUG9yIHBhZHLDo28sIGVzdGUgY29tcG9ydGFtZW50byDDqSBhY2lvbmFkbyBzb21lbnRlIGFvIGNsaWNhciBmb3JhIGRvIGNvbXBvbmVudGUgb3UgZW0gZGV0ZXJtaW5hZGEgYcOnw6NvIC8gdXJsLlxuICAgICAqL1xuICAgIGNsb3NlKCk6IHZvaWQ7XG4gICAgb25BY3Rpb25DbGljayhwb3B1cEFjdGlvbjogUG9Qb3B1cEFjdGlvbik6IHZvaWQgfCBQcm9taXNlPGJvb2xlYW4+O1xuICAgIC8qKlxuICAgICAqIEFicmUgbyBjb21wb25lbnRlICpwb3B1cCouXG4gICAgICpcbiAgICAgKiA+IMOJIHBvc3PDrXZlbCBpbmZvcm1hciB1bSBwYXLDom1ldHJvIHF1ZSBzZXLDoSB1dGlsaXphZG8gbmEgZXhlY3XDp8OjbyBkYSBhw6fDo28gZG8gaXRlbSBlIG5hIGZ1bsOnw6NvIGRlIGRlc2FiaWxpdGFyLlxuICAgICAqL1xuICAgIG9wZW4ocGFyYW0/OiBhbnkpOiB2b2lkO1xuICAgIHJldHVybkJvb2xlYW5WYWx1ZShwb3B1cEFjdGlvbjogYW55LCBwcm9wZXJ0eTogc3RyaW5nKTogYW55O1xuICAgIC8qKlxuICAgICAqIFJlc3BvbnPDoXZlbCBwb3IgYWJyaXIgZSBmZWNoYXIgbyAqcG9wdXAqLlxuICAgICAqXG4gICAgICogUXVhbmRvIGRpc3BhcmFkbyBhYnJpcsOhIG8gKnBvcHVwKiBlIGNhc28gbyBtZXNtbyBqw6EgZXN0aXZlciBhYmVydG8gZSBwb3NzdWlyIG8gbWVzbW8gYHRhcmdldGAgaXLDoSBmZWNoYS1sby5cbiAgICAgKlxuICAgICAqIMOJIHBvc3PDrXZlbCBpbmZvcm1hciB1bSBwYXLDom1ldHJvIHF1ZSBzZXLDoSB1dGlsaXphZG8gbmEgZXhlY3XDp8OjbyBkYSBhw6fDo28gZG8gaXRlbSBlIG5hIGZ1bsOnw6NvIGRlIGRlc2FiaWxpdGFyLlxuICAgICAqL1xuICAgIHRvZ2dsZShwYXJhbT86IGFueSk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBjbGlja2VkT3V0RGlzYWJsZWRJdGVtO1xuICAgIHByaXZhdGUgY2xpY2tlZE91dEhlYWRlclRlbXBsYXRlO1xuICAgIHByaXZhdGUgY2xpY2tlZE91dFRhcmdldDtcbiAgICBwcml2YXRlIGNsb3NlUG9wdXBPbkNsaWNrb3V0O1xuICAgIHByaXZhdGUgZWxlbWVudENvbnRhaW5zO1xuICAgIHByaXZhdGUgaGFzQ29udGVudFRvU2hvdztcbiAgICBwcml2YXRlIGluaXRpYWxpemVMaXN0ZW5lcnM7XG4gICAgcHJpdmF0ZSBvblNjcm9sbDtcbiAgICBwcml2YXRlIG9wZW5Vcmw7XG4gICAgcHJpdmF0ZSByZW1vdmVMaXN0ZW5lcnM7XG4gICAgcHJpdmF0ZSBzZXRQb3NpdGlvbjtcbiAgICBwcml2YXRlIHZhbGlkYXRlSW5pdGlhbENvbnRlbnQ7XG59XG4iXX0=