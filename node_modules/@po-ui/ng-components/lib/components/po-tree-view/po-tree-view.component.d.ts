import { OnInit } from '@angular/core';
import { PoTreeViewBaseComponent } from './po-tree-view-base.component';
import { PoTreeViewService } from './services/po-tree-view.service';
/**
 * @docsExtends PoTreeViewBaseComponent
 *
 * @example
 *
 * <example name="po-tree-view-basic" title="PO Tree View Basic">
 *  <file name="sample-po-tree-view-basic/sample-po-tree-view-basic.component.html"> </file>
 *  <file name="sample-po-tree-view-basic/sample-po-tree-view-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-tree-view-labs" title="PO Tree View Labs">
 *  <file name="sample-po-tree-view-labs/sample-po-tree-view-labs.component.html"> </file>
 *  <file name="sample-po-tree-view-labs/sample-po-tree-view-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-tree-view-folder-structure" title="PO Tree View - Folder Structure">
 *  <file name="sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.html"> </file>
 *  <file name="sample-po-tree-view-folder-structure/sample-po-tree-view-folder-structure.component.ts"> </file>
 * </example>
 *
 * <example name="po-tree-view-supermarket" title="PO Tree View - Supermarket">
 *  <file name="sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.html"> </file>
 *  <file name="sample-po-tree-view-supermarket/sample-po-tree-view-supermarket.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoTreeViewComponent extends PoTreeViewBaseComponent implements OnInit {
    private treeViewService;
    get hasItems(): boolean;
    constructor(treeViewService: PoTreeViewService);
    ngOnInit(): void;
    trackByFunction(index: number): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoTreeViewComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoTreeViewComponent, "po-tree-view", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdHJlZS12aWV3LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby10cmVlLXZpZXcuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9UcmVlVmlld0Jhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLXRyZWUtdmlldy1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1RyZWVWaWV3U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcG8tdHJlZS12aWV3LnNlcnZpY2UnO1xuLyoqXG4gKiBAZG9jc0V4dGVuZHMgUG9UcmVlVmlld0Jhc2VDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby10cmVlLXZpZXctYmFzaWNcIiB0aXRsZT1cIlBPIFRyZWUgVmlldyBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdHJlZS12aWV3LWJhc2ljL3NhbXBsZS1wby10cmVlLXZpZXctYmFzaWMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdHJlZS12aWV3LWJhc2ljL3NhbXBsZS1wby10cmVlLXZpZXctYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tdHJlZS12aWV3LWxhYnNcIiB0aXRsZT1cIlBPIFRyZWUgVmlldyBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10cmVlLXZpZXctbGFicy9zYW1wbGUtcG8tdHJlZS12aWV3LWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdHJlZS12aWV3LWxhYnMvc2FtcGxlLXBvLXRyZWUtdmlldy1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRyZWUtdmlldy1mb2xkZXItc3RydWN0dXJlXCIgdGl0bGU9XCJQTyBUcmVlIFZpZXcgLSBGb2xkZXIgU3RydWN0dXJlXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby10cmVlLXZpZXctZm9sZGVyLXN0cnVjdHVyZS9zYW1wbGUtcG8tdHJlZS12aWV3LWZvbGRlci1zdHJ1Y3R1cmUuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tdHJlZS12aWV3LWZvbGRlci1zdHJ1Y3R1cmUvc2FtcGxlLXBvLXRyZWUtdmlldy1mb2xkZXItc3RydWN0dXJlLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLXRyZWUtdmlldy1zdXBlcm1hcmtldFwiIHRpdGxlPVwiUE8gVHJlZSBWaWV3IC0gU3VwZXJtYXJrZXRcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRyZWUtdmlldy1zdXBlcm1hcmtldC9zYW1wbGUtcG8tdHJlZS12aWV3LXN1cGVybWFya2V0LmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXRyZWUtdmlldy1zdXBlcm1hcmtldC9zYW1wbGUtcG8tdHJlZS12aWV3LXN1cGVybWFya2V0LmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvVHJlZVZpZXdDb21wb25lbnQgZXh0ZW5kcyBQb1RyZWVWaWV3QmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSB0cmVlVmlld1NlcnZpY2U7XG4gICAgZ2V0IGhhc0l0ZW1zKCk6IGJvb2xlYW47XG4gICAgY29uc3RydWN0b3IodHJlZVZpZXdTZXJ2aWNlOiBQb1RyZWVWaWV3U2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICB0cmFja0J5RnVuY3Rpb24oaW5kZXg6IG51bWJlcik6IG51bWJlcjtcbn1cbiJdfQ==