import { ElementRef } from '@angular/core';
/**
 * @description
 *
 * O componente `po-popover` é um container pequeno recomendado para incluir vários tipos de conteúdo como:
 * gráficos, textos, imagens e inputs. Ele abre sobreposto aos outros componentes.
 *
 * Para mostrar apenas pequenos textos recomenda-se o uso da diretiva
 * [**po-tooltip**](https://po-ui.io/documentation/po-tooltip?view=doc).
 *
 * Para conteúdos maiores recomenda-se o uso do [**po-modal**](https://po-ui.io/documentation/po-modal?view=doc).
 *
 * Ele contém um título e também é possível escolher as posições do popover em relação ao componente pai,
 * as posições permitidas são: `right`, `right-top`, `right-bottom`, `top`, `top-left`, `top-right`,
 * `left`, `left-top`, `left-bottom`, `bottom`, `bottom-left` e `bottom-right`.
 *
 * Também é possível escolher entre os dois eventos que podem abrir o *popover*.
 * Os eventos permitidos são: `click` e `hover`.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoPopoverBaseComponent {
    isHidden: boolean;
    private _hideArrow;
    private _position?;
    private _trigger?;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a seta do componente *popover*.
     *
     * @default `false`
     */
    set hideArrow(value: boolean);
    get hideArrow(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Define a posição que o po-popover abrirá em relação ao componente alvo. Sugere-se que seja
     * usada a orientação "right" (direita), porém o mesmo é flexível e será rotacionado
     * automaticamente para se adequar a tela, caso necessário.
     *
     * Posições válidas:
     * - `right`: Posiciona o po-popover no lado direito do componente alvo.
     * - `right-bottom`: Posiciona o po-popover no lado direito inferior do componente alvo.
     * - `right-top`: Posiciona o po-popover no lado direito superior do componente alvo.
     * - `bottom`: Posiciona o po-popover abaixo do componente alvo.
     * - `bottom-left`: Posiciona o po-popover abaixo e à esquerda do componente alvo.
     * - `bottom-right`: Posiciona o po-popover abaixo e à direita do componente alvo.
     * - `left`: Posiciona o po-popover no lado esquerdo do componente alvo.
     * - `left-top`: Posiciona o po-popover no lado esquerdo superior do componente alvo.
     * - `left-bottom`: Posiciona o po-popover no lado esquerdo inferior do componente alvo.
     * - `top`: Posiciona o po-popover acima do componente alvo.
     * - `top-right`: Posiciona o po-popover acima e à direita do componente alvo.
     * - `top-left`: Posiciona o po-popover acima e à esquerda do componente alvo.
     *
     *
     * @default right
     */
    set position(value: string);
    get position(): string;
    /**
     * @description
     *
     * ElementRef do componente de origem responsável por abrir o popover.
     * Para utilizar o po-popover deve-se colocar uma variável no componente que vai disparar o evento
     * de abertura, exemplo:
     *
     * ```
     * <po-button
     *   p-label="Open Popover">
     * </po-button>
     *
     * <po-popover
     *   [p-origin]="poButton"
     *   [p-title]="PO Popover">
     * </po-popover>
     * ```
     *
     * Também deve-se criar um ViewChild para cada popover, passando como referência o elemento do
     * HTML que irá disparar o evento. Exemplo:
     *
     * ```
     * @ViewChild(PoButtonComponent, {read: ElementRef}) poButton: PoButtonComponent;
     * ```
     */
    target: ElementRef;
    /** Título do popover. */
    title?: string;
    /**
     * @description
     *
     * Define o evento que abrirá o po-popover.
     *
     * Valores válidos:
     *  - `click`: Abre ao clicar no componente alvo.
     *  - `hover`: Abre ao passar o mouse sobre o componente alvo.
     *
     * @default click
     * @optional
     */
    set trigger(value: string);
    get trigger(): string;
    protected clickoutListener: () => void;
    protected mouseEnterListener: () => void;
    protected mouseLeaveListener: () => void;
    protected resizeListener: () => void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoPopoverBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoPopoverBaseComponent, never, never, { "hideArrow": "p-hide-arrow"; "position": "p-position"; "trigger": "p-trigger"; "target": "p-target"; "title": "p-title"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tcG9wb3Zlci1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1wb3BvdmVyLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBPIGNvbXBvbmVudGUgYHBvLXBvcG92ZXJgIMOpIHVtIGNvbnRhaW5lciBwZXF1ZW5vIHJlY29tZW5kYWRvIHBhcmEgaW5jbHVpciB2w6FyaW9zIHRpcG9zIGRlIGNvbnRlw7pkbyBjb21vOlxuICogZ3LDoWZpY29zLCB0ZXh0b3MsIGltYWdlbnMgZSBpbnB1dHMuIEVsZSBhYnJlIHNvYnJlcG9zdG8gYW9zIG91dHJvcyBjb21wb25lbnRlcy5cbiAqXG4gKiBQYXJhIG1vc3RyYXIgYXBlbmFzIHBlcXVlbm9zIHRleHRvcyByZWNvbWVuZGEtc2UgbyB1c28gZGEgZGlyZXRpdmFcbiAqIFsqKnBvLXRvb2x0aXAqKl0oaHR0cHM6Ly9wby11aS5pby9kb2N1bWVudGF0aW9uL3BvLXRvb2x0aXA/dmlldz1kb2MpLlxuICpcbiAqIFBhcmEgY29udGXDumRvcyBtYWlvcmVzIHJlY29tZW5kYS1zZSBvIHVzbyBkbyBbKipwby1tb2RhbCoqXShodHRwczovL3BvLXVpLmlvL2RvY3VtZW50YXRpb24vcG8tbW9kYWw/dmlldz1kb2MpLlxuICpcbiAqIEVsZSBjb250w6ltIHVtIHTDrXR1bG8gZSB0YW1iw6ltIMOpIHBvc3PDrXZlbCBlc2NvbGhlciBhcyBwb3Npw6fDtWVzIGRvIHBvcG92ZXIgZW0gcmVsYcOnw6NvIGFvIGNvbXBvbmVudGUgcGFpLFxuICogYXMgcG9zacOnw7VlcyBwZXJtaXRpZGFzIHPDo286IGByaWdodGAsIGByaWdodC10b3BgLCBgcmlnaHQtYm90dG9tYCwgYHRvcGAsIGB0b3AtbGVmdGAsIGB0b3AtcmlnaHRgLFxuICogYGxlZnRgLCBgbGVmdC10b3BgLCBgbGVmdC1ib3R0b21gLCBgYm90dG9tYCwgYGJvdHRvbS1sZWZ0YCBlIGBib3R0b20tcmlnaHRgLlxuICpcbiAqIFRhbWLDqW0gw6kgcG9zc8OtdmVsIGVzY29saGVyIGVudHJlIG9zIGRvaXMgZXZlbnRvcyBxdWUgcG9kZW0gYWJyaXIgbyAqcG9wb3ZlciouXG4gKiBPcyBldmVudG9zIHBlcm1pdGlkb3Mgc8OjbzogYGNsaWNrYCBlIGBob3ZlcmAuXG4gKlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb1BvcG92ZXJCYXNlQ29tcG9uZW50IHtcbiAgICBpc0hpZGRlbjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9oaWRlQXJyb3c7XG4gICAgcHJpdmF0ZSBfcG9zaXRpb24/O1xuICAgIHByaXZhdGUgX3RyaWdnZXI/O1xuICAgIC8qKlxuICAgICAqIEBvcHRpb25hbFxuICAgICAqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBEZXNhYmlsaXRhIGEgc2V0YSBkbyBjb21wb25lbnRlICpwb3BvdmVyKi5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICAgKi9cbiAgICBzZXQgaGlkZUFycm93KHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgaGlkZUFycm93KCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlZmluZSBhIHBvc2nDp8OjbyBxdWUgbyBwby1wb3BvdmVyIGFicmlyw6EgZW0gcmVsYcOnw6NvIGFvIGNvbXBvbmVudGUgYWx2by4gU3VnZXJlLXNlIHF1ZSBzZWphXG4gICAgICogdXNhZGEgYSBvcmllbnRhw6fDo28gXCJyaWdodFwiIChkaXJlaXRhKSwgcG9yw6ltIG8gbWVzbW8gw6kgZmxleMOtdmVsIGUgc2Vyw6Egcm90YWNpb25hZG9cbiAgICAgKiBhdXRvbWF0aWNhbWVudGUgcGFyYSBzZSBhZGVxdWFyIGEgdGVsYSwgY2FzbyBuZWNlc3PDoXJpby5cbiAgICAgKlxuICAgICAqIFBvc2nDp8O1ZXMgdsOhbGlkYXM6XG4gICAgICogLSBgcmlnaHRgOiBQb3NpY2lvbmEgbyBwby1wb3BvdmVyIG5vIGxhZG8gZGlyZWl0byBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAgICogLSBgcmlnaHQtYm90dG9tYDogUG9zaWNpb25hIG8gcG8tcG9wb3ZlciBubyBsYWRvIGRpcmVpdG8gaW5mZXJpb3IgZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgICAqIC0gYHJpZ2h0LXRvcGA6IFBvc2ljaW9uYSBvIHBvLXBvcG92ZXIgbm8gbGFkbyBkaXJlaXRvIHN1cGVyaW9yIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICAgKiAtIGBib3R0b21gOiBQb3NpY2lvbmEgbyBwby1wb3BvdmVyIGFiYWl4byBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAgICogLSBgYm90dG9tLWxlZnRgOiBQb3NpY2lvbmEgbyBwby1wb3BvdmVyIGFiYWl4byBlIMOgIGVzcXVlcmRhIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICAgKiAtIGBib3R0b20tcmlnaHRgOiBQb3NpY2lvbmEgbyBwby1wb3BvdmVyIGFiYWl4byBlIMOgIGRpcmVpdGEgZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgICAqIC0gYGxlZnRgOiBQb3NpY2lvbmEgbyBwby1wb3BvdmVyIG5vIGxhZG8gZXNxdWVyZG8gZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgICAqIC0gYGxlZnQtdG9wYDogUG9zaWNpb25hIG8gcG8tcG9wb3ZlciBubyBsYWRvIGVzcXVlcmRvIHN1cGVyaW9yIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICAgKiAtIGBsZWZ0LWJvdHRvbWA6IFBvc2ljaW9uYSBvIHBvLXBvcG92ZXIgbm8gbGFkbyBlc3F1ZXJkbyBpbmZlcmlvciBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAgICogLSBgdG9wYDogUG9zaWNpb25hIG8gcG8tcG9wb3ZlciBhY2ltYSBkbyBjb21wb25lbnRlIGFsdm8uXG4gICAgICogLSBgdG9wLXJpZ2h0YDogUG9zaWNpb25hIG8gcG8tcG9wb3ZlciBhY2ltYSBlIMOgIGRpcmVpdGEgZG8gY29tcG9uZW50ZSBhbHZvLlxuICAgICAqIC0gYHRvcC1sZWZ0YDogUG9zaWNpb25hIG8gcG8tcG9wb3ZlciBhY2ltYSBlIMOgIGVzcXVlcmRhIGRvIGNvbXBvbmVudGUgYWx2by5cbiAgICAgKlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgcmlnaHRcbiAgICAgKi9cbiAgICBzZXQgcG9zaXRpb24odmFsdWU6IHN0cmluZyk7XG4gICAgZ2V0IHBvc2l0aW9uKCk6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIEVsZW1lbnRSZWYgZG8gY29tcG9uZW50ZSBkZSBvcmlnZW0gcmVzcG9uc8OhdmVsIHBvciBhYnJpciBvIHBvcG92ZXIuXG4gICAgICogUGFyYSB1dGlsaXphciBvIHBvLXBvcG92ZXIgZGV2ZS1zZSBjb2xvY2FyIHVtYSB2YXJpw6F2ZWwgbm8gY29tcG9uZW50ZSBxdWUgdmFpIGRpc3BhcmFyIG8gZXZlbnRvXG4gICAgICogZGUgYWJlcnR1cmEsIGV4ZW1wbG86XG4gICAgICpcbiAgICAgKiBgYGBcbiAgICAgKiA8cG8tYnV0dG9uXG4gICAgICogICBwLWxhYmVsPVwiT3BlbiBQb3BvdmVyXCI+XG4gICAgICogPC9wby1idXR0b24+XG4gICAgICpcbiAgICAgKiA8cG8tcG9wb3ZlclxuICAgICAqICAgW3Atb3JpZ2luXT1cInBvQnV0dG9uXCJcbiAgICAgKiAgIFtwLXRpdGxlXT1cIlBPIFBvcG92ZXJcIj5cbiAgICAgKiA8L3BvLXBvcG92ZXI+XG4gICAgICogYGBgXG4gICAgICpcbiAgICAgKiBUYW1iw6ltIGRldmUtc2UgY3JpYXIgdW0gVmlld0NoaWxkIHBhcmEgY2FkYSBwb3BvdmVyLCBwYXNzYW5kbyBjb21vIHJlZmVyw6puY2lhIG8gZWxlbWVudG8gZG9cbiAgICAgKiBIVE1MIHF1ZSBpcsOhIGRpc3BhcmFyIG8gZXZlbnRvLiBFeGVtcGxvOlxuICAgICAqXG4gICAgICogYGBgXG4gICAgICogQFZpZXdDaGlsZChQb0J1dHRvbkNvbXBvbmVudCwge3JlYWQ6IEVsZW1lbnRSZWZ9KSBwb0J1dHRvbjogUG9CdXR0b25Db21wb25lbnQ7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgdGFyZ2V0OiBFbGVtZW50UmVmO1xuICAgIC8qKiBUw610dWxvIGRvIHBvcG92ZXIuICovXG4gICAgdGl0bGU/OiBzdHJpbmc7XG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICpcbiAgICAgKiBEZWZpbmUgbyBldmVudG8gcXVlIGFicmlyw6EgbyBwby1wb3BvdmVyLlxuICAgICAqXG4gICAgICogVmFsb3JlcyB2w6FsaWRvczpcbiAgICAgKiAgLSBgY2xpY2tgOiBBYnJlIGFvIGNsaWNhciBubyBjb21wb25lbnRlIGFsdm8uXG4gICAgICogIC0gYGhvdmVyYDogQWJyZSBhbyBwYXNzYXIgbyBtb3VzZSBzb2JyZSBvIGNvbXBvbmVudGUgYWx2by5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGNsaWNrXG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgc2V0IHRyaWdnZXIodmFsdWU6IHN0cmluZyk7XG4gICAgZ2V0IHRyaWdnZXIoKTogc3RyaW5nO1xuICAgIHByb3RlY3RlZCBjbGlja291dExpc3RlbmVyOiAoKSA9PiB2b2lkO1xuICAgIHByb3RlY3RlZCBtb3VzZUVudGVyTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG4gICAgcHJvdGVjdGVkIG1vdXNlTGVhdmVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcbiAgICBwcm90ZWN0ZWQgcmVzaXplTGlzdGVuZXI6ICgpID0+IHZvaWQ7XG59XG4iXX0=