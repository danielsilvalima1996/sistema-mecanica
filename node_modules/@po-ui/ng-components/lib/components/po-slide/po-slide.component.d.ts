import { DoCheck, OnChanges, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
import { PoSlideBaseComponent } from './po-slide-base.component';
import { PoSlideContentTemplateDirective } from './directives/po-slide-content-template.directive';
import { PoSlideItem } from './interfaces/po-slide-item.interface';
/**
 * @docsExtends PoSlideBaseComponent
 *
 * @example
 * <example name="po-slide-basic" title="PO Slide Basic">
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.html"> </file>
 *   <file name="sample-po-slide-basic/sample-po-slide-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-labs" title="PO Slide Labs">
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.html"> </file>
 *   <file name="sample-po-slide-labs/sample-po-slide-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-useful-articles" title="PO Slide - Useful articles">
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.html"> </file>
 *   <file name="sample-po-slide-useful-articles/sample-po-slide-useful-articles.component.ts"> </file>
 * </example>
 *
 * <example name="po-slide-landscapes" title="PO Slide - Landscapes">
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.html"> </file>
 *   <file name="sample-po-slide-landscapes/sample-po-slide-landscapes.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoSlideComponent extends PoSlideBaseComponent implements DoCheck, OnChanges {
    private builder;
    private isLoaded;
    private player;
    private setInterval;
    private get hasElements();
    private get isImageSlide();
    private get offset();
    get hasSlides(): boolean;
    currentSlideIndex: number;
    imageHeight: number;
    slideItems: Array<PoSlideItem | any>;
    slideItemWidth: number;
    slideContentTemplate: PoSlideContentTemplateDirective;
    private slide;
    private itemsElements;
    constructor(builder: AnimationBuilder);
    onResize(): void;
    ngDoCheck(): void;
    ngOnChanges(changes: SimpleChanges): void;
    goToItem(index: number): void;
    nextControl(): void;
    next(): void;
    previous(): void;
    previousControl(): void;
    setSlideHeight(height: number): void;
    private animate;
    private buildTransitionAnimation;
    private createArrayForTemplate;
    private createArrayFromSlides;
    private setDefaultHeight;
    private setHeight;
    private setSlideItemWidth;
    protected cancelInterval(): void;
    protected setSlideItems(slides: Array<PoSlideItem | string | any>): void;
    protected startSlide(): void;
    protected startInterval(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoSlideComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoSlideComponent, "po-slide", never, {}, {}, ["slideContentTemplate"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tc2xpZGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLXNsaWRlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRG9DaGVjaywgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmltYXRpb25CdWlsZGVyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBQb1NsaWRlQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tc2xpZGUtYmFzZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgUG9TbGlkZUNvbnRlbnRUZW1wbGF0ZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy9wby1zbGlkZS1jb250ZW50LXRlbXBsYXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBQb1NsaWRlSXRlbSB9IGZyb20gJy4vaW50ZXJmYWNlcy9wby1zbGlkZS1pdGVtLmludGVyZmFjZSc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb1NsaWRlQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tc2xpZGUtYmFzaWNcIiB0aXRsZT1cIlBPIFNsaWRlIEJhc2ljXCI+XG4gKiAgIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tc2xpZGUtYmFzaWMvc2FtcGxlLXBvLXNsaWRlLWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS1iYXNpYy9zYW1wbGUtcG8tc2xpZGUtYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tc2xpZGUtbGFic1wiIHRpdGxlPVwiUE8gU2xpZGUgTGFic1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNsaWRlLWxhYnMvc2FtcGxlLXBvLXNsaWRlLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNsaWRlLWxhYnMvc2FtcGxlLXBvLXNsaWRlLWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tc2xpZGUtdXNlZnVsLWFydGljbGVzXCIgdGl0bGU9XCJQTyBTbGlkZSAtIFVzZWZ1bCBhcnRpY2xlc1wiPlxuICogICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLXNsaWRlLXVzZWZ1bC1hcnRpY2xlcy9zYW1wbGUtcG8tc2xpZGUtdXNlZnVsLWFydGljbGVzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS11c2VmdWwtYXJ0aWNsZXMvc2FtcGxlLXBvLXNsaWRlLXVzZWZ1bC1hcnRpY2xlcy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1zbGlkZS1sYW5kc2NhcGVzXCIgdGl0bGU9XCJQTyBTbGlkZSAtIExhbmRzY2FwZXNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS1sYW5kc2NhcGVzL3NhbXBsZS1wby1zbGlkZS1sYW5kc2NhcGVzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1zbGlkZS1sYW5kc2NhcGVzL3NhbXBsZS1wby1zbGlkZS1sYW5kc2NhcGVzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGU+XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvU2xpZGVDb21wb25lbnQgZXh0ZW5kcyBQb1NsaWRlQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIERvQ2hlY2ssIE9uQ2hhbmdlcyB7XG4gICAgcHJpdmF0ZSBidWlsZGVyO1xuICAgIHByaXZhdGUgaXNMb2FkZWQ7XG4gICAgcHJpdmF0ZSBwbGF5ZXI7XG4gICAgcHJpdmF0ZSBzZXRJbnRlcnZhbDtcbiAgICBwcml2YXRlIGdldCBoYXNFbGVtZW50cygpO1xuICAgIHByaXZhdGUgZ2V0IGlzSW1hZ2VTbGlkZSgpO1xuICAgIHByaXZhdGUgZ2V0IG9mZnNldCgpO1xuICAgIGdldCBoYXNTbGlkZXMoKTogYm9vbGVhbjtcbiAgICBjdXJyZW50U2xpZGVJbmRleDogbnVtYmVyO1xuICAgIGltYWdlSGVpZ2h0OiBudW1iZXI7XG4gICAgc2xpZGVJdGVtczogQXJyYXk8UG9TbGlkZUl0ZW0gfCBhbnk+O1xuICAgIHNsaWRlSXRlbVdpZHRoOiBudW1iZXI7XG4gICAgc2xpZGVDb250ZW50VGVtcGxhdGU6IFBvU2xpZGVDb250ZW50VGVtcGxhdGVEaXJlY3RpdmU7XG4gICAgcHJpdmF0ZSBzbGlkZTtcbiAgICBwcml2YXRlIGl0ZW1zRWxlbWVudHM7XG4gICAgY29uc3RydWN0b3IoYnVpbGRlcjogQW5pbWF0aW9uQnVpbGRlcik7XG4gICAgb25SZXNpemUoKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBnb1RvSXRlbShpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBuZXh0Q29udHJvbCgpOiB2b2lkO1xuICAgIG5leHQoKTogdm9pZDtcbiAgICBwcmV2aW91cygpOiB2b2lkO1xuICAgIHByZXZpb3VzQ29udHJvbCgpOiB2b2lkO1xuICAgIHNldFNsaWRlSGVpZ2h0KGhlaWdodDogbnVtYmVyKTogdm9pZDtcbiAgICBwcml2YXRlIGFuaW1hdGU7XG4gICAgcHJpdmF0ZSBidWlsZFRyYW5zaXRpb25BbmltYXRpb247XG4gICAgcHJpdmF0ZSBjcmVhdGVBcnJheUZvclRlbXBsYXRlO1xuICAgIHByaXZhdGUgY3JlYXRlQXJyYXlGcm9tU2xpZGVzO1xuICAgIHByaXZhdGUgc2V0RGVmYXVsdEhlaWdodDtcbiAgICBwcml2YXRlIHNldEhlaWdodDtcbiAgICBwcml2YXRlIHNldFNsaWRlSXRlbVdpZHRoO1xuICAgIHByb3RlY3RlZCBjYW5jZWxJbnRlcnZhbCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzZXRTbGlkZUl0ZW1zKHNsaWRlczogQXJyYXk8UG9TbGlkZUl0ZW0gfCBzdHJpbmcgfCBhbnk+KTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgc3RhcnRTbGlkZSgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBzdGFydEludGVydmFsKCk6IHZvaWQ7XG59XG4iXX0=