import { OnInit } from '@angular/core';
import { AbstractControl } from '@angular/forms';
import { PoCalendarBaseComponent } from './po-calendar-base.component';
import { PoCalendarLangService } from './services/po-calendar.lang.service';
import { PoCalendarService } from './services/po-calendar.service';
import { PoDateService } from '../../services/po-date/po-date.service';
/**
 * @docsExtends PoCalendarBaseComponent
 *
 * @example
 *
 * <example name="po-calendar-basic" title="PO Calendar Basic" >
 *  <file name="sample-po-calendar-basic/sample-po-calendar-basic.component.html"> </file>
 *  <file name="sample-po-calendar-basic/sample-po-calendar-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-calendar-labs" title="PO Calendar Labs" >
 *  <file name="sample-po-calendar-labs/sample-po-calendar-labs.component.html"> </file>
 *  <file name="sample-po-calendar-labs/sample-po-calendar-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-calendar-ticket-sales" title="PO Calendar - Ticket Sales" >
 *  <file name="sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.html"> </file>
 *  <file name="sample-po-calendar-ticket-sales/sample-po-calendar-ticket-sales.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoCalendarComponent extends PoCalendarBaseComponent implements OnInit {
    private poCalendarService;
    constructor(poCalendarService: PoCalendarService, poCalendarLangService: PoCalendarLangService, poDate: PoDateService);
    ngOnInit(): void;
    getBackgroundColor(displayValue: number, propertyValue: number): "po-calendar-box-background-selected" | "po-calendar-box-background";
    getDayBackgroundColor(date: Date): string;
    getDayForegroundColor(date: Date): string;
    getForegroundColor(displayValue: number, propertyValue: number): "po-calendar-box-foreground-selected" | "po-calendar-box-foreground";
    getMonthLabel(): any;
    getYearLabel(): any;
    onNextMonth(): void;
    onPreviousMonth(): void;
    onSelectDate(date: Date): void;
    onSelectMonth(year: number, month: number): void;
    onSelectYear(year: number, month: number): void;
    registerOnChange(fn: any): void;
    registerOnTouched(func: any): void;
    registerOnValidatorChange(fn: () => void): void;
    selectDay(): void;
    selectMonth(): void;
    selectYear(): void;
    updateYear(value: number): void;
    validateModel(model: any): void;
    validate(c: AbstractControl): {
        [key: string]: any;
    };
    writeValue(value: any): void;
    private addAllYearsInDecade;
    private equalsDate;
    private getDecadeArray;
    private getColorForDate;
    private getColorForDateRange;
    private getColorForToday;
    private getDayColor;
    private init;
    private selectDateFromDate;
    private selectDateFromIso;
    private updateDate;
    private updateDecade;
    private updateDisplay;
    private writeDate;
    private writeDateIso;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoCalendarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoCalendarComponent, "po-calendar", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2FsZW5kYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNhbGVuZGFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgUG9DYWxlbmRhckJhc2VDb21wb25lbnQgfSBmcm9tICcuL3BvLWNhbGVuZGFyLWJhc2UuY29tcG9uZW50JztcbmltcG9ydCB7IFBvQ2FsZW5kYXJMYW5nU2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcG8tY2FsZW5kYXIubGFuZy5zZXJ2aWNlJztcbmltcG9ydCB7IFBvQ2FsZW5kYXJTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy9wby1jYWxlbmRhci5zZXJ2aWNlJztcbmltcG9ydCB7IFBvRGF0ZVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9wby1kYXRlL3BvLWRhdGUuc2VydmljZSc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb0NhbGVuZGFyQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWNhbGVuZGFyLWJhc2ljXCIgdGl0bGU9XCJQTyBDYWxlbmRhciBCYXNpY1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNhbGVuZGFyLWJhc2ljL3NhbXBsZS1wby1jYWxlbmRhci1iYXNpYy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jYWxlbmRhci1iYXNpYy9zYW1wbGUtcG8tY2FsZW5kYXItYmFzaWMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tY2FsZW5kYXItbGFic1wiIHRpdGxlPVwiUE8gQ2FsZW5kYXIgTGFic1wiID5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNhbGVuZGFyLWxhYnMvc2FtcGxlLXBvLWNhbGVuZGFyLWxhYnMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2FsZW5kYXItbGFicy9zYW1wbGUtcG8tY2FsZW5kYXItbGFicy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jYWxlbmRhci10aWNrZXQtc2FsZXNcIiB0aXRsZT1cIlBPIENhbGVuZGFyIC0gVGlja2V0IFNhbGVzXCIgPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2FsZW5kYXItdGlja2V0LXNhbGVzL3NhbXBsZS1wby1jYWxlbmRhci10aWNrZXQtc2FsZXMuY29tcG9uZW50Lmh0bWxcIj4gPC9maWxlPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2FsZW5kYXItdGlja2V0LXNhbGVzL3NhbXBsZS1wby1jYWxlbmRhci10aWNrZXQtc2FsZXMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9DYWxlbmRhckNvbXBvbmVudCBleHRlbmRzIFBvQ2FsZW5kYXJCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIHBvQ2FsZW5kYXJTZXJ2aWNlO1xuICAgIGNvbnN0cnVjdG9yKHBvQ2FsZW5kYXJTZXJ2aWNlOiBQb0NhbGVuZGFyU2VydmljZSwgcG9DYWxlbmRhckxhbmdTZXJ2aWNlOiBQb0NhbGVuZGFyTGFuZ1NlcnZpY2UsIHBvRGF0ZTogUG9EYXRlU2VydmljZSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBnZXRCYWNrZ3JvdW5kQ29sb3IoZGlzcGxheVZhbHVlOiBudW1iZXIsIHByb3BlcnR5VmFsdWU6IG51bWJlcik6IFwicG8tY2FsZW5kYXItYm94LWJhY2tncm91bmQtc2VsZWN0ZWRcIiB8IFwicG8tY2FsZW5kYXItYm94LWJhY2tncm91bmRcIjtcbiAgICBnZXREYXlCYWNrZ3JvdW5kQ29sb3IoZGF0ZTogRGF0ZSk6IHN0cmluZztcbiAgICBnZXREYXlGb3JlZ3JvdW5kQ29sb3IoZGF0ZTogRGF0ZSk6IHN0cmluZztcbiAgICBnZXRGb3JlZ3JvdW5kQ29sb3IoZGlzcGxheVZhbHVlOiBudW1iZXIsIHByb3BlcnR5VmFsdWU6IG51bWJlcik6IFwicG8tY2FsZW5kYXItYm94LWZvcmVncm91bmQtc2VsZWN0ZWRcIiB8IFwicG8tY2FsZW5kYXItYm94LWZvcmVncm91bmRcIjtcbiAgICBnZXRNb250aExhYmVsKCk6IGFueTtcbiAgICBnZXRZZWFyTGFiZWwoKTogYW55O1xuICAgIG9uTmV4dE1vbnRoKCk6IHZvaWQ7XG4gICAgb25QcmV2aW91c01vbnRoKCk6IHZvaWQ7XG4gICAgb25TZWxlY3REYXRlKGRhdGU6IERhdGUpOiB2b2lkO1xuICAgIG9uU2VsZWN0TW9udGgoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyKTogdm9pZDtcbiAgICBvblNlbGVjdFllYXIoeWVhcjogbnVtYmVyLCBtb250aDogbnVtYmVyKTogdm9pZDtcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZ1bmM6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPblZhbGlkYXRvckNoYW5nZShmbjogKCkgPT4gdm9pZCk6IHZvaWQ7XG4gICAgc2VsZWN0RGF5KCk6IHZvaWQ7XG4gICAgc2VsZWN0TW9udGgoKTogdm9pZDtcbiAgICBzZWxlY3RZZWFyKCk6IHZvaWQ7XG4gICAgdXBkYXRlWWVhcih2YWx1ZTogbnVtYmVyKTogdm9pZDtcbiAgICB2YWxpZGF0ZU1vZGVsKG1vZGVsOiBhbnkpOiB2b2lkO1xuICAgIHZhbGlkYXRlKGM6IEFic3RyYWN0Q29udHJvbCk6IHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuICAgIH07XG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcbiAgICBwcml2YXRlIGFkZEFsbFllYXJzSW5EZWNhZGU7XG4gICAgcHJpdmF0ZSBlcXVhbHNEYXRlO1xuICAgIHByaXZhdGUgZ2V0RGVjYWRlQXJyYXk7XG4gICAgcHJpdmF0ZSBnZXRDb2xvckZvckRhdGU7XG4gICAgcHJpdmF0ZSBnZXRDb2xvckZvckRhdGVSYW5nZTtcbiAgICBwcml2YXRlIGdldENvbG9yRm9yVG9kYXk7XG4gICAgcHJpdmF0ZSBnZXREYXlDb2xvcjtcbiAgICBwcml2YXRlIGluaXQ7XG4gICAgcHJpdmF0ZSBzZWxlY3REYXRlRnJvbURhdGU7XG4gICAgcHJpdmF0ZSBzZWxlY3REYXRlRnJvbUlzbztcbiAgICBwcml2YXRlIHVwZGF0ZURhdGU7XG4gICAgcHJpdmF0ZSB1cGRhdGVEZWNhZGU7XG4gICAgcHJpdmF0ZSB1cGRhdGVEaXNwbGF5O1xuICAgIHByaXZhdGUgd3JpdGVEYXRlO1xuICAgIHByaXZhdGUgd3JpdGVEYXRlSXNvO1xufVxuIl19