import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
/**
 * @docsPrivate
 *
 * @description
 *
 * Serviço utilizado para favoritar/desfavoritar uma url no componente po-breadcrumb.
 * A API deve retornar um objeto no formato { isFavorite: booleano, url: string }. Em ambos os métodos, GET e POST este
 * objeto deve ser retornado.
 * Ao alterar o status de favorito, a API deve retornar o objeto acima, com o novo status atualizado.
 * No método POST, existe a possibilidade de ser enviado parâmetros junto com a requisição. Neste caso, o objeto enviado
 * para a API terá o formato: { isFavorite: booleano, url: string, params: {} }, onde params é o objeto que pode ser enviado
 * junto com a requisição.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoBreadcrumbFavoriteService {
    private http;
    private _url;
    private _bodyParams;
    get url(): string;
    get bodyParams(): object;
    constructor(http: HttpClient);
    configService(url: any, params: any, item: any): void;
    sendStatusFavorite(status: any): Observable<any>;
    getFavorite(): Observable<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoBreadcrumbFavoriteService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<PoBreadcrumbFavoriteService>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYnJlYWRjcnVtYi1mYXZvcml0ZS5zZXJ2aWNlLmQudHMiLCJzb3VyY2VzIjpbInBvLWJyZWFkY3J1bWItZmF2b3JpdGUuc2VydmljZS5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIFNlcnZpw6dvIHV0aWxpemFkbyBwYXJhIGZhdm9yaXRhci9kZXNmYXZvcml0YXIgdW1hIHVybCBubyBjb21wb25lbnRlIHBvLWJyZWFkY3J1bWIuXG4gKiBBIEFQSSBkZXZlIHJldG9ybmFyIHVtIG9iamV0byBubyBmb3JtYXRvIHsgaXNGYXZvcml0ZTogYm9vbGVhbm8sIHVybDogc3RyaW5nIH0uIEVtIGFtYm9zIG9zIG3DqXRvZG9zLCBHRVQgZSBQT1NUIGVzdGVcbiAqIG9iamV0byBkZXZlIHNlciByZXRvcm5hZG8uXG4gKiBBbyBhbHRlcmFyIG8gc3RhdHVzIGRlIGZhdm9yaXRvLCBhIEFQSSBkZXZlIHJldG9ybmFyIG8gb2JqZXRvIGFjaW1hLCBjb20gbyBub3ZvIHN0YXR1cyBhdHVhbGl6YWRvLlxuICogTm8gbcOpdG9kbyBQT1NULCBleGlzdGUgYSBwb3NzaWJpbGlkYWRlIGRlIHNlciBlbnZpYWRvIHBhcsOibWV0cm9zIGp1bnRvIGNvbSBhIHJlcXVpc2nDp8Ojby4gTmVzdGUgY2FzbywgbyBvYmpldG8gZW52aWFkb1xuICogcGFyYSBhIEFQSSB0ZXLDoSBvIGZvcm1hdG86IHsgaXNGYXZvcml0ZTogYm9vbGVhbm8sIHVybDogc3RyaW5nLCBwYXJhbXM6IHt9IH0sIG9uZGUgcGFyYW1zIMOpIG8gb2JqZXRvIHF1ZSBwb2RlIHNlciBlbnZpYWRvXG4gKiBqdW50byBjb20gYSByZXF1aXNpw6fDo28uXG4gKlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0JyZWFkY3J1bWJGYXZvcml0ZVNlcnZpY2Uge1xuICAgIHByaXZhdGUgaHR0cDtcbiAgICBwcml2YXRlIF91cmw7XG4gICAgcHJpdmF0ZSBfYm9keVBhcmFtcztcbiAgICBnZXQgdXJsKCk6IHN0cmluZztcbiAgICBnZXQgYm9keVBhcmFtcygpOiBvYmplY3Q7XG4gICAgY29uc3RydWN0b3IoaHR0cDogSHR0cENsaWVudCk7XG4gICAgY29uZmlnU2VydmljZSh1cmw6IGFueSwgcGFyYW1zOiBhbnksIGl0ZW06IGFueSk6IHZvaWQ7XG4gICAgc2VuZFN0YXR1c0Zhdm9yaXRlKHN0YXR1czogYW55KTogT2JzZXJ2YWJsZTxhbnk+O1xuICAgIGdldEZhdm9yaXRlKCk6IE9ic2VydmFibGU8YW55Pjtcbn1cbiJdfQ==