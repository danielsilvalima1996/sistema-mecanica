/**
 * @description
 *
 * O `po-container` é um componente que visa facilitar o agrupamento de conteúdos.
 * Por padrão o mesmo exibe uma borda, um efeito de sombra ao seu redor e um espaçamento em sua parte interna, os quais
 * podem ser desabilitados. Ao remover sua borda a sombra também será removida. Além disso, sua altura acompanha a
 * quantidade do conteúdo, porém pode ser fixada. Para controlar sua largura, utilize o [Grid System](/guides/grid-system),
 * assim possibilitando o tratamento para diferentes resoluções.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoContainerBaseComponent {
    private _height?;
    private _noBorder?;
    private _noPadding?;
    private _noShadow?;
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-container`.
     *
     * > Caso não seja definido um valor, a altura se ajustará de acordo com o conteúdo.
     */
    set height(value: number);
    get height(): number;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a borda e a sombra em torno do `po-container`.
     *
     * @default `false`
     */
    set noBorder(value: boolean);
    get noBorder(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o espaçamento interno do `po-container`.
     *
     * @default `false`
     */
    set noPadding(value: boolean);
    get noPadding(): boolean;
    /**
     * @optional
     *
     * @description
     *
     * Desabilita o sombreamento em torno do `po-container`.
     *
     * @default `false`
     */
    set noShadow(value: boolean);
    get noShadow(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoContainerBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoContainerBaseComponent, never, never, { "height": "p-height"; "noBorder": "p-no-border"; "noPadding": "p-no-padding"; "noShadow": "p-no-shadow"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY29udGFpbmVyLWJhc2UuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNvbnRhaW5lci1iYXNlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gYHBvLWNvbnRhaW5lcmAgw6kgdW0gY29tcG9uZW50ZSBxdWUgdmlzYSBmYWNpbGl0YXIgbyBhZ3J1cGFtZW50byBkZSBjb250ZcO6ZG9zLlxuICogUG9yIHBhZHLDo28gbyBtZXNtbyBleGliZSB1bWEgYm9yZGEsIHVtIGVmZWl0byBkZSBzb21icmEgYW8gc2V1IHJlZG9yIGUgdW0gZXNwYcOnYW1lbnRvIGVtIHN1YSBwYXJ0ZSBpbnRlcm5hLCBvcyBxdWFpc1xuICogcG9kZW0gc2VyIGRlc2FiaWxpdGFkb3MuIEFvIHJlbW92ZXIgc3VhIGJvcmRhIGEgc29tYnJhIHRhbWLDqW0gc2Vyw6EgcmVtb3ZpZGEuIEFsw6ltIGRpc3NvLCBzdWEgYWx0dXJhIGFjb21wYW5oYSBhXG4gKiBxdWFudGlkYWRlIGRvIGNvbnRlw7pkbywgcG9yw6ltIHBvZGUgc2VyIGZpeGFkYS4gUGFyYSBjb250cm9sYXIgc3VhIGxhcmd1cmEsIHV0aWxpemUgbyBbR3JpZCBTeXN0ZW1dKC9ndWlkZXMvZ3JpZC1zeXN0ZW0pLFxuICogYXNzaW0gcG9zc2liaWxpdGFuZG8gbyB0cmF0YW1lbnRvIHBhcmEgZGlmZXJlbnRlcyByZXNvbHXDp8O1ZXMuXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQ29udGFpbmVyQmFzZUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfaGVpZ2h0PztcbiAgICBwcml2YXRlIF9ub0JvcmRlcj87XG4gICAgcHJpdmF0ZSBfbm9QYWRkaW5nPztcbiAgICBwcml2YXRlIF9ub1NoYWRvdz87XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlZmluZSBhIGFsdHVyYSBkbyBgcG8tY29udGFpbmVyYC5cbiAgICAgKlxuICAgICAqID4gQ2FzbyBuw6NvIHNlamEgZGVmaW5pZG8gdW0gdmFsb3IsIGEgYWx0dXJhIHNlIGFqdXN0YXLDoSBkZSBhY29yZG8gY29tIG8gY29udGXDumRvLlxuICAgICAqL1xuICAgIHNldCBoZWlnaHQodmFsdWU6IG51bWJlcik7XG4gICAgZ2V0IGhlaWdodCgpOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlc2FiaWxpdGEgYSBib3JkYSBlIGEgc29tYnJhIGVtIHRvcm5vIGRvIGBwby1jb250YWluZXJgLlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgICAqL1xuICAgIHNldCBub0JvcmRlcih2YWx1ZTogYm9vbGVhbik7XG4gICAgZ2V0IG5vQm9yZGVyKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlc2FiaWxpdGEgbyBlc3Bhw6dhbWVudG8gaW50ZXJubyBkbyBgcG8tY29udGFpbmVyYC5cbiAgICAgKlxuICAgICAqIEBkZWZhdWx0IGBmYWxzZWBcbiAgICAgKi9cbiAgICBzZXQgbm9QYWRkaW5nKHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgbm9QYWRkaW5nKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogQG9wdGlvbmFsXG4gICAgICpcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIERlc2FiaWxpdGEgbyBzb21icmVhbWVudG8gZW0gdG9ybm8gZG8gYHBvLWNvbnRhaW5lcmAuXG4gICAgICpcbiAgICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAgICovXG4gICAgc2V0IG5vU2hhZG93KHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgbm9TaGFkb3coKTogYm9vbGVhbjtcbn1cbiJdfQ==