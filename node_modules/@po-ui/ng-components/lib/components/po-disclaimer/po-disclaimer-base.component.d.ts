import { EventEmitter } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * O componente po-disclaimer é responsável por representar tags.
 * Seu uso é recomendado em buscas e em campos onde é necessário representar objetos selecionados,
 * como por exemplo, no po-multi-select.
 *
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDisclaimerBaseComponent {
    private _type;
    private _hideClose?;
    showDisclaimer: boolean;
    /**
     * Label que aparecerá dentro do po-disclaimer.
     * Quando não for definido um label será apresentada a propriedade p-value.
     */
    label?: string;
    /** Valor do po-disclaimer. */
    value: string;
    /** Nome da propriedade vinculada à este po-disclaimer. */
    property?: string;
    /**
     * @description
     *
     * Esta propriedade esconde o botão para fechamento do po-disclaimer, ao utilizar esta propriedade
     * sem passar valor a mesma é setada como false, onde o botão de fechamento está visível.
     *
     * @default false
     */
    set hideClose(value: boolean);
    get hideClose(): boolean;
    /**
     * Evento disparado ao fechar o disclaimer.
     * Para este evento será passado como parâmetro um objeto com value, label e property.
     */
    closeAction?: EventEmitter<any>;
    /**
     * @description
     *
     * Tipo do po-disclaimer. Pode ser 'default' ou 'danger'.
     *
     * @default default
     * @optional
     */
    set type(type: string);
    get type(): string;
    close(): void;
    getLabel(): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDisclaimerBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoDisclaimerBaseComponent, never, never, { "hideClose": "p-hide-close"; "type": "p-type"; "label": "p-label"; "value": "p-value"; "property": "p-property"; }, { "closeAction": "p-close-action"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZGlzY2xhaW1lci1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1kaXNjbGFpbWVyLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTyBjb21wb25lbnRlIHBvLWRpc2NsYWltZXIgw6kgcmVzcG9uc8OhdmVsIHBvciByZXByZXNlbnRhciB0YWdzLlxuICogU2V1IHVzbyDDqSByZWNvbWVuZGFkbyBlbSBidXNjYXMgZSBlbSBjYW1wb3Mgb25kZSDDqSBuZWNlc3PDoXJpbyByZXByZXNlbnRhciBvYmpldG9zIHNlbGVjaW9uYWRvcyxcbiAqIGNvbW8gcG9yIGV4ZW1wbG8sIG5vIHBvLW11bHRpLXNlbGVjdC5cbiAqXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRGlzY2xhaW1lckJhc2VDb21wb25lbnQge1xuICAgIHByaXZhdGUgX3R5cGU7XG4gICAgcHJpdmF0ZSBfaGlkZUNsb3NlPztcbiAgICBzaG93RGlzY2xhaW1lcjogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBMYWJlbCBxdWUgYXBhcmVjZXLDoSBkZW50cm8gZG8gcG8tZGlzY2xhaW1lci5cbiAgICAgKiBRdWFuZG8gbsOjbyBmb3IgZGVmaW5pZG8gdW0gbGFiZWwgc2Vyw6EgYXByZXNlbnRhZGEgYSBwcm9wcmllZGFkZSBwLXZhbHVlLlxuICAgICAqL1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIC8qKiBWYWxvciBkbyBwby1kaXNjbGFpbWVyLiAqL1xuICAgIHZhbHVlOiBzdHJpbmc7XG4gICAgLyoqIE5vbWUgZGEgcHJvcHJpZWRhZGUgdmluY3VsYWRhIMOgIGVzdGUgcG8tZGlzY2xhaW1lci4gKi9cbiAgICBwcm9wZXJ0eT86IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKlxuICAgICAqIEVzdGEgcHJvcHJpZWRhZGUgZXNjb25kZSBvIGJvdMOjbyBwYXJhIGZlY2hhbWVudG8gZG8gcG8tZGlzY2xhaW1lciwgYW8gdXRpbGl6YXIgZXN0YSBwcm9wcmllZGFkZVxuICAgICAqIHNlbSBwYXNzYXIgdmFsb3IgYSBtZXNtYSDDqSBzZXRhZGEgY29tbyBmYWxzZSwgb25kZSBvIGJvdMOjbyBkZSBmZWNoYW1lbnRvIGVzdMOhIHZpc8OtdmVsLlxuICAgICAqXG4gICAgICogQGRlZmF1bHQgZmFsc2VcbiAgICAgKi9cbiAgICBzZXQgaGlkZUNsb3NlKHZhbHVlOiBib29sZWFuKTtcbiAgICBnZXQgaGlkZUNsb3NlKCk6IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogRXZlbnRvIGRpc3BhcmFkbyBhbyBmZWNoYXIgbyBkaXNjbGFpbWVyLlxuICAgICAqIFBhcmEgZXN0ZSBldmVudG8gc2Vyw6EgcGFzc2FkbyBjb21vIHBhcsOibWV0cm8gdW0gb2JqZXRvIGNvbSB2YWx1ZSwgbGFiZWwgZSBwcm9wZXJ0eS5cbiAgICAgKi9cbiAgICBjbG9zZUFjdGlvbj86IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvblxuICAgICAqXG4gICAgICogVGlwbyBkbyBwby1kaXNjbGFpbWVyLiBQb2RlIHNlciAnZGVmYXVsdCcgb3UgJ2RhbmdlcicuXG4gICAgICpcbiAgICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAgICogQG9wdGlvbmFsXG4gICAgICovXG4gICAgc2V0IHR5cGUodHlwZTogc3RyaW5nKTtcbiAgICBnZXQgdHlwZSgpOiBzdHJpbmc7XG4gICAgY2xvc2UoKTogdm9pZDtcbiAgICBnZXRMYWJlbCgpOiBzdHJpbmc7XG59XG4iXX0=