import { EventEmitter } from '@angular/core';
import { TitleCasePipe } from '@angular/common';
import { PoDynamicFormField } from '../po-dynamic-form-field.interface';
import { PoDynamicFormFieldInternal } from './po-dynamic-form-field-internal.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoDynamicFormFieldsBaseComponent {
    private titleCasePipe;
    private _fields;
    private _value?;
    visibleFields: Array<PoDynamicFormFieldInternal>;
    autoFocus?: string;
    set fields(value: Array<PoDynamicFormField>);
    get fields(): Array<PoDynamicFormField>;
    fieldsChange: EventEmitter<any>;
    set value(value: any);
    get value(): any;
    disabledForm: boolean;
    validate?: string | Function;
    formValidate: EventEmitter<any>;
    constructor(titleCasePipe: TitleCasePipe);
    compareTo(value: any, compareTo: any): boolean;
    protected getVisibleFields(): any[];
    private convertOptions;
    private createField;
    private existsProperty;
    private getComponentControl;
    private hasFocus;
    private isCheckboxGroup;
    private isCombo;
    private isCurrencyType;
    private isLookup;
    private isMultiselect;
    private isNumberType;
    private isPassword;
    private isRadioGroup;
    private isSelect;
    private isTextarea;
    private printError;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDynamicFormFieldsBaseComponent, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoDynamicFormFieldsBaseComponent, never, never, { "fields": "p-fields"; "value": "p-value"; "autoFocus": "p-auto-focus"; "disabledForm": "p-disabled-form"; "validate": "p-validate"; }, { "fieldsChange": "p-fieldsChange"; "formValidate": "p-form-validate"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1mb3JtLWZpZWxkcy1iYXNlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1keW5hbWljLWZvcm0tZmllbGRzLWJhc2UuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGl0bGVDYXNlUGlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtRmllbGQgfSBmcm9tICcuLi9wby1keW5hbWljLWZvcm0tZmllbGQuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRHluYW1pY0Zvcm1GaWVsZEludGVybmFsIH0gZnJvbSAnLi9wby1keW5hbWljLWZvcm0tZmllbGQtaW50ZXJuYWwuaW50ZXJmYWNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvRHluYW1pY0Zvcm1GaWVsZHNCYXNlQ29tcG9uZW50IHtcbiAgICBwcml2YXRlIHRpdGxlQ2FzZVBpcGU7XG4gICAgcHJpdmF0ZSBfZmllbGRzO1xuICAgIHByaXZhdGUgX3ZhbHVlPztcbiAgICB2aXNpYmxlRmllbGRzOiBBcnJheTxQb0R5bmFtaWNGb3JtRmllbGRJbnRlcm5hbD47XG4gICAgYXV0b0ZvY3VzPzogc3RyaW5nO1xuICAgIHNldCBmaWVsZHModmFsdWU6IEFycmF5PFBvRHluYW1pY0Zvcm1GaWVsZD4pO1xuICAgIGdldCBmaWVsZHMoKTogQXJyYXk8UG9EeW5hbWljRm9ybUZpZWxkPjtcbiAgICBmaWVsZHNDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHNldCB2YWx1ZSh2YWx1ZTogYW55KTtcbiAgICBnZXQgdmFsdWUoKTogYW55O1xuICAgIGRpc2FibGVkRm9ybTogYm9vbGVhbjtcbiAgICB2YWxpZGF0ZT86IHN0cmluZyB8IEZ1bmN0aW9uO1xuICAgIGZvcm1WYWxpZGF0ZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3IodGl0bGVDYXNlUGlwZTogVGl0bGVDYXNlUGlwZSk7XG4gICAgY29tcGFyZVRvKHZhbHVlOiBhbnksIGNvbXBhcmVUbzogYW55KTogYm9vbGVhbjtcbiAgICBwcm90ZWN0ZWQgZ2V0VmlzaWJsZUZpZWxkcygpOiBhbnlbXTtcbiAgICBwcml2YXRlIGNvbnZlcnRPcHRpb25zO1xuICAgIHByaXZhdGUgY3JlYXRlRmllbGQ7XG4gICAgcHJpdmF0ZSBleGlzdHNQcm9wZXJ0eTtcbiAgICBwcml2YXRlIGdldENvbXBvbmVudENvbnRyb2w7XG4gICAgcHJpdmF0ZSBoYXNGb2N1cztcbiAgICBwcml2YXRlIGlzQ2hlY2tib3hHcm91cDtcbiAgICBwcml2YXRlIGlzQ29tYm87XG4gICAgcHJpdmF0ZSBpc0N1cnJlbmN5VHlwZTtcbiAgICBwcml2YXRlIGlzTG9va3VwO1xuICAgIHByaXZhdGUgaXNNdWx0aXNlbGVjdDtcbiAgICBwcml2YXRlIGlzTnVtYmVyVHlwZTtcbiAgICBwcml2YXRlIGlzUGFzc3dvcmQ7XG4gICAgcHJpdmF0ZSBpc1JhZGlvR3JvdXA7XG4gICAgcHJpdmF0ZSBpc1NlbGVjdDtcbiAgICBwcml2YXRlIGlzVGV4dGFyZWE7XG4gICAgcHJpdmF0ZSBwcmludEVycm9yO1xufVxuIl19