import { ChangeDetectorRef, OnChanges, QueryList, SimpleChanges } from '@angular/core';
import { TitleCasePipe } from '@angular/common';
import { PoDynamicFormField } from '../po-dynamic-form-field.interface';
import { PoDynamicFormFieldsBaseComponent } from './po-dynamic-form-fields-base.component';
import { PoDynamicFormValidationService } from '../po-dynamic-form-validation/po-dynamic-form-validation.service';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente de criação dos campos dinâmicos.
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoDynamicFormFieldsComponent extends PoDynamicFormFieldsBaseComponent implements OnChanges {
    private validationService;
    private changes;
    components: QueryList<{
        name: string;
        focus: () => void;
    }>;
    private previousValue;
    constructor(titleCasePipe: TitleCasePipe, validationService: PoDynamicFormValidationService, changes: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    focus(property: string): void;
    isDisabled(field: PoDynamicFormField): boolean;
    onChangeField(visibleField: PoDynamicFormField): Promise<void>;
    updatePreviousValue(): void;
    trackBy(index: any): any;
    private applyFieldValidation;
    private getField;
    private triggerValidationOnForm;
    private updateFields;
    private validateField;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoDynamicFormFieldsComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoDynamicFormFieldsComponent, "po-dynamic-form-fields", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tZHluYW1pYy1mb3JtLWZpZWxkcy5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsicG8tZHluYW1pYy1mb3JtLWZpZWxkcy5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgT25DaGFuZ2VzLCBRdWVyeUxpc3QsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRpdGxlQ2FzZVBpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUG9EeW5hbWljRm9ybUZpZWxkIH0gZnJvbSAnLi4vcG8tZHluYW1pYy1mb3JtLWZpZWxkLmludGVyZmFjZSc7XG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtRmllbGRzQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tZHluYW1pYy1mb3JtLWZpZWxkcy1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0R5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UgfSBmcm9tICcuLi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi9wby1keW5hbWljLWZvcm0tdmFsaWRhdGlvbi5zZXJ2aWNlJztcbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBkZSBjcmlhw6fDo28gZG9zIGNhbXBvcyBkaW7Dom1pY29zLlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0R5bmFtaWNGb3JtRmllbGRzQ29tcG9uZW50IGV4dGVuZHMgUG9EeW5hbWljRm9ybUZpZWxkc0Jhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgdmFsaWRhdGlvblNlcnZpY2U7XG4gICAgcHJpdmF0ZSBjaGFuZ2VzO1xuICAgIGNvbXBvbmVudHM6IFF1ZXJ5TGlzdDx7XG4gICAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgICAgZm9jdXM6ICgpID0+IHZvaWQ7XG4gICAgfT47XG4gICAgcHJpdmF0ZSBwcmV2aW91c1ZhbHVlO1xuICAgIGNvbnN0cnVjdG9yKHRpdGxlQ2FzZVBpcGU6IFRpdGxlQ2FzZVBpcGUsIHZhbGlkYXRpb25TZXJ2aWNlOiBQb0R5bmFtaWNGb3JtVmFsaWRhdGlvblNlcnZpY2UsIGNoYW5nZXM6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBmb2N1cyhwcm9wZXJ0eTogc3RyaW5nKTogdm9pZDtcbiAgICBpc0Rpc2FibGVkKGZpZWxkOiBQb0R5bmFtaWNGb3JtRmllbGQpOiBib29sZWFuO1xuICAgIG9uQ2hhbmdlRmllbGQodmlzaWJsZUZpZWxkOiBQb0R5bmFtaWNGb3JtRmllbGQpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHVwZGF0ZVByZXZpb3VzVmFsdWUoKTogdm9pZDtcbiAgICB0cmFja0J5KGluZGV4OiBhbnkpOiBhbnk7XG4gICAgcHJpdmF0ZSBhcHBseUZpZWxkVmFsaWRhdGlvbjtcbiAgICBwcml2YXRlIGdldEZpZWxkO1xuICAgIHByaXZhdGUgdHJpZ2dlclZhbGlkYXRpb25PbkZvcm07XG4gICAgcHJpdmF0ZSB1cGRhdGVGaWVsZHM7XG4gICAgcHJpdmF0ZSB2YWxpZGF0ZUZpZWxkO1xufVxuIl19