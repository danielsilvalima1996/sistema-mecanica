import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';
import { PoChartGaugeSerie } from '../po-chart-gauge-series.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoChartGaugeTextContentComponent implements AfterViewInit {
    private changeDetection;
    serieValueConverted: string;
    tooltip: string;
    private _gaugeWidth;
    private _serie;
    set gaugeWidth(value: number);
    get gaugeWidth(): number;
    set serie(serie: PoChartGaugeSerie);
    get serie(): PoChartGaugeSerie;
    descriptionElement: ElementRef;
    constructor(changeDetection: ChangeDetectorRef);
    get hasSerieDescription(): string;
    get hasSerieValue(): boolean;
    get maxDescriptionWidth(): {
        'max-width': string;
    };
    ngAfterViewInit(): void;
    private checkTextDescriptionSize;
    private convertValueInPercentFormat;
    private isEllipsisActive;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoChartGaugeTextContentComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoChartGaugeTextContentComponent, "po-chart-gauge-text-content", never, { "gaugeWidth": "p-gauge-width"; "serie": "p-serie"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtZ2F1Z2UtdGV4dC1jb250ZW50LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJwby1jaGFydC1nYXVnZS10ZXh0LWNvbnRlbnQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvQ2hhcnRHYXVnZVNlcmllIH0gZnJvbSAnLi4vcG8tY2hhcnQtZ2F1Z2Utc2VyaWVzLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0NoYXJ0R2F1Z2VUZXh0Q29udGVudENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0aW9uO1xuICAgIHNlcmllVmFsdWVDb252ZXJ0ZWQ6IHN0cmluZztcbiAgICB0b29sdGlwOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBfZ2F1Z2VXaWR0aDtcbiAgICBwcml2YXRlIF9zZXJpZTtcbiAgICBzZXQgZ2F1Z2VXaWR0aCh2YWx1ZTogbnVtYmVyKTtcbiAgICBnZXQgZ2F1Z2VXaWR0aCgpOiBudW1iZXI7XG4gICAgc2V0IHNlcmllKHNlcmllOiBQb0NoYXJ0R2F1Z2VTZXJpZSk7XG4gICAgZ2V0IHNlcmllKCk6IFBvQ2hhcnRHYXVnZVNlcmllO1xuICAgIGRlc2NyaXB0aW9uRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICBjb25zdHJ1Y3RvcihjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBnZXQgaGFzU2VyaWVEZXNjcmlwdGlvbigpOiBzdHJpbmc7XG4gICAgZ2V0IGhhc1NlcmllVmFsdWUoKTogYm9vbGVhbjtcbiAgICBnZXQgbWF4RGVzY3JpcHRpb25XaWR0aCgpOiB7XG4gICAgICAgICdtYXgtd2lkdGgnOiBzdHJpbmc7XG4gICAgfTtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBwcml2YXRlIGNoZWNrVGV4dERlc2NyaXB0aW9uU2l6ZTtcbiAgICBwcml2YXRlIGNvbnZlcnRWYWx1ZUluUGVyY2VudEZvcm1hdDtcbiAgICBwcml2YXRlIGlzRWxsaXBzaXNBY3RpdmU7XG59XG4iXX0=