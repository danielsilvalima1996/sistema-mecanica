import { ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { Subject } from 'rxjs';
import { PoChartDynamicTypeComponent } from '../po-chart-dynamic-type.component';
import { PoChartGaugeSerie } from '../po-chart-gauge/po-chart-gauge-series.interface';
import { PoCircularChartSeries } from './po-chart-circular-series.interface';
import { PoDonutChartSeries } from '../po-chart-donut/po-chart-donut-series.interface';
import { PoPieChartSeries } from '../po-chart-pie/po-chart-pie-series.interface';
import * as ɵngcc0 from '@angular/core';
export declare class PoChartCircular extends PoChartDynamicTypeComponent implements OnDestroy, OnInit {
    protected el: ElementRef;
    private ngZone;
    private renderer;
    chartItemStartAngle: number;
    windowResizeEmitter: Subject<any>;
    protected _series: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>;
    private animationRunning;
    private chartItemEndAngle;
    private chartItemsEndAngleList;
    private svgPathElementsList;
    private svgTextElementsList;
    set series(value: Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>);
    get series(): Array<PoPieChartSeries | PoDonutChartSeries | PoChartGaugeSerie>;
    constructor(el: ElementRef, ngZone: NgZone, renderer: Renderer2);
    ngOnDestroy(): void;
    ngOnInit(): void;
    removeTooltip(): void;
    protected drawPath(path: any, chartItemStartAngle: any, chartItemEndAngle: any): any;
    protected getSeriesWithValue(series: Array<PoCircularChartSeries | PoChartGaugeSerie>): any[];
    private animationSetup;
    private appendGaugeBackgroundPathElement;
    private calculateAngleRadians;
    private calculateCurrentEndAngle;
    private calculateEndAngle;
    private calculateSVGDimensions;
    private changeTooltipPosition;
    private chartInitSetup;
    private checkingIfScrollsWithPoPage;
    private createPath;
    private createPaths;
    private createText;
    private createTexts;
    private createSVGElements;
    private drawPathInit;
    private drawSeries;
    private emitEventOnEnter;
    private getFontSize;
    private getPercentValue;
    private getTextColor;
    private getTooltipValue;
    private isSerieValueEqualZero;
    private onMouseClick;
    private onMouseEnter;
    private onWindowResize;
    private removeWindowResizeListener;
    private removeWindowScrollListener;
    private setEventListeners;
    private setInnerRadius;
    private setTextProperties;
    private setTooltipPositions;
    private setElementAttributes;
    private showTooltip;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoChartCircular, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<PoChartCircular, never, never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQtY2lyY3VsYXIuZC50cyIsInNvdXJjZXMiOlsicG8tY2hhcnQtY2lyY3VsYXIuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIE5nWm9uZSwgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUG9DaGFydER5bmFtaWNUeXBlQ29tcG9uZW50IH0gZnJvbSAnLi4vcG8tY2hhcnQtZHluYW1pYy10eXBlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb0NoYXJ0R2F1Z2VTZXJpZSB9IGZyb20gJy4uL3BvLWNoYXJ0LWdhdWdlL3BvLWNoYXJ0LWdhdWdlLXNlcmllcy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9DaXJjdWxhckNoYXJ0U2VyaWVzIH0gZnJvbSAnLi9wby1jaGFydC1jaXJjdWxhci1zZXJpZXMuaW50ZXJmYWNlJztcbmltcG9ydCB7IFBvRG9udXRDaGFydFNlcmllcyB9IGZyb20gJy4uL3BvLWNoYXJ0LWRvbnV0L3BvLWNoYXJ0LWRvbnV0LXNlcmllcy5pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUG9QaWVDaGFydFNlcmllcyB9IGZyb20gJy4uL3BvLWNoYXJ0LXBpZS9wby1jaGFydC1waWUtc2VyaWVzLmludGVyZmFjZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQb0NoYXJ0Q2lyY3VsYXIgZXh0ZW5kcyBQb0NoYXJ0RHluYW1pY1R5cGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCB7XG4gICAgcHJvdGVjdGVkIGVsOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgY2hhcnRJdGVtU3RhcnRBbmdsZTogbnVtYmVyO1xuICAgIHdpbmRvd1Jlc2l6ZUVtaXR0ZXI6IFN1YmplY3Q8YW55PjtcbiAgICBwcm90ZWN0ZWQgX3NlcmllczogQXJyYXk8UG9QaWVDaGFydFNlcmllcyB8IFBvRG9udXRDaGFydFNlcmllcyB8IFBvQ2hhcnRHYXVnZVNlcmllPjtcbiAgICBwcml2YXRlIGFuaW1hdGlvblJ1bm5pbmc7XG4gICAgcHJpdmF0ZSBjaGFydEl0ZW1FbmRBbmdsZTtcbiAgICBwcml2YXRlIGNoYXJ0SXRlbXNFbmRBbmdsZUxpc3Q7XG4gICAgcHJpdmF0ZSBzdmdQYXRoRWxlbWVudHNMaXN0O1xuICAgIHByaXZhdGUgc3ZnVGV4dEVsZW1lbnRzTGlzdDtcbiAgICBzZXQgc2VyaWVzKHZhbHVlOiBBcnJheTxQb1BpZUNoYXJ0U2VyaWVzIHwgUG9Eb251dENoYXJ0U2VyaWVzIHwgUG9DaGFydEdhdWdlU2VyaWU+KTtcbiAgICBnZXQgc2VyaWVzKCk6IEFycmF5PFBvUGllQ2hhcnRTZXJpZXMgfCBQb0RvbnV0Q2hhcnRTZXJpZXMgfCBQb0NoYXJ0R2F1Z2VTZXJpZT47XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIG5nWm9uZTogTmdab25lLCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcmVtb3ZlVG9vbHRpcCgpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBkcmF3UGF0aChwYXRoOiBhbnksIGNoYXJ0SXRlbVN0YXJ0QW5nbGU6IGFueSwgY2hhcnRJdGVtRW5kQW5nbGU6IGFueSk6IGFueTtcbiAgICBwcm90ZWN0ZWQgZ2V0U2VyaWVzV2l0aFZhbHVlKHNlcmllczogQXJyYXk8UG9DaXJjdWxhckNoYXJ0U2VyaWVzIHwgUG9DaGFydEdhdWdlU2VyaWU+KTogYW55W107XG4gICAgcHJpdmF0ZSBhbmltYXRpb25TZXR1cDtcbiAgICBwcml2YXRlIGFwcGVuZEdhdWdlQmFja2dyb3VuZFBhdGhFbGVtZW50O1xuICAgIHByaXZhdGUgY2FsY3VsYXRlQW5nbGVSYWRpYW5zO1xuICAgIHByaXZhdGUgY2FsY3VsYXRlQ3VycmVudEVuZEFuZ2xlO1xuICAgIHByaXZhdGUgY2FsY3VsYXRlRW5kQW5nbGU7XG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVTVkdEaW1lbnNpb25zO1xuICAgIHByaXZhdGUgY2hhbmdlVG9vbHRpcFBvc2l0aW9uO1xuICAgIHByaXZhdGUgY2hhcnRJbml0U2V0dXA7XG4gICAgcHJpdmF0ZSBjaGVja2luZ0lmU2Nyb2xsc1dpdGhQb1BhZ2U7XG4gICAgcHJpdmF0ZSBjcmVhdGVQYXRoO1xuICAgIHByaXZhdGUgY3JlYXRlUGF0aHM7XG4gICAgcHJpdmF0ZSBjcmVhdGVUZXh0O1xuICAgIHByaXZhdGUgY3JlYXRlVGV4dHM7XG4gICAgcHJpdmF0ZSBjcmVhdGVTVkdFbGVtZW50cztcbiAgICBwcml2YXRlIGRyYXdQYXRoSW5pdDtcbiAgICBwcml2YXRlIGRyYXdTZXJpZXM7XG4gICAgcHJpdmF0ZSBlbWl0RXZlbnRPbkVudGVyO1xuICAgIHByaXZhdGUgZ2V0Rm9udFNpemU7XG4gICAgcHJpdmF0ZSBnZXRQZXJjZW50VmFsdWU7XG4gICAgcHJpdmF0ZSBnZXRUZXh0Q29sb3I7XG4gICAgcHJpdmF0ZSBnZXRUb29sdGlwVmFsdWU7XG4gICAgcHJpdmF0ZSBpc1NlcmllVmFsdWVFcXVhbFplcm87XG4gICAgcHJpdmF0ZSBvbk1vdXNlQ2xpY2s7XG4gICAgcHJpdmF0ZSBvbk1vdXNlRW50ZXI7XG4gICAgcHJpdmF0ZSBvbldpbmRvd1Jlc2l6ZTtcbiAgICBwcml2YXRlIHJlbW92ZVdpbmRvd1Jlc2l6ZUxpc3RlbmVyO1xuICAgIHByaXZhdGUgcmVtb3ZlV2luZG93U2Nyb2xsTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBzZXRFdmVudExpc3RlbmVycztcbiAgICBwcml2YXRlIHNldElubmVyUmFkaXVzO1xuICAgIHByaXZhdGUgc2V0VGV4dFByb3BlcnRpZXM7XG4gICAgcHJpdmF0ZSBzZXRUb29sdGlwUG9zaXRpb25zO1xuICAgIHByaXZhdGUgc2V0RWxlbWVudEF0dHJpYnV0ZXM7XG4gICAgcHJpdmF0ZSBzaG93VG9vbHRpcDtcbn1cbiJdfQ==