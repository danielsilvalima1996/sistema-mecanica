import { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, DoCheck, ElementRef, IterableDiffers, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { PoChartBaseComponent } from './po-chart-base.component';
/**
 * @docsExtends PoChartBaseComponent
 *
 * @example
 *
 * <example name="po-chart-basic" title="PO Chart Basic">
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.html"> </file>
 *  <file name="sample-po-chart-basic/sample-po-chart-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-labs" title="PO Chart Labs">
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.html"> </file>
 *  <file name="sample-po-chart-labs/sample-po-chart-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-chart-coffee-ranking" title="PO Chart - Coffee Ranking">
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.html"> </file>
 *  <file name="sample-po-chart-coffee-ranking/sample-po-chart-coffee-ranking.component.ts"> </file>
 * </example>
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoChartComponent extends PoChartBaseComponent implements AfterViewInit, DoCheck, OnDestroy, OnInit {
    changeDetector: ChangeDetectorRef;
    private componentFactoryResolver;
    private differs;
    private calculatedElement;
    private componentRef;
    private differ;
    private initialized;
    private windowResizeListener;
    private mappings;
    colors: Array<string>;
    chartContainer: ViewContainerRef;
    chartHeader: ElementRef;
    chartLegend: ElementRef;
    chartWrapper: ElementRef;
    constructor(changeDetector: ChangeDetectorRef, componentFactoryResolver: ComponentFactoryResolver, differs: IterableDiffers);
    get isChartGaugeType(): boolean;
    onResize: () => void;
    ngAfterViewInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnInit(): void;
    rebuildComponent(): void;
    private chartLegendHeight;
    private checkingForSerieChanges;
    private createComponent;
    private dynamicComponentSetting;
    private getComponentType;
    private getSeriesColor;
    private removeWindowResizeListener;
    private setChartProperties;
    private setClickSubscribe;
    private setHoverSubscribe;
    private setResizeListenerSubscribe;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoChartComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoChartComponent, "po-chart", never, {}, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2hhcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWNoYXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIEl0ZXJhYmxlRGlmZmVycywgT25EZXN0cm95LCBPbkluaXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvQ2hhcnRCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi9wby1jaGFydC1iYXNlLmNvbXBvbmVudCc7XG4vKipcbiAqIEBkb2NzRXh0ZW5kcyBQb0NoYXJ0QmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogPGV4YW1wbGUgbmFtZT1cInBvLWNoYXJ0LWJhc2ljXCIgdGl0bGU9XCJQTyBDaGFydCBCYXNpY1wiPlxuICogIDxmaWxlIG5hbWU9XCJzYW1wbGUtcG8tY2hhcnQtYmFzaWMvc2FtcGxlLXBvLWNoYXJ0LWJhc2ljLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWJhc2ljL3NhbXBsZS1wby1jaGFydC1iYXNpYy5jb21wb25lbnQudHNcIj4gPC9maWxlPlxuICogPC9leGFtcGxlPlxuICpcbiAqIDxleGFtcGxlIG5hbWU9XCJwby1jaGFydC1sYWJzXCIgdGl0bGU9XCJQTyBDaGFydCBMYWJzXCI+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jaGFydC1sYWJzL3NhbXBsZS1wby1jaGFydC1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWxhYnMvc2FtcGxlLXBvLWNoYXJ0LWxhYnMuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqXG4gKiA8ZXhhbXBsZSBuYW1lPVwicG8tY2hhcnQtY29mZmVlLXJhbmtpbmdcIiB0aXRsZT1cIlBPIENoYXJ0IC0gQ29mZmVlIFJhbmtpbmdcIj5cbiAqICA8ZmlsZSBuYW1lPVwic2FtcGxlLXBvLWNoYXJ0LWNvZmZlZS1yYW5raW5nL3NhbXBsZS1wby1jaGFydC1jb2ZmZWUtcmFua2luZy5jb21wb25lbnQuaHRtbFwiPiA8L2ZpbGU+XG4gKiAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jaGFydC1jb2ZmZWUtcmFua2luZy9zYW1wbGUtcG8tY2hhcnQtY29mZmVlLXJhbmtpbmcuY29tcG9uZW50LnRzXCI+IDwvZmlsZT5cbiAqIDwvZXhhbXBsZT5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUG9DaGFydENvbXBvbmVudCBleHRlbmRzIFBvQ2hhcnRCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgT25EZXN0cm95LCBPbkluaXQge1xuICAgIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZjtcbiAgICBwcml2YXRlIGNvbXBvbmVudEZhY3RvcnlSZXNvbHZlcjtcbiAgICBwcml2YXRlIGRpZmZlcnM7XG4gICAgcHJpdmF0ZSBjYWxjdWxhdGVkRWxlbWVudDtcbiAgICBwcml2YXRlIGNvbXBvbmVudFJlZjtcbiAgICBwcml2YXRlIGRpZmZlcjtcbiAgICBwcml2YXRlIGluaXRpYWxpemVkO1xuICAgIHByaXZhdGUgd2luZG93UmVzaXplTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBtYXBwaW5ncztcbiAgICBjb2xvcnM6IEFycmF5PHN0cmluZz47XG4gICAgY2hhcnRDb250YWluZXI6IFZpZXdDb250YWluZXJSZWY7XG4gICAgY2hhcnRIZWFkZXI6IEVsZW1lbnRSZWY7XG4gICAgY2hhcnRMZWdlbmQ6IEVsZW1lbnRSZWY7XG4gICAgY2hhcnRXcmFwcGVyOiBFbGVtZW50UmVmO1xuICAgIGNvbnN0cnVjdG9yKGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgY29tcG9uZW50RmFjdG9yeVJlc29sdmVyOiBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIGRpZmZlcnM6IEl0ZXJhYmxlRGlmZmVycyk7XG4gICAgZ2V0IGlzQ2hhcnRHYXVnZVR5cGUoKTogYm9vbGVhbjtcbiAgICBvblJlc2l6ZTogKCkgPT4gdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgcmVidWlsZENvbXBvbmVudCgpOiB2b2lkO1xuICAgIHByaXZhdGUgY2hhcnRMZWdlbmRIZWlnaHQ7XG4gICAgcHJpdmF0ZSBjaGVja2luZ0ZvclNlcmllQ2hhbmdlcztcbiAgICBwcml2YXRlIGNyZWF0ZUNvbXBvbmVudDtcbiAgICBwcml2YXRlIGR5bmFtaWNDb21wb25lbnRTZXR0aW5nO1xuICAgIHByaXZhdGUgZ2V0Q29tcG9uZW50VHlwZTtcbiAgICBwcml2YXRlIGdldFNlcmllc0NvbG9yO1xuICAgIHByaXZhdGUgcmVtb3ZlV2luZG93UmVzaXplTGlzdGVuZXI7XG4gICAgcHJpdmF0ZSBzZXRDaGFydFByb3BlcnRpZXM7XG4gICAgcHJpdmF0ZSBzZXRDbGlja1N1YnNjcmliZTtcbiAgICBwcml2YXRlIHNldEhvdmVyU3Vic2NyaWJlO1xuICAgIHByaXZhdGUgc2V0UmVzaXplTGlzdGVuZXJTdWJzY3JpYmU7XG59XG4iXX0=