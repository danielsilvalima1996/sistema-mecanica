import { TemplateRef } from '@angular/core';
import { PoAccordionService } from '../services/po-accordion.service';
/**
 * @description
 *
 * Componente utilizado para renderizar os itens do `po-accordion`.
 *
 * O componente `po-accordion` já faz o controle de abertura e fechamento dos itens automaticamente,
 * mas caso houver a necessidade de abrir algum dos `po-accordion-item` via Typescript, pode ser feita da seguinte forma:
 *
 * ```
 * <po-accordion>
 *   <po-accordion-item p-label="PO Accordion 1" #item1>
 *      Accordion 1
 *   </po-accordion-item>
 *
 *   <po-accordion-item p-label="PO Accordion 2">
 *      Accordion 2
 *   </po-accordion-item>
 * </po-accordion>
 * ```
 *
 * e no typescript pode-se utilizar o `@ViewChild`:
 *
 * ```
 *  @ViewChild(PoAccordionItemComponent, { static: true }) item1: PoAccordionItemComponent;
 *
 *  ngAfterContentInit() {
 *    // ou utilizar o método collapse()
 *    this.item1.expand();
 *  }
 * ```
 */
import * as ɵngcc0 from '@angular/core';
export declare class PoAccordionItemComponent {
    private accordionService;
    expanded: boolean;
    /** Título do item. */
    label: string;
    templateRef: TemplateRef<any>;
    constructor(accordionService: PoAccordionService);
    /**
     * Método para colapsar o `po-accordion-item`.
     */
    collapse(): void;
    /**
     * Método para expandir o `po-accordion-item`.
     */
    expand(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<PoAccordionItemComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<PoAccordionItemComponent, "po-accordion-item", never, { "label": "p-label"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tYWNjb3JkaW9uLWl0ZW0uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInBvLWFjY29yZGlvbi1pdGVtLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFBvQWNjb3JkaW9uU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3BvLWFjY29yZGlvbi5zZXJ2aWNlJztcbi8qKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSB1dGlsaXphZG8gcGFyYSByZW5kZXJpemFyIG9zIGl0ZW5zIGRvIGBwby1hY2NvcmRpb25gLlxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tYWNjb3JkaW9uYCBqw6EgZmF6IG8gY29udHJvbGUgZGUgYWJlcnR1cmEgZSBmZWNoYW1lbnRvIGRvcyBpdGVucyBhdXRvbWF0aWNhbWVudGUsXG4gKiBtYXMgY2FzbyBob3V2ZXIgYSBuZWNlc3NpZGFkZSBkZSBhYnJpciBhbGd1bSBkb3MgYHBvLWFjY29yZGlvbi1pdGVtYCB2aWEgVHlwZXNjcmlwdCwgcG9kZSBzZXIgZmVpdGEgZGEgc2VndWludGUgZm9ybWE6XG4gKlxuICogYGBgXG4gKiA8cG8tYWNjb3JkaW9uPlxuICogICA8cG8tYWNjb3JkaW9uLWl0ZW0gcC1sYWJlbD1cIlBPIEFjY29yZGlvbiAxXCIgI2l0ZW0xPlxuICogICAgICBBY2NvcmRpb24gMVxuICogICA8L3BvLWFjY29yZGlvbi1pdGVtPlxuICpcbiAqICAgPHBvLWFjY29yZGlvbi1pdGVtIHAtbGFiZWw9XCJQTyBBY2NvcmRpb24gMlwiPlxuICogICAgICBBY2NvcmRpb24gMlxuICogICA8L3BvLWFjY29yZGlvbi1pdGVtPlxuICogPC9wby1hY2NvcmRpb24+XG4gKiBgYGBcbiAqXG4gKiBlIG5vIHR5cGVzY3JpcHQgcG9kZS1zZSB1dGlsaXphciBvIGBAVmlld0NoaWxkYDpcbiAqXG4gKiBgYGBcbiAqICBAVmlld0NoaWxkKFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgaXRlbTE6IFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudDtcbiAqXG4gKiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICogICAgLy8gb3UgdXRpbGl6YXIgbyBtw6l0b2RvIGNvbGxhcHNlKClcbiAqICAgIHRoaXMuaXRlbTEuZXhwYW5kKCk7XG4gKiAgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFBvQWNjb3JkaW9uSXRlbUNvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBhY2NvcmRpb25TZXJ2aWNlO1xuICAgIGV4cGFuZGVkOiBib29sZWFuO1xuICAgIC8qKiBUw610dWxvIGRvIGl0ZW0uICovXG4gICAgbGFiZWw6IHN0cmluZztcbiAgICB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcbiAgICBjb25zdHJ1Y3RvcihhY2NvcmRpb25TZXJ2aWNlOiBQb0FjY29yZGlvblNlcnZpY2UpO1xuICAgIC8qKlxuICAgICAqIE3DqXRvZG8gcGFyYSBjb2xhcHNhciBvIGBwby1hY2NvcmRpb24taXRlbWAuXG4gICAgICovXG4gICAgY29sbGFwc2UoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBNw6l0b2RvIHBhcmEgZXhwYW5kaXIgbyBgcG8tYWNjb3JkaW9uLWl0ZW1gLlxuICAgICAqL1xuICAgIGV4cGFuZCgpOiB2b2lkO1xufVxuIl19