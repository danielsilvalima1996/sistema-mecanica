import { __decorate, __extends, __metadata } from "tslib";
import { Component, ViewContainerRef } from '@angular/core';
import { getParentRef } from '../../../utils/util';
import { PoCleanBaseComponent } from './po-clean-base.component';
/**
 * @docsPrivate
 *
 * @docsExtends PoCleanBaseComponent
 *
 * @examplePrivate
 *
 * <example-private name="po-clean-labs" title="PO Clean Labs">
 *   <file name="sample-po-clean-labs.component.html"> </file>
 *   <file name="sample-po-clean-labs.component.ts"> </file>
 * </example-private>
 */
var PoCleanComponent = /** @class */ (function (_super) {
    __extends(PoCleanComponent, _super);
    function PoCleanComponent(viewRef) {
        var _this = _super.call(this) || this;
        _this.viewRef = viewRef;
        _this.parentComponent = getParentRef(_this.viewRef);
        return _this;
    }
    PoCleanComponent.prototype.setInputValue = function (value) {
        if (this.inputRef && this.inputRef.nativeElement) {
            this.inputRef.nativeElement.value = value;
        }
    };
    PoCleanComponent.prototype.getInputValue = function () {
        if (this.inputRef && this.inputRef.nativeElement) {
            return this.inputRef.nativeElement.value;
        }
    };
    PoCleanComponent.ctorParameters = function () { return [
        { type: ViewContainerRef }
    ]; };
    PoCleanComponent = __decorate([
        Component({
            selector: 'po-clean',
            template: "<span *ngIf=\"showIcon()\" class=\"po-icon po-field-icon po-icon-close\" (click)=\"clear()\"> </span>\n"
        }),
        __metadata("design:paramtypes", [ViewContainerRef])
    ], PoCleanComponent);
    return PoCleanComponent;
}(PoCleanBaseComponent));
export { PoCleanComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2xlYW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHBvLXVpL25nLWNvbXBvbmVudHMvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wby1maWVsZC9wby1jbGVhbi9wby1jbGVhbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBRWpFOzs7Ozs7Ozs7OztHQVdHO0FBS0g7SUFBc0Msb0NBQW9CO0lBQ3hELDBCQUFvQixPQUF5QjtRQUE3QyxZQUNFLGlCQUFPLFNBRVI7UUFIbUIsYUFBTyxHQUFQLE9BQU8sQ0FBa0I7UUFFM0MsS0FBSSxDQUFDLGVBQWUsR0FBRyxZQUFZLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDOztJQUNwRCxDQUFDO0lBRUQsd0NBQWEsR0FBYixVQUFjLEtBQWM7UUFDMUIsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxFQUFFO1lBQ2hELElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7U0FDM0M7SUFDSCxDQUFDO0lBRUQsd0NBQWEsR0FBYjtRQUNFLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRTtZQUNoRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQztTQUMxQztJQUNILENBQUM7O2dCQWY0QixnQkFBZ0I7O0lBRGxDLGdCQUFnQjtRQUo1QixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsVUFBVTtZQUNwQixtSEFBd0M7U0FDekMsQ0FBQzt5Q0FFNkIsZ0JBQWdCO09BRGxDLGdCQUFnQixDQWlCNUI7SUFBRCx1QkFBQztDQUFBLEFBakJELENBQXNDLG9CQUFvQixHQWlCekQ7U0FqQlksZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGdldFBhcmVudFJlZiB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG5pbXBvcnQgeyBQb0NsZWFuQmFzZUNvbXBvbmVudCB9IGZyb20gJy4vcG8tY2xlYW4tYmFzZS5jb21wb25lbnQnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkb2NzRXh0ZW5kcyBQb0NsZWFuQmFzZUNvbXBvbmVudFxuICpcbiAqIEBleGFtcGxlUHJpdmF0ZVxuICpcbiAqIDxleGFtcGxlLXByaXZhdGUgbmFtZT1cInBvLWNsZWFuLWxhYnNcIiB0aXRsZT1cIlBPIENsZWFuIExhYnNcIj5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jbGVhbi1sYWJzLmNvbXBvbmVudC5odG1sXCI+IDwvZmlsZT5cbiAqICAgPGZpbGUgbmFtZT1cInNhbXBsZS1wby1jbGVhbi1sYWJzLmNvbXBvbmVudC50c1wiPiA8L2ZpbGU+XG4gKiA8L2V4YW1wbGUtcHJpdmF0ZT5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tY2xlYW4nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tY2xlYW4uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBvQ2xlYW5Db21wb25lbnQgZXh0ZW5kcyBQb0NsZWFuQmFzZUNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlld1JlZjogVmlld0NvbnRhaW5lclJlZikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5wYXJlbnRDb21wb25lbnQgPSBnZXRQYXJlbnRSZWYodGhpcy52aWV3UmVmKTtcbiAgfVxuXG4gIHNldElucHV0VmFsdWUodmFsdWU/OiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5pbnB1dFJlZiAmJiB0aGlzLmlucHV0UmVmLm5hdGl2ZUVsZW1lbnQpIHtcbiAgICAgIHRoaXMuaW5wdXRSZWYubmF0aXZlRWxlbWVudC52YWx1ZSA9IHZhbHVlO1xuICAgIH1cbiAgfVxuXG4gIGdldElucHV0VmFsdWUoKSB7XG4gICAgaWYgKHRoaXMuaW5wdXRSZWYgJiYgdGhpcy5pbnB1dFJlZi5uYXRpdmVFbGVtZW50KSB7XG4gICAgICByZXR1cm4gdGhpcy5pbnB1dFJlZi5uYXRpdmVFbGVtZW50LnZhbHVlO1xuICAgIH1cbiAgfVxufVxuIl19