import { __decorate, __extends, __metadata } from "tslib";
import { Component, OnDestroy, OnInit, ViewContainerRef } from '@angular/core';
import { Location } from '@angular/common';
import { NavigationEnd, Router } from '@angular/router';
import { callFunction, getFormattedLink, getParentRef, openExternalLink } from '../../utils/util';
import { PoMenuPanelBaseComponent } from './po-menu-panel-base.component';
import { PoMenuPanelItemsService } from './services/po-menu-panel-items.service';
/**
 * @docsExtends PoMenuPanelBaseComponent
 *
 * @description
 *
 * Para o menu funcionar corretamente é necessário importar o `RouterModule` e `Routes` do módulo principal de
 *  sua aplicação:
 *
 * ````
 * import { RouterModule, Routes } from '@angular/router';
 *
 * ...
 *
 * @NgModule({
 *   imports: [
 *     RouterModule,
 *     Routes,
 *     ...
 *     PoModule,
 *     ...
 *   ],
 *   declarations: [
 *     AppComponent
 *   ],
 *   providers: [],
 *   bootstrap: [AppComponent]
 * })
 * export class AppModule { }
 * ```
 *
 * Além disso é necessário criar um módulo configurando as rotas da aplicação.
 *
 * ```
 * import { NgModule } from '@angular/core';
 *
 * import { RouterModule, Routes } from '@angular/router';
 *
 * import { HelloWorldComponent } from './hello-world/hello-world.component';
 *
 * const routes: Routes = [
 *   {path: 'hello-world', component: HelloWorldComponent}
 * ];
 *
 * @NgModule({
 *   imports: [RouterModule.forRoot(routes, {useHash: true})],
 *   exports: [RouterModule]
 * })
 * export class AppRoutingModule {}
 * ```
 *
 * @example
 *
 * <example name="po-menu-panel-basic" title="PO Menu Panel Basic">
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.html"> </file>
 *   <file name="sample-po-menu-panel-basic/sample-po-menu-panel-basic.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-labs" title="PO Menu Panel Labs">
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.html"> </file>
 *   <file name="sample-po-menu-panel-labs/sample-po-menu-panel-labs.component.ts"> </file>
 * </example>
 *
 * <example name="po-menu-panel-customer" title="PO Menu Panel - Customers">
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.html"> </file>
 *   <file name="sample-po-menu-panel-customer/sample-po-menu-panel-customer.component.ts"> </file>
 * </example>
 */
var PoMenuPanelComponent = /** @class */ (function (_super) {
    __extends(PoMenuPanelComponent, _super);
    function PoMenuPanelComponent(viewRef, location, menuItemsService, router) {
        var _this = _super.call(this) || this;
        _this.location = location;
        _this.menuItemsService = menuItemsService;
        _this.router = router;
        _this.parentRef = getParentRef(viewRef);
        return _this;
    }
    PoMenuPanelComponent.prototype.ngOnDestroy = function () {
        this.itemSubscription.unsubscribe();
        this.routeSubscription.unsubscribe();
    };
    PoMenuPanelComponent.prototype.ngOnInit = function () {
        this.subscribeToMenuItem();
        this.subscribeToRoute();
    };
    PoMenuPanelComponent.prototype.activateMenuByUrl = function (urlPath, menus) {
        var _this = this;
        if (menus) {
            return menus.some(function (menu) {
                if (getFormattedLink(menu.link) === urlPath) {
                    _this.activateMenuItem(menu);
                    return true;
                }
            });
        }
    };
    PoMenuPanelComponent.prototype.activateMenuItem = function (menu) {
        this.activeMenuItem = menu;
        this.linkActive = getFormattedLink(menu.link);
        this.menuItemsService.sendToChildMenuClicked({ active: this.activeMenuItem, activatedByRoute: true });
    };
    PoMenuPanelComponent.prototype.checkActiveMenuByUrl = function (urlPath) {
        if (!this.linkActive || this.linkActive !== urlPath) {
            this.activateMenuByUrl(urlPath, this.menus);
        }
    };
    PoMenuPanelComponent.prototype.clickMenuItem = function (menu) {
        if (menu.action) {
            callFunction(menu.action, this.parentRef, menu);
        }
        if (menu.type === 'externalLink') {
            openExternalLink(menu.link);
        }
        else if (menu.type === 'internalLink') {
            this.activateMenuItem(menu);
        }
    };
    PoMenuPanelComponent.prototype.subscribeToRoute = function () {
        var _this = this;
        this.routeSubscription = this.router.events.subscribe(function (rounterEvent) {
            if (rounterEvent instanceof NavigationEnd) {
                _this.checkActiveMenuByUrl(_this.location.path());
            }
        });
    };
    PoMenuPanelComponent.prototype.subscribeToMenuItem = function () {
        var _this = this;
        this.itemSubscription = this.menuItemsService
            .receiveFromChildMenuClicked()
            .subscribe(function (menu) { return _this.clickMenuItem(menu); });
    };
    PoMenuPanelComponent.ctorParameters = function () { return [
        { type: ViewContainerRef },
        { type: Location },
        { type: PoMenuPanelItemsService },
        { type: Router }
    ]; };
    PoMenuPanelComponent = __decorate([
        Component({
            selector: 'po-menu-panel',
            template: "<div class=\"po-menu-panel\">\n  <div class=\"po-menu-panel-logo-container\">\n    <a href=\"./\">\n      <div class=\"po-menu-panel-logo\"></div>\n    </a>\n  </div>\n\n  <nav class=\"po-menu-panel-container\">\n    <div class=\"po-menu-panel-inner\">\n      <div *ngFor=\"let menu of menus; let menuIndex = index\" class=\"po-menu-panel-item-wrapper\">\n        <po-menu-panel-item [class.po-menu-panel-item-first]=\"menuIndex === 0\" [p-menu-item-internal]=\"menu\">\n        </po-menu-panel-item>\n      </div>\n    </div>\n  </nav>\n</div>\n"
        }),
        __metadata("design:paramtypes", [ViewContainerRef,
            Location,
            PoMenuPanelItemsService,
            Router])
    ], PoMenuPanelComponent);
    return PoMenuPanelComponent;
}(PoMenuPanelBaseComponent));
export { PoMenuPanelComponent };
//# sourceMappingURL=data:application/json;base64,