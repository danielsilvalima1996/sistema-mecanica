import { __decorate, __metadata } from "tslib";
import { EventEmitter, Input, Output, ViewChild, Directive } from '@angular/core';
import { throwError } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { browserLanguage, isTypeof, poLocaleDefault } from '../../../../utils/util';
import { PoModalComponent } from '../../../../components/po-modal/po-modal.component';
import { PoTableColumnSortType } from '../../../po-table';
import { poTableLiteralsDefault } from '../../../po-table/po-table-base.component';
export const poLookupLiteralsDefault = {
    en: {
        modalPrimaryActionLabel: 'Select',
        modalSecondaryActionLabel: 'Cancel',
        modalPlaceholder: 'Search',
        modalTitle: 'Select a record',
        modalTableNoColumns: poTableLiteralsDefault.en.noColumns,
        modalTableNoData: poTableLiteralsDefault.en.noData,
        modalTableLoadingData: poTableLiteralsDefault.en.loadingData,
        modalTableLoadMoreData: poTableLiteralsDefault.en.loadMoreData
    },
    es: {
        modalPrimaryActionLabel: 'Seleccionar',
        modalSecondaryActionLabel: 'Cancelar',
        modalPlaceholder: 'Buscar',
        modalTitle: 'Seleccione un registro',
        modalTableNoColumns: poTableLiteralsDefault.es.noColumns,
        modalTableNoData: poTableLiteralsDefault.es.noData,
        modalTableLoadingData: poTableLiteralsDefault.es.loadingData,
        modalTableLoadMoreData: poTableLiteralsDefault.es.loadMoreData
    },
    pt: {
        modalPrimaryActionLabel: 'Selecionar',
        modalSecondaryActionLabel: 'Cancelar',
        modalPlaceholder: 'Pesquisar',
        modalTitle: 'Selecione um registro',
        modalTableNoColumns: poTableLiteralsDefault.pt.noColumns,
        modalTableNoData: poTableLiteralsDefault.pt.noData,
        modalTableLoadingData: poTableLiteralsDefault.pt.loadingData,
        modalTableLoadMoreData: poTableLiteralsDefault.pt.loadMoreData
    },
    ru: {
        modalPrimaryActionLabel: 'выбирать',
        modalSecondaryActionLabel: 'отменить',
        modalPlaceholder: 'поиск',
        modalTitle: 'Выберите запись',
        modalTableNoColumns: poTableLiteralsDefault.ru.noColumns,
        modalTableNoData: poTableLiteralsDefault.ru.noData,
        modalTableLoadingData: poTableLiteralsDefault.ru.loadingData,
        modalTableLoadMoreData: poTableLiteralsDefault.ru.loadMoreData
    }
};
/**
 * @docsPrivate
 *
 * Classe base do componente Po Lookup Modal.
 */
let PoLookupModalBaseComponent = class PoLookupModalBaseComponent {
    constructor() {
        this.hasNext = true;
        this.isLoading = false;
        this.page = 1;
        this.pageSize = 10;
        this.primaryAction = {
            action: () => {
                this.items.forEach(element => {
                    if (element['$selected']) {
                        this.model.emit(element);
                        this.poModal.close();
                    }
                });
            },
            label: this.literals.modalPrimaryActionLabel
        };
        this.searchValue = '';
        this.secondaryAction = {
            action: () => {
                this.model.emit(null);
                this.poModal.close();
            },
            label: this.literals.modalSecondaryActionLabel
        };
        /** Evento utilizado ao selecionar um registro da tabela. */
        this.model = new EventEmitter();
    }
    /** Objeto com as literais usadas no `po-lookup-modal`. */
    set literals(value) {
        if (value instanceof Object && !(value instanceof Array)) {
            this._literals = Object.assign(Object.assign(Object.assign({}, poLookupLiteralsDefault[poLocaleDefault]), poLookupLiteralsDefault[browserLanguage()]), value);
            if (value.modalTitle) {
                this.title = this.literals.modalTitle;
            }
        }
        else {
            this._literals = poLookupLiteralsDefault[browserLanguage()];
        }
        this.primaryAction.label = this.literals.modalPrimaryActionLabel;
        this.secondaryAction.label = this.literals.modalSecondaryActionLabel;
        this.setTableLiterals();
    }
    get literals() {
        return this._literals || poLookupLiteralsDefault[browserLanguage()];
    }
    /** Título da modal. */
    set title(value) {
        this._title = isTypeof(value, 'string') ? value : this.literals.modalTitle;
    }
    get title() {
        return this._title;
    }
    ngOnDestroy() {
        if (this.filterSubscription) {
            this.filterSubscription.unsubscribe();
        }
        if (this.searchSubscription) {
            this.searchSubscription.unsubscribe();
        }
        if (this.showMoreSubscription) {
            this.showMoreSubscription.unsubscribe();
        }
    }
    ngOnInit() {
        this.initializeData();
        this.setTableLiterals();
    }
    search() {
        this.page = 1;
        if (this.searchValue) {
            this.isLoading = true;
            this.searchSubscription = this.getFilteredItems(this.searchValue)
                .pipe(catchError(error => {
                this.setLookupResponseProperties();
                return throwError(error);
            }))
                .subscribe((data) => this.setLookupResponseProperties(data), () => { });
        }
        else {
            this.initializeData();
        }
    }
    showMoreEvent() {
        this.page++;
        this.isLoading = true;
        this.showMoreSubscription = this.getFilteredItems(this.searchValue)
            .pipe(catchError(error => {
            this.hasNext = false;
            this.isLoading = false;
            return throwError(error);
        }))
            .subscribe((data) => {
            this.items = [...this.items, ...data.items];
            this.hasNext = data.hasNext;
            this.isLoading = false;
        }, () => { });
    }
    getFilteredItems(filter) {
        const { page, pageSize, filterParams } = this;
        if (this.filterService.getFilteredItems) {
            const filteredParams = this.getFilteredParams(filter);
            return this.filterService.getFilteredItems(filteredParams);
        }
        return this.filterService.getFilteredData(filter, page, pageSize, filterParams);
    }
    getFilteredParams(filter) {
        const { page, pageSize, filterParams, sort } = this;
        const filteredParams = {};
        const order = this.getOrderParam(sort);
        const params = { filter, page, pageSize, order, filterParams };
        for (const key in params) {
            if (params.hasOwnProperty(key) && params[key]) {
                filteredParams[key] = params[key];
            }
        }
        return filteredParams;
    }
    getOrderParam(sort = { type: undefined }) {
        const { column, type } = sort;
        if (!column) {
            return;
        }
        if (type === PoTableColumnSortType.Descending) {
            return `-${column.property}`;
        }
        return `${column.property}`;
    }
    initializeData() {
        this.isLoading = true;
        this.filterSubscription = this.getFilteredItems('').subscribe(data => {
            this.setLookupResponseProperties(data);
        });
    }
    setLookupResponseProperties(data) {
        var _a, _b;
        this.items = (_a = data === null || data === void 0 ? void 0 : data.items) !== null && _a !== void 0 ? _a : [];
        this.hasNext = (_b = data === null || data === void 0 ? void 0 : data.hasNext) !== null && _b !== void 0 ? _b : false;
        this.isLoading = false;
    }
    setTableLiterals() {
        this.tableLiterals = {
            'noColumns': this.literals.modalTableNoColumns,
            'noData': this.literals.modalTableNoData,
            'loadingData': this.literals.modalTableLoadingData,
            'loadMoreData': this.literals.modalTableLoadMoreData
        };
    }
};
__decorate([
    ViewChild(PoModalComponent, { static: true }),
    __metadata("design:type", PoModalComponent)
], PoLookupModalBaseComponent.prototype, "poModal", void 0);
__decorate([
    Input('p-columns'),
    __metadata("design:type", Array)
], PoLookupModalBaseComponent.prototype, "columns", void 0);
__decorate([
    Input('p-items'),
    __metadata("design:type", Array)
], PoLookupModalBaseComponent.prototype, "items", void 0);
__decorate([
    Input('p-literals'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], PoLookupModalBaseComponent.prototype, "literals", null);
__decorate([
    Input('p-title'),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PoLookupModalBaseComponent.prototype, "title", null);
__decorate([
    Input('p-filter-service'),
    __metadata("design:type", Object)
], PoLookupModalBaseComponent.prototype, "filterService", void 0);
__decorate([
    Input('p-filter-params'),
    __metadata("design:type", Object)
], PoLookupModalBaseComponent.prototype, "filterParams", void 0);
__decorate([
    Output('p-change-model'),
    __metadata("design:type", EventEmitter)
], PoLookupModalBaseComponent.prototype, "model", void 0);
PoLookupModalBaseComponent = __decorate([
    Directive()
], PoLookupModalBaseComponent);
export { PoLookupModalBaseComponent };
//# sourceMappingURL=data:application/json;base64,