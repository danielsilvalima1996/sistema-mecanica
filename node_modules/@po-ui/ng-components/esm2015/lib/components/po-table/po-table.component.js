import { __decorate, __metadata } from "tslib";
import { AfterViewInit, ChangeDetectorRef, Component, ContentChild, DoCheck, ElementRef, IterableDiffers, OnDestroy, QueryList, Renderer2, ViewChild, ViewChildren, ViewContainerRef, ContentChildren, TemplateRef } from '@angular/core';
import { DecimalPipe } from '@angular/common';
import { Router } from '@angular/router';
import { convertToBoolean, getParentRef } from '../../utils/util';
import { PoDateService } from '../../services/po-date/po-date.service';
import { PoPopupComponent } from '../po-popup/po-popup.component';
import { PoTableBaseComponent } from './po-table-base.component';
import { PoTableRowTemplateDirective } from './po-table-row-template/po-table-row-template.directive';
import { PoTableCellTemplateDirective } from './po-table-cell-template/po-table-cell-template.directive';
import { PoTableColumnTemplateDirective } from './po-table-column-template/po-table-column-template.directive';
/**
 * @docsExtends PoTableBaseComponent
 *
 * @example
 *
 * <example name="po-table-basic" title="PO Table Basic">
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.ts"> </file>
 *  <file name="sample-po-table-basic/sample-po-table-basic.component.html"> </file>
 * </example>
 *
 * <example name="po-table-labs" title="PO Table Labs">
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.html"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.e2e-spec.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.component.po.ts"> </file>
 *  <file name="sample-po-table-labs/sample-po-table-labs.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-transport" title="PO Table - Transport">
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.ts"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.component.html"> </file>
 *  <file name="sample-po-table-transport/sample-po-table-transport.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-airfare" title="PO Table - Airfare">
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.ts"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.component.html"> </file>
 *  <file name="sample-po-table-airfare/sample-po-table-airfare.service.ts"> </file>
 * </example>
 *
 * <example name="po-table-components" title="PO Table - Po Field Components">
 *  <file name="sample-po-table-components/sample-po-table-components.component.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.enum.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.component.html"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.service.ts"> </file>
 *  <file name="sample-po-table-components/sample-po-table-components.component.css"> </file>
 * </example>
 */
let PoTableComponent = class PoTableComponent extends PoTableBaseComponent {
    constructor(poDate, differs, viewRef, renderer, changeDetector, decimalPipe, router) {
        super(poDate);
        this.changeDetector = changeDetector;
        this.decimalPipe = decimalPipe;
        this.router = router;
        this.tableOpacity = 0;
        this.initialized = false;
        this.visibleElement = false;
        this.parentRef = getParentRef(viewRef);
        this.differ = differs.find([]).create(null);
        // TODO: #5550 ao remover este listener, no portal, quando as colunas forem fixas não sofrem
        // alteração de largura, pois o ngDoCheck não é executado.
        this.clickListener = renderer.listen('document', 'click', () => { });
        this.resizeListener = renderer.listen('window', 'resize', (event) => {
            this.debounceResize();
        });
    }
    set columnManagerTarget(value) {
        this._columnManagerTarget = value;
        this.changeDetector.detectChanges();
    }
    get columnManagerTarget() {
        return this._columnManagerTarget;
    }
    get columnCount() {
        const columnCount = this.mainColumns.length +
            (this.actions.length > 0 ? 1 : 0) +
            (this.selectable ? 1 : 0) +
            (!this.hideDetail && this.columnMasterDetail !== undefined ? 1 : 0);
        return columnCount || 1;
    }
    get columnCountForMasterDetail() {
        // caso tiver ações será utilizado a sua coluna para exibir o columnManager
        const columnManager = this.actions.length ? 0 : 1;
        return this.mainColumns.length + 1 + (this.actions.length > 0 ? 1 : 0) + (this.selectable ? 1 : 0) + columnManager;
    }
    get detailHideSelect() {
        const masterDetail = this.columnMasterDetail;
        return masterDetail && masterDetail.detail ? masterDetail.detail.hideSelect : false;
    }
    get displayColumnManagerCell() {
        return !this.visibleActions.length;
    }
    get firstAction() {
        return this.visibleActions && this.visibleActions[0];
    }
    get hasFooter() {
        return this.hasItems && this.hasVisibleSubtitleColumns;
    }
    get hasMasterDetailColumn() {
        return (this.hasMainColumns && this.hasItems && !this.hideDetail && !!(this.columnMasterDetail || this.hasRowTemplate));
    }
    get hasRowTemplate() {
        return !!this.tableRowTemplate;
    }
    get hasSelectableColumn() {
        return this.selectable && this.hasItems && this.hasMainColumns;
    }
    get hasValidColumns() {
        return !!this.validColumns.length;
    }
    get hasVisibleSubtitleColumns() {
        return this.subtitleColumns.some(column => column.visible !== false);
    }
    get isSingleAction() {
        return this.visibleActions.length === 1;
    }
    get visibleActions() {
        return this.actions && this.actions.filter(action => action.visible !== false);
    }
    ngAfterViewInit() {
        this.initialized = true;
    }
    ngDoCheck() {
        var _a;
        this.checkChangesItems();
        this.verifyCalculateHeightTableContainer();
        // Permite que os cabeçalhos sejam calculados na primeira vez que o componente torna-se visível,
        // evitando com isso, problemas com Tabs ou Divs que iniciem escondidas.
        if (((_a = this.tableWrapperElement) === null || _a === void 0 ? void 0 : _a.nativeElement.offsetWidth) && !this.visibleElement && this.initialized) {
            this.debounceResize();
            this.visibleElement = true;
        }
    }
    ngOnDestroy() {
        this.removeListeners();
    }
    checkDisabled(row, column) {
        return column.disabled ? column.disabled(row) : false;
    }
    containsMasterDetail(row) {
        return row[this.nameColumnDetail] && row[this.nameColumnDetail].length;
    }
    executeTableAction(row, tableAction) {
        if (!row.disabled && !this.validateTableAction(row, tableAction)) {
            tableAction.action.call(this.parentRef, row);
            this.toggleRowAction(row);
        }
    }
    formatNumber(value, format) {
        if (!format) {
            return value;
        }
        return this.decimalPipe.transform(value, format);
    }
    getBooleanLabel(rowValue, columnBoolean) {
        if (rowValue || rowValue === false || rowValue === 0) {
            rowValue = convertToBoolean(rowValue);
            if (columnBoolean.boolean) {
                return rowValue ? columnBoolean.boolean.trueLabel || 'Sim' : columnBoolean.boolean.falseLabel || 'Não';
            }
            else {
                return rowValue ? 'Sim' : 'Não';
            }
        }
        return rowValue;
    }
    getColumnIcons(row, column) {
        const rowIcons = row[column.property];
        if (column.icons) {
            if (Array.isArray(rowIcons)) {
                return this.mergeCustomIcons(rowIcons, column.icons);
            }
            else {
                return this.findCustomIcon(rowIcons, column);
            }
        }
        return rowIcons;
    }
    getColumnLabel(row, columnLabel) {
        return columnLabel.labels.find(labelItem => row[columnLabel.property] === labelItem.value);
    }
    getSubtitleColumn(row, subtitleColumn) {
        return subtitleColumn.subtitles.find(subtitleItem => row[subtitleColumn.property] === subtitleItem.value);
    }
    isShowMasterDetail(row) {
        return (!this.hideDetail &&
            this.nameColumnDetail &&
            row.$showDetail &&
            this.containsMasterDetail(row) &&
            !this.hasRowTemplate);
    }
    isShowRowTemplate(row, index) {
        if (this.tableRowTemplate && this.tableRowTemplate.poTableRowTemplateShow) {
            return this.tableRowTemplate.poTableRowTemplateShow(row, index);
        }
        return true;
    }
    onClickLink(event, row, column) {
        if (!this.checkDisabled(row, column)) {
            event.stopPropagation();
        }
    }
    onVisibleColumnsChange(columns) {
        this.columns = columns;
        this.changeDetector.detectChanges();
    }
    tooltipMouseEnter(event, column, row) {
        this.tooltipText = undefined;
        if (this.hideTextOverflow && event.target.offsetWidth < event.target.scrollWidth && event.target.innerText.trim()) {
            return (this.tooltipText = event.target.innerText);
        }
        if (column) {
            this.checkingIfColumnHasTooltip(column, row);
        }
    }
    tooltipMouseLeave() {
        this.tooltipText = undefined;
    }
    togglePopup(row, targetRef) {
        this.popupTarget = targetRef;
        this.changeDetector.detectChanges();
        this.poPopupComponent.toggle(row);
    }
    trackBy(index) {
        return index;
    }
    validateTableAction(row, tableAction) {
        if (typeof tableAction.disabled === 'function') {
            return tableAction.disabled.call(this.parentRef, row);
        }
        else {
            return tableAction.disabled;
        }
    }
    calculateHeightTableContainer(height) {
        const value = parseFloat(height);
        this.heightTableContainer = value ? value - this.getHeightTableFooter() : undefined;
        this.setTableOpacity(1);
        this.changeDetector.detectChanges();
    }
    calculateWidthHeaders() {
        setTimeout(() => {
            if (this.height) {
                this.headersTable.forEach(header => {
                    const divHeader = header.nativeElement.querySelector('.po-table-header-fixed-inner');
                    if (divHeader) {
                        divHeader.style.width = `${header.nativeElement.offsetWidth}px`;
                    }
                });
            }
        });
    }
    checkChangesItems() {
        const changesItems = this.differ.diff(this.items);
        if (changesItems && this.selectAll) {
            this.selectAll = null;
        }
        if (changesItems && !this.hasColumns && this.hasItems) {
            this.columns = this.getDefaultColumns(this.items[0]);
        }
    }
    checkingIfColumnHasTooltip(column, row) {
        if (column.type === 'link' && column.tooltip && !this.checkDisabled(row, column)) {
            return (this.tooltipText = column.tooltip);
        }
        if (column.type === 'label') {
            const columnLabel = this.getColumnLabel(row, column);
            return (this.tooltipText = columnLabel === null || columnLabel === void 0 ? void 0 : columnLabel.tooltip);
        }
    }
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(() => {
            this.calculateWidthHeaders();
            // show the table
            this.setTableOpacity(1);
        });
    }
    findCustomIcon(rowIcons, column) {
        const customIcon = column.icons.find(icon => rowIcons === icon.value);
        return customIcon ? [customIcon] : undefined;
    }
    getHeightTableFooter() {
        return this.tableFooterElement ? this.tableFooterElement.nativeElement.offsetHeight : 0;
    }
    mergeCustomIcons(rowIcons, customIcons) {
        const mergedIcons = [];
        rowIcons.forEach(columnValue => {
            const foundCustomIcon = customIcons.find(customIcon => columnValue === customIcon.icon || columnValue === customIcon.value);
            foundCustomIcon ? mergedIcons.push(foundCustomIcon) : mergedIcons.push(columnValue);
        });
        return mergedIcons;
    }
    removeListeners() {
        if (this.resizeListener) {
            this.resizeListener();
        }
        if (this.clickListener) {
            this.clickListener();
        }
    }
    setTableOpacity(value) {
        this.tableOpacity = value;
    }
    verifyChangeHeightInFooter() {
        return this.footerHeight !== this.getHeightTableFooter();
    }
    verifyCalculateHeightTableContainer() {
        if (this.height && this.verifyChangeHeightInFooter()) {
            this.footerHeight = this.getHeightTableFooter();
            this.calculateHeightTableContainer(this.height);
        }
    }
    getTemplate(column) {
        const template = this.tableColumnTemplates.find(tableColumnTemplate => {
            return tableColumnTemplate.targetProperty === column.property;
        });
        if (!template) {
            console.warn(`Não foi possível encontrar o template para a coluna: ${column.property}, por gentileza informe a propriedade [p-property]`);
            return null;
        }
        return template.templateRef;
    }
};
PoTableComponent.ctorParameters = () => [
    { type: PoDateService },
    { type: IterableDiffers },
    { type: ViewContainerRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: DecimalPipe },
    { type: Router }
];
__decorate([
    ContentChild(PoTableRowTemplateDirective, { static: true }),
    __metadata("design:type", PoTableRowTemplateDirective)
], PoTableComponent.prototype, "tableRowTemplate", void 0);
__decorate([
    ContentChild(PoTableCellTemplateDirective),
    __metadata("design:type", PoTableCellTemplateDirective)
], PoTableComponent.prototype, "tableCellTemplate", void 0);
__decorate([
    ContentChildren(PoTableColumnTemplateDirective),
    __metadata("design:type", QueryList)
], PoTableComponent.prototype, "tableColumnTemplates", void 0);
__decorate([
    ViewChild('columnManagerTarget'),
    __metadata("design:type", ElementRef),
    __metadata("design:paramtypes", [ElementRef])
], PoTableComponent.prototype, "columnManagerTarget", null);
__decorate([
    ViewChild('noColumnsHeader', { read: ElementRef }),
    __metadata("design:type", Object)
], PoTableComponent.prototype, "noColumnsHeader", void 0);
__decorate([
    ViewChild('popup'),
    __metadata("design:type", PoPopupComponent)
], PoTableComponent.prototype, "poPopupComponent", void 0);
__decorate([
    ViewChild('tableFooter', { read: ElementRef, static: false }),
    __metadata("design:type", Object)
], PoTableComponent.prototype, "tableFooterElement", void 0);
__decorate([
    ViewChild('tableWrapper', { read: ElementRef, static: false }),
    __metadata("design:type", Object)
], PoTableComponent.prototype, "tableWrapperElement", void 0);
__decorate([
    ViewChildren('actionsIconElement', { read: ElementRef }),
    __metadata("design:type", QueryList)
], PoTableComponent.prototype, "actionsIconElement", void 0);
__decorate([
    ViewChildren('actionsElement', { read: ElementRef }),
    __metadata("design:type", QueryList)
], PoTableComponent.prototype, "actionsElement", void 0);
__decorate([
    ViewChildren('headersTable'),
    __metadata("design:type", QueryList)
], PoTableComponent.prototype, "headersTable", void 0);
PoTableComponent = __decorate([
    Component({
        selector: 'po-table',
        template: "<po-container *ngIf=\"container; else tableContainerTemplate\" p-no-padding [p-no-shadow]=\"container === 'border'\">\n  <ng-container *ngTemplateOutlet=\"tableContainerTemplate\"></ng-container>\n</po-container>\n\n<ng-template #tableContainerTemplate>\n  <div [class.po-table-container-relative]=\"loading\">\n    <div *ngIf=\"loading\" class=\"po-table-overlay\">\n      <po-loading class=\"po-table-overlay-content\" [p-text]=\"literals.loadingData\"></po-loading>\n    </div>\n\n    <div class=\"po-table-main-container\">\n      <div\n        #tableWrapper\n        class=\"po-table-wrapper\"\n        [class.po-table-header-fixed-columns-pixels]=\"allColumnsWidthPixels\"\n        [style.opacity]=\"tableOpacity\"\n      >\n        <div *ngIf=\"height\" class=\"po-table-container\" [style.height.px]=\"heightTableContainer\">\n          <div class=\"po-table-header-fixed po-table-header\"></div>\n          <div class=\"po-table-container-fixed-inner\">\n            <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n          </div>\n        </div>\n\n        <div *ngIf=\"!height\">\n          <ng-container *ngTemplateOutlet=\"tableTemplate\"></ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"po-table-footer\" *ngIf=\"hasFooter\">\n    <ng-container *ngFor=\"let column of subtitleColumns; trackBy: trackBy\">\n      <po-table-subtitle-footer [p-literals]=\"literals\" [p-subtitles]=\"column.subtitles\"> </po-table-subtitle-footer>\n    </ng-container>\n  </div>\n</ng-template>\n\n<div class=\"po-row po-table-footer-show-more\" [class.po-invisible]=\"showMore.observers.length === 0\" #tableFooter>\n  <po-button\n    class=\"po-offset-xl-4 po-offset-lg-4 po-offset-md-3 po-lg-4 po-md-6\"\n    [p-disabled]=\"showMoreDisabled\"\n    [p-label]=\"literals.loadMoreData\"\n    (p-click)=\"onShowMore()\"\n  >\n  </po-button>\n</div>\n\n<ng-template #tableTemplate>\n  <table class=\"po-table\" [class.po-table-striped]=\"striped\" [class.po-table-layout-fixed]=\"hideTextOverflow\">\n    <thead>\n      <tr [class.po-table-header]=\"!height\">\n        <th *ngIf=\"hasSelectableColumn\" class=\"po-table-column-selectable\">\n          <div [class.po-table-header-fixed-inner]=\"height\">\n            <input\n              *ngIf=\"!hideSelectAll\"\n              type=\"checkbox\"\n              class=\"po-table-checkbox\"\n              [class.po-table-checkbox-checked]=\"selectAll\"\n              [class.po-table-checkbox-indeterminate]=\"selectAll === null\"\n            />\n            <label *ngIf=\"!hideSelectAll\" class=\"po-table-checkbox-label po-clickable\" (click)=\"selectAllRows()\">\n            </label>\n          </div>\n        </th>\n\n        <th *ngIf=\"hasMasterDetailColumn\" class=\"po-table-header-column po-table-header-master-detail\"></th>\n\n        <th *ngIf=\"!hasMainColumns\" #noColumnsHeader class=\"po-table-header-column po-text-center\">\n          <ng-container *ngIf=\"height; then noColumnsWithHeight; else noColumnsWithoutHeight\"> </ng-container>\n        </th>\n\n        <th\n          *ngFor=\"let column of mainColumns; let i = index; trackBy: trackBy\"\n          #headersTable\n          class=\"po-table-header-ellipsis\"\n          [style.width]=\"column.width\"\n          [style.max-width]=\"column.width\"\n          [style.min-width]=\"column.width\"\n          [class.po-clickable]=\"sort\"\n          [class.po-table-column-right]=\"column.type === 'currency' || column.type === 'number'\"\n          [class.po-table-header-subtitle]=\"column.type === 'subtitle'\"\n          (click)=\"sortColumn(column)\"\n        >\n          <div [class.po-table-header-fixed-inner]=\"height\">\n            <ng-container *ngTemplateOutlet=\"contentHeaderTemplate; context: { $implicit: column }\"> </ng-container>\n          </div>\n        </th>\n\n        <th\n          *ngIf=\"!displayColumnManagerCell && hideColumnsManager\"\n          [class.po-table-header-single-action]=\"isSingleAction\"\n          [class.po-table-header-actions]=\"!isSingleAction\"\n        ></th>\n        <th\n          #columnManager\n          *ngIf=\"hasValidColumns && !hideColumnsManager\"\n          [class.po-table-header-column-manager]=\"!isSingleAction\"\n          [class.po-table-header-column-manager-border]=\"!height && container\"\n          [class.po-table-header-single-action]=\"isSingleAction\"\n        >\n          <div\n            [class.po-table-header-column-manager-border]=\"height && container\"\n            [class.po-table-header-column-manager-fixed-inner]=\"height\"\n            [style.width.px]=\"height && visibleActions.length ? columnManager.offsetWidth : undefined\"\n          >\n            <button\n              #columnManagerTarget\n              class=\"po-table-header-column-manager-button po-icon po-icon-settings po-clickable\"\n              p-tooltip-position=\"left\"\n              [p-tooltip]=\"literals.columnsManager\"\n            ></button>\n          </div>\n        </th>\n      </tr>\n    </thead>\n\n    <tbody class=\"po-table-group-row\" *ngIf=\"!hasItems || !hasMainColumns\">\n      <tr class=\"po-table-row\">\n        <td [colSpan]=\"columnCount\" class=\"po-table-no-data po-text-center\">\n          <span> {{ literals.noData }} </span>\n        </td>\n      </tr>\n    </tbody>\n\n    <ng-container *ngIf=\"hasMainColumns\">\n      <tbody class=\"po-table-group-row\" *ngFor=\"let row of items; let rowIndex = index; trackBy: trackBy\">\n        <tr class=\"po-table-row\" [class.po-table-row-active]=\"row.$selected || (row.$selected === null && selectable)\">\n          <td *ngIf=\"selectable\" class=\"po-table-column po-table-column-selectable\">\n            <ng-container *ngTemplateOutlet=\"singleSelect ? inputRadio : inputCheckbox; context: { $implicit: row }\">\n            </ng-container>\n          </td>\n          <td\n            *ngIf=\"(columnMasterDetail && !hideDetail) || hasRowTemplate\"\n            class=\"po-table-column-detail-toggle\"\n            (click)=\"toggleDetail(row)\"\n          >\n            <span\n              *ngIf=\"\n                (containsMasterDetail(row) && !hasRowTemplate) || (isShowRowTemplate(row, rowIndex) && hasRowTemplate)\n              \"\n              class=\"po-icon po-clickable\"\n              [class.po-icon-arrow-up]=\"row.$showDetail\"\n              [class.po-icon-arrow-down]=\"!row.$showDetail\"\n            >\n            </span>\n          </td>\n\n          <td\n            *ngFor=\"let column of mainColumns; let columnIndex = index; trackBy: trackBy\"\n            [style.width]=\"column.width\"\n            [style.max-width]=\"column.width\"\n            [style.min-width]=\"column.width\"\n            [class.po-table-column]=\"column.type !== 'icon'\"\n            [class.po-table-column-right]=\"column.type == 'currency' || column.type == 'number'\"\n            [class.po-table-column-center]=\"column.type === 'subtitle'\"\n            [class.po-table-column-icons]=\"column.type === 'icon'\"\n            [ngClass]=\"getClassColor(row, column)\"\n            (click)=\"selectable ? selectRow(row) : 'javascript:;'\"\n          >\n            <div\n              class=\"po-table-column-cell\"\n              [class.po-table-body-ellipsis]=\"hideTextOverflow\"\n              [ngSwitch]=\"column.type\"\n              [p-tooltip]=\"tooltipText\"\n              (mouseenter)=\"tooltipMouseEnter($event, column, row)\"\n              (mouseleave)=\"tooltipMouseLeave()\"\n            >\n              <span *ngSwitchCase=\"'columnTemplate'\">\n                <ng-container *ngTemplateOutlet=\"getTemplate(column); context: { $implicit: row[column.property] }\">\n                </ng-container>\n              </span>\n\n              <span *ngSwitchCase=\"'cellTemplate'\">\n                <ng-container *ngTemplateOutlet=\"tableCellTemplate?.templateRef; context: { row: row, column: column }\">\n                </ng-container>\n              </span>\n\n              <span *ngSwitchCase=\"'boolean'\">\n                {{ getBooleanLabel(row[column.property], column) }}\n              </span>\n\n              <span *ngSwitchCase=\"'currency'\">\n                {{ row[column.property] | currency: column.format:'symbol':'1.2-2' }}\n              </span>\n\n              <span *ngSwitchCase=\"'date'\">\n                {{ row[column.property] | date: column.format || 'dd/MM/yyyy' }}\n              </span>\n\n              <span *ngSwitchCase=\"'time'\">\n                {{ row[column.property] | po_time: column.format || 'HH:mm:ss.ffffff' }}\n              </span>\n\n              <span *ngSwitchCase=\"'dateTime'\">\n                {{ row[column.property] | date: column.format || 'dd/MM/yyyy HH:mm:ss' }}\n              </span>\n\n              <span *ngSwitchCase=\"'number'\">\n                {{ formatNumber(row[column.property], column.format) }}\n              </span>\n\n              <po-table-column-link\n                *ngSwitchCase=\"'link'\"\n                [p-action]=\"column.action\"\n                [p-disabled]=\"checkDisabled(row, column)\"\n                [p-link]=\"row[column.link]\"\n                [p-row]=\"row\"\n                [p-value]=\"row[column.property]\"\n                (click)=\"onClickLink($event, row, column)\"\n              >\n              </po-table-column-link>\n\n              <po-table-column-icon\n                *ngSwitchCase=\"'icon'\"\n                [p-column]=\"column\"\n                [p-icons]=\"getColumnIcons(row, column)\"\n                [p-row]=\"row\"\n              >\n              </po-table-column-icon>\n\n              <span *ngSwitchCase=\"'subtitle'\">\n                <po-table-subtitle-circle [p-subtitle]=\"getSubtitleColumn(row, column)\"></po-table-subtitle-circle>\n              </span>\n              <span *ngSwitchCase=\"'label'\">\n                <po-table-column-label [p-value]=\"getColumnLabel(row, column)\"></po-table-column-label>\n              </span>\n              <span *ngSwitchDefault>{{ row[column.property] }}</span>\n            </div>\n          </td>\n          <td *ngIf=\"isSingleAction\" class=\"po-table-column po-table-column-single-action\">\n            <div\n              *ngIf=\"firstAction.visible !== false\"\n              class=\"po-table-single-action po-clickable\"\n              [class.po-table-action-disabled]=\"firstAction.disabled ? validateTableAction(row, firstAction) : false\"\n              (click)=\"executeTableAction(row, firstAction)\"\n            >\n              <span *ngIf=\"firstAction.icon\" class=\"po-icon {{ firstAction.icon }}\"></span>\n              {{ firstAction.label }}\n            </div>\n          </td>\n          <td *ngIf=\"visibleActions.length > 1\" class=\"po-table-column-actions\">\n            <span #popupTarget class=\"po-icon po-icon-more po-clickable\" (click)=\"togglePopup(row, popupTarget)\">\n            </span>\n          </td>\n          <!-- Column Manager -->\n          <td *ngIf=\"displayColumnManagerCell && !hideColumnsManager\" class=\"po-table-column\"></td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && hasRowTemplate && row.$showDetail && isShowRowTemplate(row, rowIndex)\">\n          <td class=\"po-table-row-template-container\" [colSpan]=\"columnCountForMasterDetail\">\n            <ng-template\n              [ngTemplateOutlet]=\"tableRowTemplate.templateRef\"\n              [ngTemplateOutletContext]=\"{ $implicit: row, rowIndex: rowIndex }\"\n            >\n            </ng-template>\n          </td>\n        </tr>\n\n        <tr *ngIf=\"hasMainColumns && isShowMasterDetail(row)\">\n          <td class=\"po-table-column-detail\" [colSpan]=\"columnCountForMasterDetail\">\n            <po-table-detail\n              [p-selectable]=\"selectable && !detailHideSelect\"\n              [p-detail]=\"columnMasterDetail.detail\"\n              [p-items]=\"row[nameColumnDetail]\"\n              (p-select-row)=\"selectDetailRow($event)\"\n            >\n            </po-table-detail>\n          </td>\n        </tr>\n      </tbody>\n    </ng-container>\n  </table>\n</ng-template>\n\n<po-popup #popup [p-actions]=\"actions\" [p-target]=\"popupTarget\"> </po-popup>\n\n<ng-template #inputRadio let-row>\n  <input type=\"radio\" class=\"po-table-radio\" [class.po-table-radio-checked]=\"row.$selected\" />\n  <label class=\"po-table-radio-label po-clickable\" (click)=\"selectable ? selectRow(row) : 'javascript:;'\"></label>\n</ng-template>\n\n<ng-template #inputCheckbox let-row>\n  <input type=\"checkbox\" class=\"po-table-checkbox\" [class.po-table-checkbox-checked]=\"row.$selected\" />\n  <label class=\"po-table-checkbox-label po-clickable\" (click)=\"selectable ? selectRow(row) : 'javascript:;'\"></label>\n</ng-template>\n\n<ng-template #contentHeaderTemplate let-column>\n  <span\n    *ngIf=\"sort\"\n    [class.po-table-header-icon-unselected]=\"sortedColumn?.property !== column\"\n    [class.po-table-header-icon-descending]=\"sortedColumn?.property === column && sortedColumn.ascending\"\n    [class.po-table-header-icon-ascending]=\"sortedColumn?.property === column && !sortedColumn.ascending\"\n  >\n  </span>\n  <span\n    class=\"po-table-header-ellipsis po-table-header-block\"\n    [p-tooltip]=\"tooltipText\"\n    (mouseenter)=\"tooltipMouseEnter($event)\"\n    (mouseleave)=\"tooltipMouseLeave()\"\n  >\n    {{ column.label || (column.property | titlecase) }}\n  </span>\n</ng-template>\n\n<ng-template #noColumnsWithHeight>\n  <div class=\"po-table-header-fixed-inner\" [style.width.px]=\"noColumnsHeader?.nativeElement.offsetWidth\">\n    {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n  </div>\n</ng-template>\n\n<ng-template #noColumnsWithoutHeight>\n  {{ hasValidColumns ? literals.noVisibleColumn : literals.noColumns }}\n</ng-template>\n\n<po-table-column-manager\n  *ngIf=\"!hideColumnsManager\"\n  [p-columns]=\"columns\"\n  [p-max-columns]=\"maxColumns\"\n  [p-target]=\"columnManagerTarget\"\n  (p-visible-columns-change)=\"onVisibleColumnsChange($event)\"\n>\n</po-table-column-manager>\n",
        providers: [PoDateService]
    }),
    __metadata("design:paramtypes", [PoDateService,
        IterableDiffers,
        ViewContainerRef,
        Renderer2,
        ChangeDetectorRef,
        DecimalPipe,
        Router])
], PoTableComponent);
export { PoTableComponent };
//# sourceMappingURL=data:application/json;base64,